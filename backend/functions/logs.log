2023-09-04 16:17:02,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-04 16:17:02,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-04 16:17:02,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-04 16:17:02,455:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-04 16:18:34,038:INFO:PyCaret RegressionExperiment
2023-09-04 16:18:34,038:INFO:Logging name: reg-default-name
2023-09-04 16:18:34,038:INFO:ML Usecase: MLUsecase.REGRESSION
2023-09-04 16:18:34,038:INFO:version 3.0.4
2023-09-04 16:18:34,038:INFO:Initializing setup()
2023-09-04 16:18:34,038:INFO:self.USI: ceb4
2023-09-04 16:18:34,038:INFO:self._variable_keys: {'seed', 'X_train', '_ml_usecase', 'logging_param', 'target_param', 'y_test', 'X', 'pipeline', 'exp_name_log', 'exp_id', 'X_test', 'n_jobs_param', 'html_param', 'y_train', '_available_plots', 'fold_generator', 'fold_shuffle_param', 'fold_groups_param', 'transform_target_param', 'data', 'y', 'log_plots_param', 'gpu_param', 'idx', 'gpu_n_jobs_param', 'USI', 'memory'}
2023-09-04 16:18:34,038:INFO:Checking environment
2023-09-04 16:18:34,038:INFO:python_version: 3.10.12
2023-09-04 16:18:34,038:INFO:python_build: ('main', 'Jun 11 2023 05:26:28')
2023-09-04 16:18:34,038:INFO:machine: x86_64
2023-09-04 16:18:34,038:INFO:platform: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-04 16:18:34,038:INFO:Memory: svmem(total=8140144640, available=1209462784, percent=85.1, used=5753319424, free=245321728, active=1709379584, inactive=5079408640, buffers=89432064, cached=2052071424, shared=864940032, slab=703905792)
2023-09-04 16:18:34,039:INFO:Physical Core: 4
2023-09-04 16:18:34,039:INFO:Logical Core: 8
2023-09-04 16:18:34,039:INFO:Checking libraries
2023-09-04 16:18:34,039:INFO:System:
2023-09-04 16:18:34,039:INFO:    python: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]
2023-09-04 16:18:34,039:INFO:executable: /bin/python
2023-09-04 16:18:34,039:INFO:   machine: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-04 16:18:34,039:INFO:PyCaret required dependencies:
2023-09-04 16:18:34,159:INFO:                 pip: 22.0.2
2023-09-04 16:18:34,159:INFO:          setuptools: 59.6.0
2023-09-04 16:18:34,159:INFO:             pycaret: 3.0.4
2023-09-04 16:18:34,159:INFO:             IPython: 7.31.1
2023-09-04 16:18:34,159:INFO:          ipywidgets: 6.0.0
2023-09-04 16:18:34,159:INFO:                tqdm: 4.65.0
2023-09-04 16:18:34,159:INFO:               numpy: 1.21.5
2023-09-04 16:18:34,160:INFO:              pandas: 1.5.2
2023-09-04 16:18:34,160:INFO:              jinja2: 3.0.3
2023-09-04 16:18:34,160:INFO:               scipy: 1.8.0
2023-09-04 16:18:34,160:INFO:              joblib: 1.2.0
2023-09-04 16:18:34,160:INFO:             sklearn: 1.2.0
2023-09-04 16:18:34,160:INFO:                pyod: 1.1.0
2023-09-04 16:18:34,160:INFO:            imblearn: 0.11.0
2023-09-04 16:18:34,160:INFO:   category_encoders: 2.6.2
2023-09-04 16:18:34,160:INFO:            lightgbm: 4.0.0
2023-09-04 16:18:34,160:INFO:               numba: 0.57.1
2023-09-04 16:18:34,160:INFO:            requests: 2.25.1
2023-09-04 16:18:34,160:INFO:          matplotlib: 3.5.1
2023-09-04 16:18:34,160:INFO:          scikitplot: 0.3.7
2023-09-04 16:18:34,160:INFO:         yellowbrick: 1.5
2023-09-04 16:18:34,160:INFO:              plotly: 5.16.1
2023-09-04 16:18:34,161:INFO:    plotly-resampler: Not installed
2023-09-04 16:18:34,161:INFO:             kaleido: 0.2.1
2023-09-04 16:18:34,161:INFO:           schemdraw: 0.15
2023-09-04 16:18:34,161:INFO:         statsmodels: 0.14.0
2023-09-04 16:18:34,161:INFO:              sktime: 0.22.0
2023-09-04 16:18:34,161:INFO:               tbats: 1.1.3
2023-09-04 16:18:34,161:INFO:            pmdarima: 2.0.3
2023-09-04 16:18:34,161:INFO:              psutil: 5.9.0
2023-09-04 16:18:34,161:INFO:          markupsafe: 2.0.1
2023-09-04 16:18:34,161:INFO:             pickle5: Not installed
2023-09-04 16:18:34,161:INFO:         cloudpickle: 2.2.1
2023-09-04 16:18:34,161:INFO:         deprecation: 2.1.0
2023-09-04 16:18:34,161:INFO:              xxhash: 3.3.0
2023-09-04 16:18:34,161:INFO:           wurlitzer: 3.0.3
2023-09-04 16:18:34,161:INFO:PyCaret optional dependencies:
2023-09-04 16:18:34,178:INFO:                shap: Not installed
2023-09-04 16:18:34,179:INFO:           interpret: Not installed
2023-09-04 16:18:34,179:INFO:                umap: Not installed
2023-09-04 16:18:34,179:INFO:    pandas_profiling: Not installed
2023-09-04 16:18:34,179:INFO:  explainerdashboard: Not installed
2023-09-04 16:18:34,179:INFO:             autoviz: Not installed
2023-09-04 16:18:34,179:INFO:           fairlearn: Not installed
2023-09-04 16:18:34,179:INFO:          deepchecks: Not installed
2023-09-04 16:18:34,179:INFO:             xgboost: Not installed
2023-09-04 16:18:34,179:INFO:            catboost: Not installed
2023-09-04 16:18:34,179:INFO:              kmodes: Not installed
2023-09-04 16:18:34,179:INFO:             mlxtend: Not installed
2023-09-04 16:18:34,179:INFO:       statsforecast: Not installed
2023-09-04 16:18:34,179:INFO:        tune_sklearn: Not installed
2023-09-04 16:18:34,179:INFO:                 ray: Not installed
2023-09-04 16:18:34,179:INFO:            hyperopt: Not installed
2023-09-04 16:18:34,179:INFO:              optuna: Not installed
2023-09-04 16:18:34,179:INFO:               skopt: Not installed
2023-09-04 16:18:34,179:INFO:              mlflow: Not installed
2023-09-04 16:18:34,179:INFO:              gradio: Not installed
2023-09-04 16:18:34,179:INFO:             fastapi: Not installed
2023-09-04 16:18:34,179:INFO:             uvicorn: Not installed
2023-09-04 16:18:34,179:INFO:              m2cgen: Not installed
2023-09-04 16:18:34,179:INFO:           evidently: Not installed
2023-09-04 16:18:34,179:INFO:               fugue: Not installed
2023-09-04 16:18:34,179:INFO:           streamlit: Not installed
2023-09-04 16:18:34,179:INFO:             prophet: Not installed
2023-09-04 16:18:34,179:INFO:None
2023-09-04 16:18:34,179:INFO:Set up data.
2023-09-04 16:18:34,229:INFO:Set up train/test split.
2023-09-04 16:18:34,244:INFO:Set up index.
2023-09-04 16:18:34,246:INFO:Set up folding strategy.
2023-09-04 16:18:34,246:INFO:Assigning column types.
2023-09-04 16:18:34,252:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-04 16:18:34,252:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,256:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,260:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,319:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,385:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,386:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:34,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:34,387:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,394:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,401:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,475:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,517:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:34,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:34,519:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-09-04 16:18:34,523:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,529:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,591:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,634:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:34,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:34,640:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,645:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,709:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,751:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,752:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:34,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:34,752:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-09-04 16:18:34,761:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,829:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,871:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:34,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:34,881:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,942:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,983:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:18:34,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:34,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:34,985:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-09-04 16:18:35,064:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:18:35,108:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:18:35,109:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:35,114:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:35,180:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:18:35,218:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:18:35,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:35,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:35,219:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-04 16:18:35,281:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:18:35,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:35,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:35,384:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:18:35,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:35,424:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:35,424:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-09-04 16:18:35,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:35,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:35,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:35,628:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:35,630:INFO:Preparing preprocessing pipeline...
2023-09-04 16:18:35,630:INFO:Set up simple imputation.
2023-09-04 16:18:35,640:INFO:Set up encoding of ordinal features.
2023-09-04 16:18:35,644:INFO:Set up encoding of categorical features.
2023-09-04 16:18:35,645:INFO:Set up column name cleaning.
2023-09-04 16:18:36,548:INFO:Finished creating preprocessing pipeline.
2023-09-04 16:18:36,588:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['workclass', 'education',
                                             'marital-status', 'occupation',
                                             'relationship', 'race', 'gender',
                                             'native...
                                    transformer=OneHotEncoder(cols=['workclass',
                                                                    'education',
                                                                    'marital-status',
                                                                    'occupation',
                                                                    'relationship',
                                                                    'race'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              handle_missing='return_nan'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-09-04 16:18:36,589:INFO:Creating final display dataframe.
2023-09-04 16:18:37,478:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            fnlwgt
2                   Target type        Regression
3           Original data shape       (48842, 15)
4        Transformed data shape       (48842, 67)
5   Transformed train set shape       (34189, 67)
6    Transformed test set shape       (14653, 67)
7              Ordinal features                 2
8              Numeric features                 5
9          Categorical features                 9
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              ceb4
2023-09-04 16:18:37,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:37,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:37,742:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:37,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:18:37,743:INFO:setup() successfully completed in 3.92s...............
2023-09-04 16:19:53,318:INFO:Initializing compare_models()
2023-09-04 16:19:53,318:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fbf2da87b50>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7fbf2da87b50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-09-04 16:19:53,318:INFO:Checking exceptions
2023-09-04 16:19:53,325:INFO:Preparing display monitor
2023-09-04 16:19:53,382:INFO:Initializing Linear Regression
2023-09-04 16:19:53,383:INFO:Total runtime is 1.2099742889404297e-05 minutes
2023-09-04 16:19:53,394:INFO:SubProcess create_model() called ==================================
2023-09-04 16:19:53,394:INFO:Initializing create_model()
2023-09-04 16:19:53,395:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fbf2da87b50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fbf603342e0>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:19:53,395:INFO:Checking exceptions
2023-09-04 16:19:53,395:INFO:Importing libraries
2023-09-04 16:19:53,395:INFO:Copying training dataset
2023-09-04 16:19:53,428:INFO:Defining folds
2023-09-04 16:19:53,429:INFO:Declaring metric variables
2023-09-04 16:19:53,441:INFO:Importing untrained model
2023-09-04 16:19:53,449:INFO:Linear Regression Imported successfully
2023-09-04 16:19:53,462:INFO:Starting cross validation
2023-09-04 16:19:53,474:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:20:03,837:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-09-04 16:20:04,840:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-09-04 16:20:04,928:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-09-04 16:20:08,911:INFO:Calculating mean and std
2023-09-04 16:20:08,922:INFO:Creating metrics dataframe
2023-09-04 16:20:09,060:INFO:Uploading results into container
2023-09-04 16:20:09,061:INFO:Uploading model into container now
2023-09-04 16:20:09,062:INFO:_master_model_container: 1
2023-09-04 16:20:09,062:INFO:_display_container: 2
2023-09-04 16:20:09,063:INFO:LinearRegression(n_jobs=-1)
2023-09-04 16:20:09,063:INFO:create_model() successfully completed......................................
2023-09-04 16:20:09,190:INFO:SubProcess create_model() end ==================================
2023-09-04 16:20:09,190:INFO:Creating metrics dataframe
2023-09-04 16:20:09,208:INFO:Initializing Lasso Regression
2023-09-04 16:20:09,208:INFO:Total runtime is 0.26376476685206096 minutes
2023-09-04 16:20:09,214:INFO:SubProcess create_model() called ==================================
2023-09-04 16:20:09,215:INFO:Initializing create_model()
2023-09-04 16:20:09,215:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fbf2da87b50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fbf603342e0>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:20:09,215:INFO:Checking exceptions
2023-09-04 16:20:09,215:INFO:Importing libraries
2023-09-04 16:20:09,216:INFO:Copying training dataset
2023-09-04 16:20:09,235:INFO:Defining folds
2023-09-04 16:20:09,236:INFO:Declaring metric variables
2023-09-04 16:20:09,242:INFO:Importing untrained model
2023-09-04 16:20:09,249:INFO:Lasso Regression Imported successfully
2023-09-04 16:20:09,263:INFO:Starting cross validation
2023-09-04 16:20:09,269:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:20:12,706:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-09-04 16:20:13,931:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-09-04 16:20:14,244:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.87s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-09-04 16:20:28,745:WARNING:/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:634: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.933e+13, tolerance: 3.475e+10
  model = cd_fast.enet_coordinate_descent(

2023-09-04 16:20:28,891:WARNING:/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:634: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 9.681e+13, tolerance: 3.432e+10
  model = cd_fast.enet_coordinate_descent(

2023-09-04 16:20:29,510:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-09-04 16:20:29,522:WARNING:/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:634: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.650e+13, tolerance: 3.437e+10
  model = cd_fast.enet_coordinate_descent(

2023-09-04 16:20:30,086:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-09-04 16:20:30,771:WARNING:/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:634: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.693e+13, tolerance: 3.478e+10
  model = cd_fast.enet_coordinate_descent(

2023-09-04 16:20:30,900:WARNING:/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:634: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.659e+13, tolerance: 3.452e+10
  model = cd_fast.enet_coordinate_descent(

2023-09-04 16:20:31,472:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-09-04 16:20:31,754:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.96s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-09-04 16:20:31,817:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:108: UserWarning: Persisting input arguments took 0.96s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-09-04 16:20:31,924:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:310: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-09-04 16:20:32,355:WARNING:/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:634: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.663e+13, tolerance: 3.440e+10
  model = cd_fast.enet_coordinate_descent(

2023-09-04 16:20:33,062:WARNING:/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:634: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.655e+13, tolerance: 3.456e+10
  model = cd_fast.enet_coordinate_descent(

2023-09-04 16:20:33,144:WARNING:/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:634: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.688e+13, tolerance: 3.482e+10
  model = cd_fast.enet_coordinate_descent(

2023-09-04 16:20:37,542:WARNING:/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:634: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.672e+13, tolerance: 3.465e+10
  model = cd_fast.enet_coordinate_descent(

2023-09-04 16:20:37,760:WARNING:/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py:634: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.662e+13, tolerance: 3.448e+10
  model = cd_fast.enet_coordinate_descent(

2023-09-04 16:20:37,958:INFO:Calculating mean and std
2023-09-04 16:20:37,959:INFO:Creating metrics dataframe
2023-09-04 16:20:38,072:INFO:Uploading results into container
2023-09-04 16:20:38,073:INFO:Uploading model into container now
2023-09-04 16:20:38,073:INFO:_master_model_container: 2
2023-09-04 16:20:38,073:INFO:_display_container: 2
2023-09-04 16:20:38,074:INFO:Lasso(random_state=123)
2023-09-04 16:20:38,074:INFO:create_model() successfully completed......................................
2023-09-04 16:20:38,162:INFO:SubProcess create_model() end ==================================
2023-09-04 16:20:38,162:INFO:Creating metrics dataframe
2023-09-04 16:20:38,181:INFO:Initializing Ridge Regression
2023-09-04 16:20:38,181:INFO:Total runtime is 0.7466447512308756 minutes
2023-09-04 16:20:38,186:INFO:SubProcess create_model() called ==================================
2023-09-04 16:20:38,187:INFO:Initializing create_model()
2023-09-04 16:20:38,187:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fbf2da87b50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fbf603342e0>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:20:38,187:INFO:Checking exceptions
2023-09-04 16:20:38,187:INFO:Importing libraries
2023-09-04 16:20:38,188:INFO:Copying training dataset
2023-09-04 16:20:38,202:INFO:Defining folds
2023-09-04 16:20:38,203:INFO:Declaring metric variables
2023-09-04 16:20:38,208:INFO:Importing untrained model
2023-09-04 16:20:38,212:INFO:Ridge Regression Imported successfully
2023-09-04 16:20:38,221:INFO:Starting cross validation
2023-09-04 16:20:38,223:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:20:41,556:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-09-04 16:20:43,115:INFO:Calculating mean and std
2023-09-04 16:20:43,116:INFO:Creating metrics dataframe
2023-09-04 16:20:43,223:INFO:Uploading results into container
2023-09-04 16:20:43,223:INFO:Uploading model into container now
2023-09-04 16:20:43,224:INFO:_master_model_container: 3
2023-09-04 16:20:43,224:INFO:_display_container: 2
2023-09-04 16:20:43,224:INFO:Ridge(random_state=123)
2023-09-04 16:20:43,224:INFO:create_model() successfully completed......................................
2023-09-04 16:20:43,306:INFO:SubProcess create_model() end ==================================
2023-09-04 16:20:43,306:INFO:Creating metrics dataframe
2023-09-04 16:20:43,324:INFO:Initializing Elastic Net
2023-09-04 16:20:43,325:INFO:Total runtime is 0.8323726415634155 minutes
2023-09-04 16:20:43,331:INFO:SubProcess create_model() called ==================================
2023-09-04 16:20:43,331:INFO:Initializing create_model()
2023-09-04 16:20:43,332:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fbf2da87b50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fbf603342e0>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:20:43,332:INFO:Checking exceptions
2023-09-04 16:20:43,332:INFO:Importing libraries
2023-09-04 16:20:43,332:INFO:Copying training dataset
2023-09-04 16:20:43,353:INFO:Defining folds
2023-09-04 16:20:43,353:INFO:Declaring metric variables
2023-09-04 16:20:43,360:INFO:Importing untrained model
2023-09-04 16:20:43,364:INFO:Elastic Net Imported successfully
2023-09-04 16:20:43,372:INFO:Starting cross validation
2023-09-04 16:20:43,374:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:20:47,401:INFO:Calculating mean and std
2023-09-04 16:20:47,403:INFO:Creating metrics dataframe
2023-09-04 16:20:47,542:INFO:Uploading results into container
2023-09-04 16:20:47,543:INFO:Uploading model into container now
2023-09-04 16:20:47,543:INFO:_master_model_container: 4
2023-09-04 16:20:47,543:INFO:_display_container: 2
2023-09-04 16:20:47,543:INFO:ElasticNet(random_state=123)
2023-09-04 16:20:47,543:INFO:create_model() successfully completed......................................
2023-09-04 16:20:47,622:INFO:SubProcess create_model() end ==================================
2023-09-04 16:20:47,622:INFO:Creating metrics dataframe
2023-09-04 16:20:47,639:INFO:Initializing Least Angle Regression
2023-09-04 16:20:47,639:INFO:Total runtime is 0.9042776902516683 minutes
2023-09-04 16:20:47,644:INFO:SubProcess create_model() called ==================================
2023-09-04 16:20:47,645:INFO:Initializing create_model()
2023-09-04 16:20:47,645:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fbf2da87b50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fbf603342e0>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:20:47,645:INFO:Checking exceptions
2023-09-04 16:20:47,645:INFO:Importing libraries
2023-09-04 16:20:47,645:INFO:Copying training dataset
2023-09-04 16:20:47,660:INFO:Defining folds
2023-09-04 16:20:47,660:INFO:Declaring metric variables
2023-09-04 16:20:47,664:INFO:Importing untrained model
2023-09-04 16:20:47,675:INFO:Least Angle Regression Imported successfully
2023-09-04 16:20:47,689:INFO:Starting cross validation
2023-09-04 16:20:47,695:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:20:49,423:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-09-04 16:20:49,734:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-09-04 16:20:50,541:INFO:Calculating mean and std
2023-09-04 16:20:50,542:INFO:Creating metrics dataframe
2023-09-04 16:20:50,697:INFO:Uploading results into container
2023-09-04 16:20:50,698:INFO:Uploading model into container now
2023-09-04 16:20:50,699:INFO:_master_model_container: 5
2023-09-04 16:20:50,699:INFO:_display_container: 2
2023-09-04 16:20:50,700:INFO:Lars(random_state=123)
2023-09-04 16:20:50,700:INFO:create_model() successfully completed......................................
2023-09-04 16:20:50,782:INFO:SubProcess create_model() end ==================================
2023-09-04 16:20:50,783:INFO:Creating metrics dataframe
2023-09-04 16:20:50,805:INFO:Initializing Lasso Least Angle Regression
2023-09-04 16:20:50,806:INFO:Total runtime is 0.9570612947146098 minutes
2023-09-04 16:20:50,812:INFO:SubProcess create_model() called ==================================
2023-09-04 16:20:50,812:INFO:Initializing create_model()
2023-09-04 16:20:50,812:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fbf2da87b50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fbf603342e0>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:20:50,812:INFO:Checking exceptions
2023-09-04 16:20:50,813:INFO:Importing libraries
2023-09-04 16:20:50,813:INFO:Copying training dataset
2023-09-04 16:20:50,863:INFO:Defining folds
2023-09-04 16:20:50,863:INFO:Declaring metric variables
2023-09-04 16:20:50,912:INFO:Importing untrained model
2023-09-04 16:20:50,933:INFO:Lasso Least Angle Regression Imported successfully
2023-09-04 16:20:50,977:INFO:Starting cross validation
2023-09-04 16:20:50,986:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:20:53,591:INFO:Calculating mean and std
2023-09-04 16:20:53,592:INFO:Creating metrics dataframe
2023-09-04 16:20:53,718:INFO:Uploading results into container
2023-09-04 16:20:53,719:INFO:Uploading model into container now
2023-09-04 16:20:53,720:INFO:_master_model_container: 6
2023-09-04 16:20:53,720:INFO:_display_container: 2
2023-09-04 16:20:53,720:INFO:LassoLars(random_state=123)
2023-09-04 16:20:53,720:INFO:create_model() successfully completed......................................
2023-09-04 16:20:53,808:INFO:SubProcess create_model() end ==================================
2023-09-04 16:20:53,808:INFO:Creating metrics dataframe
2023-09-04 16:20:53,827:INFO:Initializing Orthogonal Matching Pursuit
2023-09-04 16:20:53,827:INFO:Total runtime is 1.0074109474817912 minutes
2023-09-04 16:20:53,832:INFO:SubProcess create_model() called ==================================
2023-09-04 16:20:53,833:INFO:Initializing create_model()
2023-09-04 16:20:53,833:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fbf2da87b50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fbf603342e0>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:20:53,833:INFO:Checking exceptions
2023-09-04 16:20:53,833:INFO:Importing libraries
2023-09-04 16:20:53,833:INFO:Copying training dataset
2023-09-04 16:20:53,851:INFO:Defining folds
2023-09-04 16:20:53,851:INFO:Declaring metric variables
2023-09-04 16:20:53,860:INFO:Importing untrained model
2023-09-04 16:20:53,870:INFO:Orthogonal Matching Pursuit Imported successfully
2023-09-04 16:20:53,892:INFO:Starting cross validation
2023-09-04 16:20:53,896:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:20:55,993:INFO:Calculating mean and std
2023-09-04 16:20:55,994:INFO:Creating metrics dataframe
2023-09-04 16:20:56,127:INFO:Uploading results into container
2023-09-04 16:20:56,128:INFO:Uploading model into container now
2023-09-04 16:20:56,128:INFO:_master_model_container: 7
2023-09-04 16:20:56,129:INFO:_display_container: 2
2023-09-04 16:20:56,129:INFO:OrthogonalMatchingPursuit()
2023-09-04 16:20:56,130:INFO:create_model() successfully completed......................................
2023-09-04 16:20:56,217:INFO:SubProcess create_model() end ==================================
2023-09-04 16:20:56,217:INFO:Creating metrics dataframe
2023-09-04 16:20:56,237:INFO:Initializing Bayesian Ridge
2023-09-04 16:20:56,237:INFO:Total runtime is 1.0475837071736653 minutes
2023-09-04 16:20:56,244:INFO:SubProcess create_model() called ==================================
2023-09-04 16:20:56,244:INFO:Initializing create_model()
2023-09-04 16:20:56,244:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fbf2da87b50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fbf603342e0>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:20:56,244:INFO:Checking exceptions
2023-09-04 16:20:56,244:INFO:Importing libraries
2023-09-04 16:20:56,245:INFO:Copying training dataset
2023-09-04 16:20:56,263:INFO:Defining folds
2023-09-04 16:20:56,263:INFO:Declaring metric variables
2023-09-04 16:20:56,276:INFO:Importing untrained model
2023-09-04 16:20:56,284:INFO:Bayesian Ridge Imported successfully
2023-09-04 16:20:56,305:INFO:Starting cross validation
2023-09-04 16:20:56,312:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:20:59,058:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.87s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-09-04 16:20:59,729:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.85s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-09-04 16:21:00,093:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-09-04 16:21:00,564:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-09-04 16:21:02,313:INFO:Calculating mean and std
2023-09-04 16:21:02,314:INFO:Creating metrics dataframe
2023-09-04 16:21:02,431:INFO:Uploading results into container
2023-09-04 16:21:02,432:INFO:Uploading model into container now
2023-09-04 16:21:02,432:INFO:_master_model_container: 8
2023-09-04 16:21:02,432:INFO:_display_container: 2
2023-09-04 16:21:02,433:INFO:BayesianRidge()
2023-09-04 16:21:02,433:INFO:create_model() successfully completed......................................
2023-09-04 16:21:02,516:INFO:SubProcess create_model() end ==================================
2023-09-04 16:21:02,516:INFO:Creating metrics dataframe
2023-09-04 16:21:02,539:INFO:Initializing Passive Aggressive Regressor
2023-09-04 16:21:02,540:INFO:Total runtime is 1.1526212533315023 minutes
2023-09-04 16:21:02,545:INFO:SubProcess create_model() called ==================================
2023-09-04 16:21:02,546:INFO:Initializing create_model()
2023-09-04 16:21:02,546:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fbf2da87b50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fbf603342e0>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:21:02,546:INFO:Checking exceptions
2023-09-04 16:21:02,546:INFO:Importing libraries
2023-09-04 16:21:02,546:INFO:Copying training dataset
2023-09-04 16:21:02,563:INFO:Defining folds
2023-09-04 16:21:02,563:INFO:Declaring metric variables
2023-09-04 16:21:02,570:INFO:Importing untrained model
2023-09-04 16:21:02,581:INFO:Passive Aggressive Regressor Imported successfully
2023-09-04 16:21:02,602:INFO:Starting cross validation
2023-09-04 16:21:02,608:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:21:05,089:INFO:Calculating mean and std
2023-09-04 16:21:05,091:INFO:Creating metrics dataframe
2023-09-04 16:21:05,223:INFO:Uploading results into container
2023-09-04 16:21:05,224:INFO:Uploading model into container now
2023-09-04 16:21:05,225:INFO:_master_model_container: 9
2023-09-04 16:21:05,225:INFO:_display_container: 2
2023-09-04 16:21:05,225:INFO:PassiveAggressiveRegressor(random_state=123)
2023-09-04 16:21:05,225:INFO:create_model() successfully completed......................................
2023-09-04 16:21:05,299:INFO:SubProcess create_model() end ==================================
2023-09-04 16:21:05,299:INFO:Creating metrics dataframe
2023-09-04 16:21:05,322:INFO:Initializing Huber Regressor
2023-09-04 16:21:05,322:INFO:Total runtime is 1.1989992221196493 minutes
2023-09-04 16:21:05,328:INFO:SubProcess create_model() called ==================================
2023-09-04 16:21:05,329:INFO:Initializing create_model()
2023-09-04 16:21:05,329:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fbf2da87b50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fbf603342e0>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:21:05,329:INFO:Checking exceptions
2023-09-04 16:21:05,329:INFO:Importing libraries
2023-09-04 16:21:05,329:INFO:Copying training dataset
2023-09-04 16:21:05,353:INFO:Defining folds
2023-09-04 16:21:05,355:INFO:Declaring metric variables
2023-09-04 16:21:05,361:INFO:Importing untrained model
2023-09-04 16:21:05,369:INFO:Huber Regressor Imported successfully
2023-09-04 16:21:05,393:INFO:Starting cross validation
2023-09-04 16:21:05,399:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:21:07,244:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:231: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-09-04 16:21:07,351:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-09-04 16:21:10,112:INFO:Calculating mean and std
2023-09-04 16:21:10,113:INFO:Creating metrics dataframe
2023-09-04 16:21:10,251:INFO:Uploading results into container
2023-09-04 16:21:10,252:INFO:Uploading model into container now
2023-09-04 16:21:10,253:INFO:_master_model_container: 10
2023-09-04 16:21:10,253:INFO:_display_container: 2
2023-09-04 16:21:10,253:INFO:HuberRegressor()
2023-09-04 16:21:10,254:INFO:create_model() successfully completed......................................
2023-09-04 16:21:10,329:INFO:SubProcess create_model() end ==================================
2023-09-04 16:21:10,329:INFO:Creating metrics dataframe
2023-09-04 16:21:10,348:INFO:Initializing K Neighbors Regressor
2023-09-04 16:21:10,348:INFO:Total runtime is 1.282767645517985 minutes
2023-09-04 16:21:10,353:INFO:SubProcess create_model() called ==================================
2023-09-04 16:21:10,354:INFO:Initializing create_model()
2023-09-04 16:21:10,354:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fbf2da87b50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fbf603342e0>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:21:10,354:INFO:Checking exceptions
2023-09-04 16:21:10,354:INFO:Importing libraries
2023-09-04 16:21:10,354:INFO:Copying training dataset
2023-09-04 16:21:10,367:INFO:Defining folds
2023-09-04 16:21:10,367:INFO:Declaring metric variables
2023-09-04 16:21:10,371:INFO:Importing untrained model
2023-09-04 16:21:10,376:INFO:K Neighbors Regressor Imported successfully
2023-09-04 16:21:10,387:INFO:Starting cross validation
2023-09-04 16:21:10,390:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:21:14,879:INFO:Calculating mean and std
2023-09-04 16:21:14,880:INFO:Creating metrics dataframe
2023-09-04 16:21:15,019:INFO:Uploading results into container
2023-09-04 16:21:15,020:INFO:Uploading model into container now
2023-09-04 16:21:15,020:INFO:_master_model_container: 11
2023-09-04 16:21:15,020:INFO:_display_container: 2
2023-09-04 16:21:15,020:INFO:KNeighborsRegressor(n_jobs=-1)
2023-09-04 16:21:15,021:INFO:create_model() successfully completed......................................
2023-09-04 16:21:15,098:INFO:SubProcess create_model() end ==================================
2023-09-04 16:21:15,098:INFO:Creating metrics dataframe
2023-09-04 16:21:15,120:INFO:Initializing Decision Tree Regressor
2023-09-04 16:21:15,120:INFO:Total runtime is 1.362295174598694 minutes
2023-09-04 16:21:15,127:INFO:SubProcess create_model() called ==================================
2023-09-04 16:21:15,127:INFO:Initializing create_model()
2023-09-04 16:21:15,127:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fbf2da87b50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fbf603342e0>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:21:15,128:INFO:Checking exceptions
2023-09-04 16:21:15,128:INFO:Importing libraries
2023-09-04 16:21:15,128:INFO:Copying training dataset
2023-09-04 16:21:15,155:INFO:Defining folds
2023-09-04 16:21:15,157:INFO:Declaring metric variables
2023-09-04 16:21:15,166:INFO:Importing untrained model
2023-09-04 16:21:15,184:INFO:Decision Tree Regressor Imported successfully
2023-09-04 16:21:15,210:INFO:Starting cross validation
2023-09-04 16:21:15,218:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:21:19,465:INFO:Calculating mean and std
2023-09-04 16:21:19,467:INFO:Creating metrics dataframe
2023-09-04 16:21:19,605:INFO:Uploading results into container
2023-09-04 16:21:19,606:INFO:Uploading model into container now
2023-09-04 16:21:19,607:INFO:_master_model_container: 12
2023-09-04 16:21:19,607:INFO:_display_container: 2
2023-09-04 16:21:19,608:INFO:DecisionTreeRegressor(random_state=123)
2023-09-04 16:21:19,608:INFO:create_model() successfully completed......................................
2023-09-04 16:21:19,683:INFO:SubProcess create_model() end ==================================
2023-09-04 16:21:19,684:INFO:Creating metrics dataframe
2023-09-04 16:21:19,703:INFO:Initializing Random Forest Regressor
2023-09-04 16:21:19,703:INFO:Total runtime is 1.4386765321095787 minutes
2023-09-04 16:21:19,708:INFO:SubProcess create_model() called ==================================
2023-09-04 16:21:19,708:INFO:Initializing create_model()
2023-09-04 16:21:19,708:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fbf2da87b50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fbf603342e0>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:21:19,708:INFO:Checking exceptions
2023-09-04 16:21:19,709:INFO:Importing libraries
2023-09-04 16:21:19,709:INFO:Copying training dataset
2023-09-04 16:21:19,724:INFO:Defining folds
2023-09-04 16:21:19,724:INFO:Declaring metric variables
2023-09-04 16:21:19,729:INFO:Importing untrained model
2023-09-04 16:21:19,736:INFO:Random Forest Regressor Imported successfully
2023-09-04 16:21:19,753:INFO:Starting cross validation
2023-09-04 16:21:19,764:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:26:00,982:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-04 16:26:00,983:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-04 16:26:00,983:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-04 16:26:00,983:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-04 16:27:11,896:INFO:PyCaret ClassificationExperiment
2023-09-04 16:27:11,896:INFO:Logging name: clf-default-name
2023-09-04 16:27:11,896:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-09-04 16:27:11,896:INFO:version 3.0.4
2023-09-04 16:27:11,896:INFO:Initializing setup()
2023-09-04 16:27:11,896:INFO:self.USI: 1a71
2023-09-04 16:27:11,896:INFO:self._variable_keys: {'fold_shuffle_param', '_ml_usecase', 'X_test', 'fold_generator', 'fold_groups_param', 'memory', 'seed', 'log_plots_param', 'idx', 'gpu_n_jobs_param', 'target_param', 'html_param', 'exp_name_log', 'X', 'y_train', 'X_train', 'y', 'fix_imbalance', 'exp_id', 'gpu_param', 'n_jobs_param', 'pipeline', 'data', '_available_plots', 'USI', 'y_test', 'logging_param', 'is_multiclass'}
2023-09-04 16:27:11,896:INFO:Checking environment
2023-09-04 16:27:11,896:INFO:python_version: 3.10.12
2023-09-04 16:27:11,896:INFO:python_build: ('main', 'Jun 11 2023 05:26:28')
2023-09-04 16:27:11,896:INFO:machine: x86_64
2023-09-04 16:27:11,896:INFO:platform: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-04 16:27:11,896:INFO:Memory: svmem(total=8140144640, available=2763980800, percent=66.0, used=4471042048, free=1589182464, active=2016104448, inactive=3459289088, buffers=55468032, cached=2024452096, shared=592781312, slab=681996288)
2023-09-04 16:27:11,897:INFO:Physical Core: 4
2023-09-04 16:27:11,897:INFO:Logical Core: 8
2023-09-04 16:27:11,897:INFO:Checking libraries
2023-09-04 16:27:11,897:INFO:System:
2023-09-04 16:27:11,897:INFO:    python: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]
2023-09-04 16:27:11,897:INFO:executable: /bin/python
2023-09-04 16:27:11,898:INFO:   machine: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-04 16:27:11,898:INFO:PyCaret required dependencies:
2023-09-04 16:27:11,919:INFO:                 pip: 22.0.2
2023-09-04 16:27:11,919:INFO:          setuptools: 59.6.0
2023-09-04 16:27:11,919:INFO:             pycaret: 3.0.4
2023-09-04 16:27:11,919:INFO:             IPython: 7.31.1
2023-09-04 16:27:11,919:INFO:          ipywidgets: 6.0.0
2023-09-04 16:27:11,920:INFO:                tqdm: 4.65.0
2023-09-04 16:27:11,920:INFO:               numpy: 1.21.5
2023-09-04 16:27:11,920:INFO:              pandas: 1.5.2
2023-09-04 16:27:11,920:INFO:              jinja2: 3.0.3
2023-09-04 16:27:11,920:INFO:               scipy: 1.8.0
2023-09-04 16:27:11,920:INFO:              joblib: 1.2.0
2023-09-04 16:27:11,920:INFO:             sklearn: 1.2.0
2023-09-04 16:27:11,920:INFO:                pyod: 1.1.0
2023-09-04 16:27:11,920:INFO:            imblearn: 0.11.0
2023-09-04 16:27:11,920:INFO:   category_encoders: 2.6.2
2023-09-04 16:27:11,920:INFO:            lightgbm: 4.0.0
2023-09-04 16:27:11,920:INFO:               numba: 0.57.1
2023-09-04 16:27:11,920:INFO:            requests: 2.25.1
2023-09-04 16:27:11,920:INFO:          matplotlib: 3.5.1
2023-09-04 16:27:11,920:INFO:          scikitplot: 0.3.7
2023-09-04 16:27:11,920:INFO:         yellowbrick: 1.5
2023-09-04 16:27:11,920:INFO:              plotly: 5.16.1
2023-09-04 16:27:11,920:INFO:    plotly-resampler: Not installed
2023-09-04 16:27:11,920:INFO:             kaleido: 0.2.1
2023-09-04 16:27:11,920:INFO:           schemdraw: 0.15
2023-09-04 16:27:11,920:INFO:         statsmodels: 0.14.0
2023-09-04 16:27:11,920:INFO:              sktime: 0.22.0
2023-09-04 16:27:11,920:INFO:               tbats: 1.1.3
2023-09-04 16:27:11,920:INFO:            pmdarima: 2.0.3
2023-09-04 16:27:11,920:INFO:              psutil: 5.9.0
2023-09-04 16:27:11,920:INFO:          markupsafe: 2.0.1
2023-09-04 16:27:11,920:INFO:             pickle5: Not installed
2023-09-04 16:27:11,920:INFO:         cloudpickle: 2.2.1
2023-09-04 16:27:11,920:INFO:         deprecation: 2.1.0
2023-09-04 16:27:11,920:INFO:              xxhash: 3.3.0
2023-09-04 16:27:11,920:INFO:           wurlitzer: 3.0.3
2023-09-04 16:27:11,920:INFO:PyCaret optional dependencies:
2023-09-04 16:27:11,933:INFO:                shap: Not installed
2023-09-04 16:27:11,934:INFO:           interpret: Not installed
2023-09-04 16:27:11,934:INFO:                umap: Not installed
2023-09-04 16:27:11,934:INFO:    pandas_profiling: Not installed
2023-09-04 16:27:11,934:INFO:  explainerdashboard: Not installed
2023-09-04 16:27:11,934:INFO:             autoviz: Not installed
2023-09-04 16:27:11,934:INFO:           fairlearn: Not installed
2023-09-04 16:27:11,934:INFO:          deepchecks: Not installed
2023-09-04 16:27:11,934:INFO:             xgboost: Not installed
2023-09-04 16:27:11,934:INFO:            catboost: Not installed
2023-09-04 16:27:11,934:INFO:              kmodes: Not installed
2023-09-04 16:27:11,934:INFO:             mlxtend: Not installed
2023-09-04 16:27:11,934:INFO:       statsforecast: Not installed
2023-09-04 16:27:11,934:INFO:        tune_sklearn: Not installed
2023-09-04 16:27:11,934:INFO:                 ray: Not installed
2023-09-04 16:27:11,934:INFO:            hyperopt: Not installed
2023-09-04 16:27:11,934:INFO:              optuna: Not installed
2023-09-04 16:27:11,934:INFO:               skopt: Not installed
2023-09-04 16:27:11,934:INFO:              mlflow: Not installed
2023-09-04 16:27:11,934:INFO:              gradio: Not installed
2023-09-04 16:27:11,934:INFO:             fastapi: Not installed
2023-09-04 16:27:11,934:INFO:             uvicorn: Not installed
2023-09-04 16:27:11,934:INFO:              m2cgen: Not installed
2023-09-04 16:27:11,934:INFO:           evidently: Not installed
2023-09-04 16:27:11,934:INFO:               fugue: Not installed
2023-09-04 16:27:11,934:INFO:           streamlit: Not installed
2023-09-04 16:27:11,934:INFO:             prophet: Not installed
2023-09-04 16:27:11,934:INFO:None
2023-09-04 16:27:11,934:INFO:Set up data.
2023-09-04 16:27:11,978:INFO:Set up train/test split.
2023-09-04 16:27:12,022:INFO:Set up index.
2023-09-04 16:27:12,023:INFO:Set up folding strategy.
2023-09-04 16:27:12,023:INFO:Assigning column types.
2023-09-04 16:27:12,030:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-04 16:27:12,068:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:27:12,071:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 16:27:12,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:12,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:12,147:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:27:12,148:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 16:27:12,170:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:12,171:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:12,171:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-04 16:27:12,209:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 16:27:12,237:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:12,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:12,276:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 16:27:12,308:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:12,308:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:12,308:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-09-04 16:27:12,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:12,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:12,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:12,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:12,472:INFO:Preparing preprocessing pipeline...
2023-09-04 16:27:12,477:INFO:Set up label encoding.
2023-09-04 16:27:12,477:INFO:Set up simple imputation.
2023-09-04 16:27:12,487:INFO:Set up encoding of ordinal features.
2023-09-04 16:27:12,491:INFO:Set up encoding of categorical features.
2023-09-04 16:27:12,492:INFO:Set up column name cleaning.
2023-09-04 16:27:13,091:INFO:Finished creating preprocessing pipeline.
2023-09-04 16:27:13,148:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-09-04 16:27:13,148:INFO:Creating final display dataframe.
2023-09-04 16:27:13,640:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (48842, 15)
5        Transformed data shape        (48842, 67)
6   Transformed train set shape        (34189, 67)
7    Transformed test set shape        (14653, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Fold Generator    StratifiedKFold
18                  Fold Number                 10
19                     CPU Jobs                 -1
20                      Use GPU              False
21               Log Experiment              False
22              Experiment Name   clf-default-name
23                          USI               1a71
2023-09-04 16:27:13,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:13,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:13,867:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:13,868:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:27:13,869:INFO:setup() successfully completed in 2.05s...............
2023-09-04 16:27:23,784:INFO:Initializing compare_models()
2023-09-04 16:27:23,784:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f211559b250>, include=['lr', 'rf', 'xgboost'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f211559b250>, 'include': ['lr', 'rf', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-04 16:27:23,784:INFO:Checking exceptions
2023-09-04 16:27:32,707:INFO:Initializing compare_models()
2023-09-04 16:27:32,708:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f211559b250>, include=['lr', 'rf'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f211559b250>, 'include': ['lr', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-04 16:27:32,708:INFO:Checking exceptions
2023-09-04 16:27:32,724:INFO:Preparing display monitor
2023-09-04 16:27:32,782:INFO:Initializing Logistic Regression
2023-09-04 16:27:32,783:INFO:Total runtime is 7.343292236328125e-06 minutes
2023-09-04 16:27:32,795:INFO:SubProcess create_model() called ==================================
2023-09-04 16:27:32,795:INFO:Initializing create_model()
2023-09-04 16:27:32,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f211559b250>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2115526440>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:27:32,796:INFO:Checking exceptions
2023-09-04 16:27:32,796:INFO:Importing libraries
2023-09-04 16:27:32,796:INFO:Copying training dataset
2023-09-04 16:27:32,826:INFO:Defining folds
2023-09-04 16:27:32,827:INFO:Declaring metric variables
2023-09-04 16:27:32,836:INFO:Importing untrained model
2023-09-04 16:27:32,847:INFO:Logistic Regression Imported successfully
2023-09-04 16:27:32,869:INFO:Starting cross validation
2023-09-04 16:27:32,876:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:27:39,024:INFO:Calculating mean and std
2023-09-04 16:27:39,027:INFO:Creating metrics dataframe
2023-09-04 16:27:39,166:INFO:Uploading results into container
2023-09-04 16:27:39,167:INFO:Uploading model into container now
2023-09-04 16:27:39,167:INFO:_master_model_container: 1
2023-09-04 16:27:39,167:INFO:_display_container: 2
2023-09-04 16:27:39,168:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-04 16:27:39,168:INFO:create_model() successfully completed......................................
2023-09-04 16:27:39,280:INFO:SubProcess create_model() end ==================================
2023-09-04 16:27:39,280:INFO:Creating metrics dataframe
2023-09-04 16:27:39,300:INFO:Initializing Random Forest Classifier
2023-09-04 16:27:39,300:INFO:Total runtime is 0.10863459904988607 minutes
2023-09-04 16:27:39,307:INFO:SubProcess create_model() called ==================================
2023-09-04 16:27:39,307:INFO:Initializing create_model()
2023-09-04 16:27:39,308:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f211559b250>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2115526440>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:27:39,308:INFO:Checking exceptions
2023-09-04 16:27:39,308:INFO:Importing libraries
2023-09-04 16:27:39,308:INFO:Copying training dataset
2023-09-04 16:27:39,328:INFO:Defining folds
2023-09-04 16:27:39,328:INFO:Declaring metric variables
2023-09-04 16:27:39,332:INFO:Importing untrained model
2023-09-04 16:27:39,336:INFO:Random Forest Classifier Imported successfully
2023-09-04 16:27:39,343:INFO:Starting cross validation
2023-09-04 16:27:39,346:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:27:44,677:INFO:Calculating mean and std
2023-09-04 16:27:44,680:INFO:Creating metrics dataframe
2023-09-04 16:27:44,814:INFO:Uploading results into container
2023-09-04 16:27:44,815:INFO:Uploading model into container now
2023-09-04 16:27:44,815:INFO:_master_model_container: 2
2023-09-04 16:27:44,815:INFO:_display_container: 2
2023-09-04 16:27:44,816:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-09-04 16:27:44,816:INFO:create_model() successfully completed......................................
2023-09-04 16:27:44,919:INFO:SubProcess create_model() end ==================================
2023-09-04 16:27:44,919:INFO:Creating metrics dataframe
2023-09-04 16:27:44,955:INFO:Initializing create_model()
2023-09-04 16:27:44,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f211559b250>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:27:44,956:INFO:Checking exceptions
2023-09-04 16:27:44,958:INFO:Importing libraries
2023-09-04 16:27:44,959:INFO:Copying training dataset
2023-09-04 16:27:44,974:INFO:Defining folds
2023-09-04 16:27:44,974:INFO:Declaring metric variables
2023-09-04 16:27:44,974:INFO:Importing untrained model
2023-09-04 16:27:44,974:INFO:Declaring custom model
2023-09-04 16:27:44,975:INFO:Random Forest Classifier Imported successfully
2023-09-04 16:27:44,977:INFO:Cross validation set to False
2023-09-04 16:27:44,977:INFO:Fitting Model
2023-09-04 16:27:47,731:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-09-04 16:27:47,731:INFO:create_model() successfully completed......................................
2023-09-04 16:27:47,858:INFO:_master_model_container: 2
2023-09-04 16:27:47,859:INFO:_display_container: 2
2023-09-04 16:27:47,859:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-09-04 16:27:47,860:INFO:compare_models() successfully completed......................................
2023-09-04 16:33:06,478:INFO:PyCaret RegressionExperiment
2023-09-04 16:33:06,479:INFO:Logging name: reg-default-name
2023-09-04 16:33:06,479:INFO:ML Usecase: MLUsecase.REGRESSION
2023-09-04 16:33:06,479:INFO:version 3.0.4
2023-09-04 16:33:06,479:INFO:Initializing setup()
2023-09-04 16:33:06,479:INFO:self.USI: 7990
2023-09-04 16:33:06,479:INFO:self._variable_keys: {'fold_shuffle_param', '_ml_usecase', 'X_test', 'fold_generator', 'fold_groups_param', 'memory', 'seed', 'log_plots_param', 'idx', 'gpu_n_jobs_param', 'target_param', 'html_param', 'exp_name_log', 'transform_target_param', 'X', 'y_train', 'X_train', 'y', 'exp_id', 'gpu_param', 'n_jobs_param', 'pipeline', 'data', '_available_plots', 'USI', 'y_test', 'logging_param'}
2023-09-04 16:33:06,479:INFO:Checking environment
2023-09-04 16:33:06,479:INFO:python_version: 3.10.12
2023-09-04 16:33:06,479:INFO:python_build: ('main', 'Jun 11 2023 05:26:28')
2023-09-04 16:33:06,479:INFO:machine: x86_64
2023-09-04 16:33:06,479:INFO:platform: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-04 16:33:06,479:INFO:Memory: svmem(total=8140144640, available=2694758400, percent=66.9, used=4607180800, free=1267429376, active=2308837376, inactive=3576520704, buffers=52133888, cached=2213400576, shared=525848576, slab=660729856)
2023-09-04 16:33:06,480:INFO:Physical Core: 4
2023-09-04 16:33:06,480:INFO:Logical Core: 8
2023-09-04 16:33:06,480:INFO:Checking libraries
2023-09-04 16:33:06,480:INFO:System:
2023-09-04 16:33:06,480:INFO:    python: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]
2023-09-04 16:33:06,480:INFO:executable: /bin/python
2023-09-04 16:33:06,480:INFO:   machine: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-04 16:33:06,480:INFO:PyCaret required dependencies:
2023-09-04 16:33:06,480:INFO:                 pip: 22.0.2
2023-09-04 16:33:06,480:INFO:          setuptools: 59.6.0
2023-09-04 16:33:06,480:INFO:             pycaret: 3.0.4
2023-09-04 16:33:06,480:INFO:             IPython: 7.31.1
2023-09-04 16:33:06,480:INFO:          ipywidgets: 6.0.0
2023-09-04 16:33:06,480:INFO:                tqdm: 4.65.0
2023-09-04 16:33:06,480:INFO:               numpy: 1.21.5
2023-09-04 16:33:06,480:INFO:              pandas: 1.5.2
2023-09-04 16:33:06,480:INFO:              jinja2: 3.0.3
2023-09-04 16:33:06,480:INFO:               scipy: 1.8.0
2023-09-04 16:33:06,481:INFO:              joblib: 1.2.0
2023-09-04 16:33:06,481:INFO:             sklearn: 1.2.0
2023-09-04 16:33:06,481:INFO:                pyod: 1.1.0
2023-09-04 16:33:06,481:INFO:            imblearn: 0.11.0
2023-09-04 16:33:06,481:INFO:   category_encoders: 2.6.2
2023-09-04 16:33:06,481:INFO:            lightgbm: 4.0.0
2023-09-04 16:33:06,481:INFO:               numba: 0.57.1
2023-09-04 16:33:06,481:INFO:            requests: 2.25.1
2023-09-04 16:33:06,481:INFO:          matplotlib: 3.5.1
2023-09-04 16:33:06,481:INFO:          scikitplot: 0.3.7
2023-09-04 16:33:06,481:INFO:         yellowbrick: 1.5
2023-09-04 16:33:06,481:INFO:              plotly: 5.16.1
2023-09-04 16:33:06,481:INFO:    plotly-resampler: Not installed
2023-09-04 16:33:06,481:INFO:             kaleido: 0.2.1
2023-09-04 16:33:06,481:INFO:           schemdraw: 0.15
2023-09-04 16:33:06,481:INFO:         statsmodels: 0.14.0
2023-09-04 16:33:06,481:INFO:              sktime: 0.22.0
2023-09-04 16:33:06,481:INFO:               tbats: 1.1.3
2023-09-04 16:33:06,481:INFO:            pmdarima: 2.0.3
2023-09-04 16:33:06,481:INFO:              psutil: 5.9.0
2023-09-04 16:33:06,481:INFO:          markupsafe: 2.0.1
2023-09-04 16:33:06,481:INFO:             pickle5: Not installed
2023-09-04 16:33:06,481:INFO:         cloudpickle: 2.2.1
2023-09-04 16:33:06,481:INFO:         deprecation: 2.1.0
2023-09-04 16:33:06,481:INFO:              xxhash: 3.3.0
2023-09-04 16:33:06,481:INFO:           wurlitzer: 3.0.3
2023-09-04 16:33:06,481:INFO:PyCaret optional dependencies:
2023-09-04 16:33:06,481:INFO:                shap: Not installed
2023-09-04 16:33:06,481:INFO:           interpret: Not installed
2023-09-04 16:33:06,481:INFO:                umap: Not installed
2023-09-04 16:33:06,481:INFO:    pandas_profiling: Not installed
2023-09-04 16:33:06,481:INFO:  explainerdashboard: Not installed
2023-09-04 16:33:06,481:INFO:             autoviz: Not installed
2023-09-04 16:33:06,481:INFO:           fairlearn: Not installed
2023-09-04 16:33:06,481:INFO:          deepchecks: Not installed
2023-09-04 16:33:06,481:INFO:             xgboost: Not installed
2023-09-04 16:33:06,481:INFO:            catboost: Not installed
2023-09-04 16:33:06,482:INFO:              kmodes: Not installed
2023-09-04 16:33:06,482:INFO:             mlxtend: Not installed
2023-09-04 16:33:06,482:INFO:       statsforecast: Not installed
2023-09-04 16:33:06,482:INFO:        tune_sklearn: Not installed
2023-09-04 16:33:06,482:INFO:                 ray: Not installed
2023-09-04 16:33:06,482:INFO:            hyperopt: Not installed
2023-09-04 16:33:06,482:INFO:              optuna: Not installed
2023-09-04 16:33:06,482:INFO:               skopt: Not installed
2023-09-04 16:33:06,482:INFO:              mlflow: Not installed
2023-09-04 16:33:06,482:INFO:              gradio: Not installed
2023-09-04 16:33:06,482:INFO:             fastapi: Not installed
2023-09-04 16:33:06,482:INFO:             uvicorn: Not installed
2023-09-04 16:33:06,482:INFO:              m2cgen: Not installed
2023-09-04 16:33:06,482:INFO:           evidently: Not installed
2023-09-04 16:33:06,482:INFO:               fugue: Not installed
2023-09-04 16:33:06,482:INFO:           streamlit: Not installed
2023-09-04 16:33:06,482:INFO:             prophet: Not installed
2023-09-04 16:33:06,482:INFO:None
2023-09-04 16:33:06,482:INFO:Set up data.
2023-09-04 16:33:06,532:INFO:Set up train/test split.
2023-09-04 16:33:06,542:INFO:Set up index.
2023-09-04 16:33:06,543:INFO:Set up folding strategy.
2023-09-04 16:33:06,543:INFO:Assigning column types.
2023-09-04 16:33:06,549:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-04 16:33:06,549:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,553:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,557:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,621:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,662:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:06,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:06,663:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,667:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,671:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,728:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,768:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:06,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:06,769:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-09-04 16:33:06,773:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,778:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,834:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,880:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,881:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:06,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:06,887:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,891:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 16:33:06,959:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:33:07,008:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:33:07,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:07,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:07,010:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-09-04 16:33:07,021:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 16:33:07,088:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:33:07,133:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:33:07,133:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:07,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:07,142:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 16:33:07,206:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:33:07,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:33:07,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:07,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:07,253:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-09-04 16:33:07,328:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:33:07,375:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:33:07,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:07,376:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:07,456:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:33:07,517:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 16:33:07,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:07,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:07,519:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-04 16:33:07,631:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:33:07,683:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:07,683:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:07,760:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 16:33:07,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:07,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:07,803:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-09-04 16:33:07,948:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:07,949:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:08,053:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:08,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:08,054:INFO:Preparing preprocessing pipeline...
2023-09-04 16:33:08,054:INFO:Set up simple imputation.
2023-09-04 16:33:08,065:INFO:Set up encoding of ordinal features.
2023-09-04 16:33:08,069:INFO:Set up encoding of categorical features.
2023-09-04 16:33:08,070:INFO:Set up column name cleaning.
2023-09-04 16:33:08,799:INFO:Finished creating preprocessing pipeline.
2023-09-04 16:33:08,843:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('c...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-09-04 16:33:08,843:INFO:Creating final display dataframe.
2023-09-04 16:33:09,571:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            fnlwgt
2                   Target type        Regression
3           Original data shape       (48842, 15)
4        Transformed data shape       (48842, 67)
5   Transformed train set shape       (34189, 67)
6    Transformed test set shape       (14653, 67)
7              Ordinal features                 2
8              Numeric features                 5
9          Categorical features                 9
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              7990
2023-09-04 16:33:09,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:09,717:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:09,837:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:09,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 16:33:09,838:INFO:setup() successfully completed in 3.47s...............
2023-09-04 16:33:13,314:INFO:Initializing compare_models()
2023-09-04 16:33:13,314:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f2115495600>, include=['lr', 'rf'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f2115495600>, 'include': ['lr', 'rf'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-09-04 16:33:13,314:INFO:Checking exceptions
2023-09-04 16:33:13,322:INFO:Preparing display monitor
2023-09-04 16:33:13,382:INFO:Initializing Linear Regression
2023-09-04 16:33:13,382:INFO:Total runtime is 1.5000502268473307e-05 minutes
2023-09-04 16:33:13,394:INFO:SubProcess create_model() called ==================================
2023-09-04 16:33:13,395:INFO:Initializing create_model()
2023-09-04 16:33:13,395:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f2115495600>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f21155b8340>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:33:13,395:INFO:Checking exceptions
2023-09-04 16:33:13,396:INFO:Importing libraries
2023-09-04 16:33:13,396:INFO:Copying training dataset
2023-09-04 16:33:13,424:INFO:Defining folds
2023-09-04 16:33:13,424:INFO:Declaring metric variables
2023-09-04 16:33:13,433:INFO:Importing untrained model
2023-09-04 16:33:13,439:INFO:Linear Regression Imported successfully
2023-09-04 16:33:13,459:INFO:Starting cross validation
2023-09-04 16:33:13,464:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 16:33:22,247:INFO:Calculating mean and std
2023-09-04 16:33:22,249:INFO:Creating metrics dataframe
2023-09-04 16:33:22,386:INFO:Uploading results into container
2023-09-04 16:33:22,387:INFO:Uploading model into container now
2023-09-04 16:33:22,388:INFO:_master_model_container: 1
2023-09-04 16:33:22,388:INFO:_display_container: 2
2023-09-04 16:33:22,389:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-09-04 16:33:22,389:INFO:create_model() successfully completed......................................
2023-09-04 16:33:23,393:INFO:SubProcess create_model() end ==================================
2023-09-04 16:33:23,393:INFO:Creating metrics dataframe
2023-09-04 16:33:23,414:INFO:Initializing Random Forest Regressor
2023-09-04 16:33:23,415:INFO:Total runtime is 0.16721998453140258 minutes
2023-09-04 16:33:23,424:INFO:SubProcess create_model() called ==================================
2023-09-04 16:33:23,425:INFO:Initializing create_model()
2023-09-04 16:33:23,425:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f2115495600>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f21155b8340>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 16:33:23,425:INFO:Checking exceptions
2023-09-04 16:33:23,425:INFO:Importing libraries
2023-09-04 16:33:23,425:INFO:Copying training dataset
2023-09-04 16:33:23,460:INFO:Defining folds
2023-09-04 16:33:23,460:INFO:Declaring metric variables
2023-09-04 16:33:23,466:INFO:Importing untrained model
2023-09-04 16:33:23,478:INFO:Random Forest Regressor Imported successfully
2023-09-04 16:33:23,499:INFO:Starting cross validation
2023-09-04 16:33:23,505:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 17:23:12,378:INFO:PyCaret ClassificationExperiment
2023-09-04 17:23:12,378:INFO:Logging name: clf-default-name
2023-09-04 17:23:12,378:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-09-04 17:23:12,378:INFO:version 3.0.4
2023-09-04 17:23:12,378:INFO:Initializing setup()
2023-09-04 17:23:12,378:INFO:self.USI: 2d3a
2023-09-04 17:23:12,379:INFO:self._variable_keys: {'fold_shuffle_param', '_ml_usecase', 'X_test', 'fold_generator', 'fold_groups_param', 'memory', 'seed', 'log_plots_param', 'idx', 'gpu_n_jobs_param', 'target_param', 'html_param', 'exp_name_log', 'X', 'y_train', 'X_train', 'y', 'fix_imbalance', 'exp_id', 'gpu_param', 'n_jobs_param', 'pipeline', 'data', '_available_plots', 'USI', 'y_test', 'logging_param', 'is_multiclass'}
2023-09-04 17:23:12,379:INFO:Checking environment
2023-09-04 17:23:12,379:INFO:python_version: 3.10.12
2023-09-04 17:23:12,379:INFO:python_build: ('main', 'Jun 11 2023 05:26:28')
2023-09-04 17:23:12,379:INFO:machine: x86_64
2023-09-04 17:23:12,379:INFO:platform: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-04 17:23:12,379:INFO:Memory: svmem(total=8140144640, available=1446719488, percent=82.2, used=5771546624, free=645173248, active=2921660416, inactive=3482255360, buffers=78249984, cached=1645174784, shared=608821248, slab=664899584)
2023-09-04 17:23:12,380:INFO:Physical Core: 4
2023-09-04 17:23:12,380:INFO:Logical Core: 8
2023-09-04 17:23:12,380:INFO:Checking libraries
2023-09-04 17:23:12,380:INFO:System:
2023-09-04 17:23:12,380:INFO:    python: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]
2023-09-04 17:23:12,380:INFO:executable: /bin/python
2023-09-04 17:23:12,380:INFO:   machine: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-04 17:23:12,380:INFO:PyCaret required dependencies:
2023-09-04 17:23:12,389:INFO:                 pip: 22.0.2
2023-09-04 17:23:12,390:INFO:          setuptools: 59.6.0
2023-09-04 17:23:12,390:INFO:             pycaret: 3.0.4
2023-09-04 17:23:12,390:INFO:             IPython: 7.31.1
2023-09-04 17:23:12,390:INFO:          ipywidgets: 6.0.0
2023-09-04 17:23:12,390:INFO:                tqdm: 4.65.0
2023-09-04 17:23:12,390:INFO:               numpy: 1.21.5
2023-09-04 17:23:12,390:INFO:              pandas: 1.5.2
2023-09-04 17:23:12,390:INFO:              jinja2: 3.0.3
2023-09-04 17:23:12,390:INFO:               scipy: 1.8.0
2023-09-04 17:23:12,390:INFO:              joblib: 1.2.0
2023-09-04 17:23:12,390:INFO:             sklearn: 1.2.0
2023-09-04 17:23:12,390:INFO:                pyod: 1.1.0
2023-09-04 17:23:12,390:INFO:            imblearn: 0.11.0
2023-09-04 17:23:12,390:INFO:   category_encoders: 2.6.2
2023-09-04 17:23:12,390:INFO:            lightgbm: 4.0.0
2023-09-04 17:23:12,390:INFO:               numba: 0.57.1
2023-09-04 17:23:12,390:INFO:            requests: 2.25.1
2023-09-04 17:23:12,390:INFO:          matplotlib: 3.5.1
2023-09-04 17:23:12,390:INFO:          scikitplot: 0.3.7
2023-09-04 17:23:12,390:INFO:         yellowbrick: 1.5
2023-09-04 17:23:12,390:INFO:              plotly: 5.16.1
2023-09-04 17:23:12,390:INFO:    plotly-resampler: Not installed
2023-09-04 17:23:12,390:INFO:             kaleido: 0.2.1
2023-09-04 17:23:12,390:INFO:           schemdraw: 0.15
2023-09-04 17:23:12,390:INFO:         statsmodels: 0.14.0
2023-09-04 17:23:12,390:INFO:              sktime: 0.22.0
2023-09-04 17:23:12,390:INFO:               tbats: 1.1.3
2023-09-04 17:23:12,390:INFO:            pmdarima: 2.0.3
2023-09-04 17:23:12,390:INFO:              psutil: 5.9.0
2023-09-04 17:23:12,390:INFO:          markupsafe: 2.0.1
2023-09-04 17:23:12,390:INFO:             pickle5: Not installed
2023-09-04 17:23:12,390:INFO:         cloudpickle: 2.2.1
2023-09-04 17:23:12,390:INFO:         deprecation: 2.1.0
2023-09-04 17:23:12,390:INFO:              xxhash: 3.3.0
2023-09-04 17:23:12,390:INFO:           wurlitzer: 3.0.3
2023-09-04 17:23:12,390:INFO:PyCaret optional dependencies:
2023-09-04 17:23:12,391:INFO:                shap: Not installed
2023-09-04 17:23:12,391:INFO:           interpret: Not installed
2023-09-04 17:23:12,391:INFO:                umap: Not installed
2023-09-04 17:23:12,391:INFO:    pandas_profiling: Not installed
2023-09-04 17:23:12,391:INFO:  explainerdashboard: Not installed
2023-09-04 17:23:12,391:INFO:             autoviz: Not installed
2023-09-04 17:23:12,391:INFO:           fairlearn: Not installed
2023-09-04 17:23:12,391:INFO:          deepchecks: Not installed
2023-09-04 17:23:12,391:INFO:             xgboost: Not installed
2023-09-04 17:23:12,391:INFO:            catboost: Not installed
2023-09-04 17:23:12,391:INFO:              kmodes: Not installed
2023-09-04 17:23:12,391:INFO:             mlxtend: Not installed
2023-09-04 17:23:12,391:INFO:       statsforecast: Not installed
2023-09-04 17:23:12,391:INFO:        tune_sklearn: Not installed
2023-09-04 17:23:12,391:INFO:                 ray: Not installed
2023-09-04 17:23:12,391:INFO:            hyperopt: Not installed
2023-09-04 17:23:12,391:INFO:              optuna: Not installed
2023-09-04 17:23:12,391:INFO:               skopt: Not installed
2023-09-04 17:23:12,391:INFO:              mlflow: Not installed
2023-09-04 17:23:12,391:INFO:              gradio: Not installed
2023-09-04 17:23:12,391:INFO:             fastapi: Not installed
2023-09-04 17:23:12,391:INFO:             uvicorn: Not installed
2023-09-04 17:23:12,391:INFO:              m2cgen: Not installed
2023-09-04 17:23:12,391:INFO:           evidently: Not installed
2023-09-04 17:23:12,391:INFO:               fugue: Not installed
2023-09-04 17:23:12,391:INFO:           streamlit: Not installed
2023-09-04 17:23:12,391:INFO:             prophet: Not installed
2023-09-04 17:23:12,391:INFO:None
2023-09-04 17:23:12,391:INFO:Set up data.
2023-09-04 17:23:12,461:INFO:Set up train/test split.
2023-09-04 17:23:12,525:INFO:Set up index.
2023-09-04 17:23:12,527:INFO:Set up folding strategy.
2023-09-04 17:23:12,528:INFO:Assigning column types.
2023-09-04 17:23:12,538:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-04 17:23:12,587:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 17:23:12,590:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 17:23:12,622:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:12,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:12,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 17:23:12,667:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 17:23:12,695:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:12,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:12,696:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-04 17:23:12,741:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 17:23:12,768:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:12,768:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:12,815:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 17:23:12,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:12,848:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:12,848:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-09-04 17:23:12,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:12,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:13,017:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:13,018:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:13,032:INFO:Preparing preprocessing pipeline...
2023-09-04 17:23:13,038:INFO:Set up label encoding.
2023-09-04 17:23:13,039:INFO:Set up simple imputation.
2023-09-04 17:23:13,059:INFO:Set up encoding of ordinal features.
2023-09-04 17:23:13,065:INFO:Set up encoding of categorical features.
2023-09-04 17:23:13,068:INFO:Set up column name cleaning.
2023-09-04 17:23:13,671:INFO:Finished creating preprocessing pipeline.
2023-09-04 17:23:13,693:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-09-04 17:23:13,693:INFO:Creating final display dataframe.
2023-09-04 17:23:14,022:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (48842, 15)
5        Transformed data shape        (48842, 67)
6   Transformed train set shape        (34189, 67)
7    Transformed test set shape        (14653, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Fold Generator    StratifiedKFold
18                  Fold Number                 10
19                     CPU Jobs                 -1
20                      Use GPU              False
21               Log Experiment              False
22              Experiment Name   clf-default-name
23                          USI               2d3a
2023-09-04 17:23:14,139:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:14,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:14,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:14,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:23:14,230:INFO:setup() successfully completed in 2.24s...............
2023-09-04 17:23:38,449:INFO:Initializing create_model()
2023-09-04 17:23:38,449:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f2147e91ff0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-04 17:23:38,450:INFO:Checking exceptions
2023-09-04 17:23:38,496:INFO:Importing libraries
2023-09-04 17:23:38,496:INFO:Copying training dataset
2023-09-04 17:23:38,532:INFO:Defining folds
2023-09-04 17:23:38,533:INFO:Declaring metric variables
2023-09-04 17:23:38,543:INFO:Importing untrained model
2023-09-04 17:23:38,550:INFO:Logistic Regression Imported successfully
2023-09-04 17:23:38,569:INFO:Starting cross validation
2023-09-04 17:23:38,576:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 17:23:47,355:INFO:Calculating mean and std
2023-09-04 17:23:47,366:INFO:Creating metrics dataframe
2023-09-04 17:23:47,375:INFO:Finalizing model
2023-09-04 17:23:48,858:INFO:Uploading results into container
2023-09-04 17:23:48,859:INFO:Uploading model into container now
2023-09-04 17:23:48,874:INFO:_master_model_container: 1
2023-09-04 17:23:48,874:INFO:_display_container: 2
2023-09-04 17:23:48,875:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-04 17:23:48,875:INFO:create_model() successfully completed......................................
2023-09-04 17:48:24,851:INFO:PyCaret ClassificationExperiment
2023-09-04 17:48:24,852:INFO:Logging name: clf-default-name
2023-09-04 17:48:24,852:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-09-04 17:48:24,852:INFO:version 3.0.4
2023-09-04 17:48:24,852:INFO:Initializing setup()
2023-09-04 17:48:24,852:INFO:self.USI: 1c6a
2023-09-04 17:48:24,852:INFO:self._variable_keys: {'fold_shuffle_param', '_ml_usecase', 'X_test', 'fold_generator', 'fold_groups_param', 'memory', 'seed', 'log_plots_param', 'idx', 'gpu_n_jobs_param', 'target_param', 'html_param', 'exp_name_log', 'X', 'y_train', 'X_train', 'y', 'fix_imbalance', 'exp_id', 'gpu_param', 'n_jobs_param', 'pipeline', 'data', '_available_plots', 'USI', 'y_test', 'logging_param', 'is_multiclass'}
2023-09-04 17:48:24,853:INFO:Checking environment
2023-09-04 17:48:24,853:INFO:python_version: 3.10.12
2023-09-04 17:48:24,854:INFO:python_build: ('main', 'Jun 11 2023 05:26:28')
2023-09-04 17:48:24,854:INFO:machine: x86_64
2023-09-04 17:48:24,854:INFO:platform: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-04 17:48:24,854:INFO:Memory: svmem(total=8140144640, available=2378174464, percent=70.8, used=4931891200, free=128651264, active=3410378752, inactive=3664302080, buffers=60772352, cached=3018829824, shared=532623360, slab=640090112)
2023-09-04 17:48:24,855:INFO:Physical Core: 4
2023-09-04 17:48:24,855:INFO:Logical Core: 8
2023-09-04 17:48:24,855:INFO:Checking libraries
2023-09-04 17:48:24,855:INFO:System:
2023-09-04 17:48:24,856:INFO:    python: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]
2023-09-04 17:48:24,856:INFO:executable: /bin/python
2023-09-04 17:48:24,856:INFO:   machine: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-04 17:48:24,856:INFO:PyCaret required dependencies:
2023-09-04 17:48:24,860:INFO:                 pip: 22.0.2
2023-09-04 17:48:24,860:INFO:          setuptools: 59.6.0
2023-09-04 17:48:24,860:INFO:             pycaret: 3.0.4
2023-09-04 17:48:24,860:INFO:             IPython: 7.31.1
2023-09-04 17:48:24,860:INFO:          ipywidgets: 6.0.0
2023-09-04 17:48:24,860:INFO:                tqdm: 4.65.0
2023-09-04 17:48:24,860:INFO:               numpy: 1.21.5
2023-09-04 17:48:24,860:INFO:              pandas: 1.5.2
2023-09-04 17:48:24,860:INFO:              jinja2: 3.0.3
2023-09-04 17:48:24,860:INFO:               scipy: 1.8.0
2023-09-04 17:48:24,860:INFO:              joblib: 1.2.0
2023-09-04 17:48:24,860:INFO:             sklearn: 1.2.0
2023-09-04 17:48:24,860:INFO:                pyod: 1.1.0
2023-09-04 17:48:24,860:INFO:            imblearn: 0.11.0
2023-09-04 17:48:24,860:INFO:   category_encoders: 2.6.2
2023-09-04 17:48:24,860:INFO:            lightgbm: 4.0.0
2023-09-04 17:48:24,860:INFO:               numba: 0.57.1
2023-09-04 17:48:24,861:INFO:            requests: 2.25.1
2023-09-04 17:48:24,861:INFO:          matplotlib: 3.5.1
2023-09-04 17:48:24,861:INFO:          scikitplot: 0.3.7
2023-09-04 17:48:24,861:INFO:         yellowbrick: 1.5
2023-09-04 17:48:24,861:INFO:              plotly: 5.16.1
2023-09-04 17:48:24,861:INFO:    plotly-resampler: Not installed
2023-09-04 17:48:24,861:INFO:             kaleido: 0.2.1
2023-09-04 17:48:24,861:INFO:           schemdraw: 0.15
2023-09-04 17:48:24,861:INFO:         statsmodels: 0.14.0
2023-09-04 17:48:24,861:INFO:              sktime: 0.22.0
2023-09-04 17:48:24,861:INFO:               tbats: 1.1.3
2023-09-04 17:48:24,861:INFO:            pmdarima: 2.0.3
2023-09-04 17:48:24,861:INFO:              psutil: 5.9.0
2023-09-04 17:48:24,861:INFO:          markupsafe: 2.0.1
2023-09-04 17:48:24,861:INFO:             pickle5: Not installed
2023-09-04 17:48:24,861:INFO:         cloudpickle: 2.2.1
2023-09-04 17:48:24,861:INFO:         deprecation: 2.1.0
2023-09-04 17:48:24,861:INFO:              xxhash: 3.3.0
2023-09-04 17:48:24,861:INFO:           wurlitzer: 3.0.3
2023-09-04 17:48:24,861:INFO:PyCaret optional dependencies:
2023-09-04 17:48:24,861:INFO:                shap: Not installed
2023-09-04 17:48:24,861:INFO:           interpret: Not installed
2023-09-04 17:48:24,861:INFO:                umap: Not installed
2023-09-04 17:48:24,861:INFO:    pandas_profiling: Not installed
2023-09-04 17:48:24,861:INFO:  explainerdashboard: Not installed
2023-09-04 17:48:24,861:INFO:             autoviz: Not installed
2023-09-04 17:48:24,861:INFO:           fairlearn: Not installed
2023-09-04 17:48:24,861:INFO:          deepchecks: Not installed
2023-09-04 17:48:24,861:INFO:             xgboost: Not installed
2023-09-04 17:48:24,861:INFO:            catboost: Not installed
2023-09-04 17:48:24,861:INFO:              kmodes: Not installed
2023-09-04 17:48:24,861:INFO:             mlxtend: Not installed
2023-09-04 17:48:24,861:INFO:       statsforecast: Not installed
2023-09-04 17:48:24,862:INFO:        tune_sklearn: Not installed
2023-09-04 17:48:24,862:INFO:                 ray: Not installed
2023-09-04 17:48:24,862:INFO:            hyperopt: Not installed
2023-09-04 17:48:24,862:INFO:              optuna: Not installed
2023-09-04 17:48:24,862:INFO:               skopt: Not installed
2023-09-04 17:48:24,862:INFO:              mlflow: Not installed
2023-09-04 17:48:24,862:INFO:              gradio: Not installed
2023-09-04 17:48:24,862:INFO:             fastapi: Not installed
2023-09-04 17:48:24,862:INFO:             uvicorn: Not installed
2023-09-04 17:48:24,862:INFO:              m2cgen: Not installed
2023-09-04 17:48:24,862:INFO:           evidently: Not installed
2023-09-04 17:48:24,862:INFO:               fugue: Not installed
2023-09-04 17:48:24,862:INFO:           streamlit: Not installed
2023-09-04 17:48:24,862:INFO:             prophet: Not installed
2023-09-04 17:48:24,862:INFO:None
2023-09-04 17:48:24,863:INFO:Set up data.
2023-09-04 17:48:24,997:INFO:Set up train/test split.
2023-09-04 17:48:25,074:INFO:Set up index.
2023-09-04 17:48:25,075:INFO:Set up folding strategy.
2023-09-04 17:48:25,076:INFO:Assigning column types.
2023-09-04 17:48:25,090:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-04 17:48:25,144:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 17:48:25,154:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 17:48:25,202:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:25,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:25,255:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 17:48:25,256:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 17:48:25,286:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:25,286:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:25,287:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-04 17:48:25,334:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 17:48:25,364:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:25,365:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:25,408:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 17:48:25,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:25,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:25,438:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-09-04 17:48:25,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:25,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:25,587:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:25,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:25,593:INFO:Preparing preprocessing pipeline...
2023-09-04 17:48:25,598:INFO:Set up label encoding.
2023-09-04 17:48:25,599:INFO:Set up simple imputation.
2023-09-04 17:48:25,617:INFO:Set up encoding of ordinal features.
2023-09-04 17:48:25,622:INFO:Set up encoding of categorical features.
2023-09-04 17:48:25,626:INFO:Set up column name cleaning.
2023-09-04 17:48:26,057:INFO:Finished creating preprocessing pipeline.
2023-09-04 17:48:26,084:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-09-04 17:48:26,084:INFO:Creating final display dataframe.
2023-09-04 17:48:26,332:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (48842, 15)
5        Transformed data shape        (48842, 67)
6   Transformed train set shape        (34189, 67)
7    Transformed test set shape        (14653, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Fold Generator    StratifiedKFold
18                  Fold Number                 10
19                     CPU Jobs                 -1
20                      Use GPU              False
21               Log Experiment              False
22              Experiment Name   clf-default-name
23                          USI               1c6a
2023-09-04 17:48:26,455:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:26,455:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:26,541:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:26,541:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:48:26,549:INFO:setup() successfully completed in 1.98s...............
2023-09-04 17:48:28,950:INFO:Initializing compare_models()
2023-09-04 17:48:28,951:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f21472db4c0>, include=['lr', 'knn'], fold=None, round=4, cross_validation=True, sort=Precision, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f21472db4c0>, 'include': ['lr', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Precision', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-04 17:48:28,951:INFO:Checking exceptions
2023-09-04 17:48:28,964:INFO:Preparing display monitor
2023-09-04 17:48:29,034:INFO:Initializing Logistic Regression
2023-09-04 17:48:29,035:INFO:Total runtime is 7.09692637125651e-06 minutes
2023-09-04 17:48:29,042:INFO:SubProcess create_model() called ==================================
2023-09-04 17:48:29,045:INFO:Initializing create_model()
2023-09-04 17:48:29,046:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f21472db4c0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2147418850>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 17:48:29,046:INFO:Checking exceptions
2023-09-04 17:48:29,047:INFO:Importing libraries
2023-09-04 17:48:29,047:INFO:Copying training dataset
2023-09-04 17:48:29,069:INFO:Defining folds
2023-09-04 17:48:29,070:INFO:Declaring metric variables
2023-09-04 17:48:29,074:INFO:Importing untrained model
2023-09-04 17:48:29,081:INFO:Logistic Regression Imported successfully
2023-09-04 17:48:29,095:INFO:Starting cross validation
2023-09-04 17:48:29,100:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 17:48:36,162:INFO:Calculating mean and std
2023-09-04 17:48:36,172:INFO:Creating metrics dataframe
2023-09-04 17:48:36,320:INFO:Uploading results into container
2023-09-04 17:48:36,321:INFO:Uploading model into container now
2023-09-04 17:48:36,322:INFO:_master_model_container: 1
2023-09-04 17:48:36,322:INFO:_display_container: 2
2023-09-04 17:48:36,324:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-04 17:48:36,324:INFO:create_model() successfully completed......................................
2023-09-04 17:48:38,800:INFO:SubProcess create_model() end ==================================
2023-09-04 17:48:38,800:INFO:Creating metrics dataframe
2023-09-04 17:48:38,828:INFO:Initializing K Neighbors Classifier
2023-09-04 17:48:38,829:INFO:Total runtime is 0.16324165264765422 minutes
2023-09-04 17:48:38,838:INFO:SubProcess create_model() called ==================================
2023-09-04 17:48:38,839:INFO:Initializing create_model()
2023-09-04 17:48:38,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f21472db4c0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f2147418850>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 17:48:38,839:INFO:Checking exceptions
2023-09-04 17:48:38,839:INFO:Importing libraries
2023-09-04 17:48:38,839:INFO:Copying training dataset
2023-09-04 17:48:38,869:INFO:Defining folds
2023-09-04 17:48:38,869:INFO:Declaring metric variables
2023-09-04 17:48:38,879:INFO:Importing untrained model
2023-09-04 17:48:38,888:INFO:K Neighbors Classifier Imported successfully
2023-09-04 17:48:38,903:INFO:Starting cross validation
2023-09-04 17:48:38,908:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 17:48:45,750:INFO:Calculating mean and std
2023-09-04 17:48:45,751:INFO:Creating metrics dataframe
2023-09-04 17:48:45,890:INFO:Uploading results into container
2023-09-04 17:48:45,891:INFO:Uploading model into container now
2023-09-04 17:48:45,895:INFO:_master_model_container: 2
2023-09-04 17:48:45,896:INFO:_display_container: 2
2023-09-04 17:48:45,897:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-04 17:48:45,897:INFO:create_model() successfully completed......................................
2023-09-04 17:48:46,051:INFO:SubProcess create_model() end ==================================
2023-09-04 17:48:46,051:INFO:Creating metrics dataframe
2023-09-04 17:48:46,078:INFO:Initializing create_model()
2023-09-04 17:48:46,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f21472db4c0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-04 17:48:46,078:INFO:Checking exceptions
2023-09-04 17:48:46,081:INFO:Importing libraries
2023-09-04 17:48:46,081:INFO:Copying training dataset
2023-09-04 17:48:46,108:INFO:Defining folds
2023-09-04 17:48:46,108:INFO:Declaring metric variables
2023-09-04 17:48:46,108:INFO:Importing untrained model
2023-09-04 17:48:46,108:INFO:Declaring custom model
2023-09-04 17:48:46,110:INFO:Logistic Regression Imported successfully
2023-09-04 17:48:46,113:INFO:Cross validation set to False
2023-09-04 17:48:46,114:INFO:Fitting Model
2023-09-04 17:48:46,584:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-04 17:48:46,584:INFO:create_model() successfully completed......................................
2023-09-04 17:48:46,765:INFO:_master_model_container: 2
2023-09-04 17:48:46,765:INFO:_display_container: 2
2023-09-04 17:48:46,766:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-04 17:48:46,766:INFO:compare_models() successfully completed......................................
2023-09-04 17:49:52,253:INFO:PyCaret RegressionExperiment
2023-09-04 17:49:52,253:INFO:Logging name: reg-default-name
2023-09-04 17:49:52,253:INFO:ML Usecase: MLUsecase.REGRESSION
2023-09-04 17:49:52,253:INFO:version 3.0.4
2023-09-04 17:49:52,253:INFO:Initializing setup()
2023-09-04 17:49:52,253:INFO:self.USI: 6fb5
2023-09-04 17:49:52,253:INFO:self._variable_keys: {'fold_shuffle_param', '_ml_usecase', 'X_test', 'fold_generator', 'fold_groups_param', 'memory', 'seed', 'log_plots_param', 'idx', 'gpu_n_jobs_param', 'target_param', 'html_param', 'exp_name_log', 'transform_target_param', 'X', 'y_train', 'X_train', 'y', 'exp_id', 'gpu_param', 'n_jobs_param', 'pipeline', 'data', '_available_plots', 'USI', 'y_test', 'logging_param'}
2023-09-04 17:49:52,253:INFO:Checking environment
2023-09-04 17:49:52,253:INFO:python_version: 3.10.12
2023-09-04 17:49:52,253:INFO:python_build: ('main', 'Jun 11 2023 05:26:28')
2023-09-04 17:49:52,253:INFO:machine: x86_64
2023-09-04 17:49:52,253:INFO:platform: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-04 17:49:52,253:INFO:Memory: svmem(total=8140144640, available=1636380672, percent=79.9, used=5669261312, free=280358912, active=2747031552, inactive=4223844352, buffers=20291584, cached=2170232832, shared=474288128, slab=635297792)
2023-09-04 17:49:52,254:INFO:Physical Core: 4
2023-09-04 17:49:52,254:INFO:Logical Core: 8
2023-09-04 17:49:52,254:INFO:Checking libraries
2023-09-04 17:49:52,254:INFO:System:
2023-09-04 17:49:52,254:INFO:    python: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]
2023-09-04 17:49:52,254:INFO:executable: /bin/python
2023-09-04 17:49:52,254:INFO:   machine: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-04 17:49:52,254:INFO:PyCaret required dependencies:
2023-09-04 17:49:52,254:INFO:                 pip: 22.0.2
2023-09-04 17:49:52,254:INFO:          setuptools: 59.6.0
2023-09-04 17:49:52,255:INFO:             pycaret: 3.0.4
2023-09-04 17:49:52,255:INFO:             IPython: 7.31.1
2023-09-04 17:49:52,255:INFO:          ipywidgets: 6.0.0
2023-09-04 17:49:52,255:INFO:                tqdm: 4.65.0
2023-09-04 17:49:52,255:INFO:               numpy: 1.21.5
2023-09-04 17:49:52,255:INFO:              pandas: 1.5.2
2023-09-04 17:49:52,255:INFO:              jinja2: 3.0.3
2023-09-04 17:49:52,255:INFO:               scipy: 1.8.0
2023-09-04 17:49:52,255:INFO:              joblib: 1.2.0
2023-09-04 17:49:52,255:INFO:             sklearn: 1.2.0
2023-09-04 17:49:52,255:INFO:                pyod: 1.1.0
2023-09-04 17:49:52,255:INFO:            imblearn: 0.11.0
2023-09-04 17:49:52,255:INFO:   category_encoders: 2.6.2
2023-09-04 17:49:52,255:INFO:            lightgbm: 4.0.0
2023-09-04 17:49:52,255:INFO:               numba: 0.57.1
2023-09-04 17:49:52,255:INFO:            requests: 2.25.1
2023-09-04 17:49:52,255:INFO:          matplotlib: 3.5.1
2023-09-04 17:49:52,255:INFO:          scikitplot: 0.3.7
2023-09-04 17:49:52,255:INFO:         yellowbrick: 1.5
2023-09-04 17:49:52,255:INFO:              plotly: 5.16.1
2023-09-04 17:49:52,255:INFO:    plotly-resampler: Not installed
2023-09-04 17:49:52,255:INFO:             kaleido: 0.2.1
2023-09-04 17:49:52,255:INFO:           schemdraw: 0.15
2023-09-04 17:49:52,255:INFO:         statsmodels: 0.14.0
2023-09-04 17:49:52,255:INFO:              sktime: 0.22.0
2023-09-04 17:49:52,255:INFO:               tbats: 1.1.3
2023-09-04 17:49:52,256:INFO:            pmdarima: 2.0.3
2023-09-04 17:49:52,256:INFO:              psutil: 5.9.0
2023-09-04 17:49:52,256:INFO:          markupsafe: 2.0.1
2023-09-04 17:49:52,256:INFO:             pickle5: Not installed
2023-09-04 17:49:52,256:INFO:         cloudpickle: 2.2.1
2023-09-04 17:49:52,256:INFO:         deprecation: 2.1.0
2023-09-04 17:49:52,256:INFO:              xxhash: 3.3.0
2023-09-04 17:49:52,256:INFO:           wurlitzer: 3.0.3
2023-09-04 17:49:52,256:INFO:PyCaret optional dependencies:
2023-09-04 17:49:52,256:INFO:                shap: Not installed
2023-09-04 17:49:52,256:INFO:           interpret: Not installed
2023-09-04 17:49:52,256:INFO:                umap: Not installed
2023-09-04 17:49:52,256:INFO:    pandas_profiling: Not installed
2023-09-04 17:49:52,256:INFO:  explainerdashboard: Not installed
2023-09-04 17:49:52,256:INFO:             autoviz: Not installed
2023-09-04 17:49:52,256:INFO:           fairlearn: Not installed
2023-09-04 17:49:52,256:INFO:          deepchecks: Not installed
2023-09-04 17:49:52,256:INFO:             xgboost: Not installed
2023-09-04 17:49:52,256:INFO:            catboost: Not installed
2023-09-04 17:49:52,256:INFO:              kmodes: Not installed
2023-09-04 17:49:52,256:INFO:             mlxtend: Not installed
2023-09-04 17:49:52,256:INFO:       statsforecast: Not installed
2023-09-04 17:49:52,256:INFO:        tune_sklearn: Not installed
2023-09-04 17:49:52,256:INFO:                 ray: Not installed
2023-09-04 17:49:52,257:INFO:            hyperopt: Not installed
2023-09-04 17:49:52,257:INFO:              optuna: Not installed
2023-09-04 17:49:52,257:INFO:               skopt: Not installed
2023-09-04 17:49:52,257:INFO:              mlflow: Not installed
2023-09-04 17:49:52,257:INFO:              gradio: Not installed
2023-09-04 17:49:52,257:INFO:             fastapi: Not installed
2023-09-04 17:49:52,257:INFO:             uvicorn: Not installed
2023-09-04 17:49:52,257:INFO:              m2cgen: Not installed
2023-09-04 17:49:52,257:INFO:           evidently: Not installed
2023-09-04 17:49:52,257:INFO:               fugue: Not installed
2023-09-04 17:49:52,257:INFO:           streamlit: Not installed
2023-09-04 17:49:52,257:INFO:             prophet: Not installed
2023-09-04 17:49:52,257:INFO:None
2023-09-04 17:49:52,257:INFO:Set up data.
2023-09-04 17:49:52,307:INFO:Set up train/test split.
2023-09-04 17:49:52,322:INFO:Set up index.
2023-09-04 17:49:52,323:INFO:Set up folding strategy.
2023-09-04 17:49:52,323:INFO:Assigning column types.
2023-09-04 17:49:52,332:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-04 17:49:52,332:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,340:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,347:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,414:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,456:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,457:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:52,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:52,458:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,462:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,466:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,525:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,564:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,565:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:52,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:52,565:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-09-04 17:49:52,570:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,574:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,639:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,685:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:52,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:52,690:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,696:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,763:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,806:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:52,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:52,807:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-09-04 17:49:52,816:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,885:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,939:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 17:49:52,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:52,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:52,954:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-04 17:49:53,066:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 17:49:53,158:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 17:49:53,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:53,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:53,164:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-09-04 17:49:53,296:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 17:49:53,432:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 17:49:53,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:53,436:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:53,542:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 17:49:53,584:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 17:49:53,585:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:53,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:53,585:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-04 17:49:53,647:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 17:49:53,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:53,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:53,753:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-04 17:49:53,792:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:53,792:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:53,792:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-09-04 17:49:53,892:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:53,892:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:53,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:53,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:53,996:INFO:Preparing preprocessing pipeline...
2023-09-04 17:49:53,996:INFO:Set up simple imputation.
2023-09-04 17:49:54,004:INFO:Set up encoding of ordinal features.
2023-09-04 17:49:54,009:INFO:Set up encoding of categorical features.
2023-09-04 17:49:54,010:INFO:Set up column name cleaning.
2023-09-04 17:49:54,601:INFO:Finished creating preprocessing pipeline.
2023-09-04 17:49:54,637:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('c...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-09-04 17:49:54,637:INFO:Creating final display dataframe.
2023-09-04 17:49:54,923:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            fnlwgt
2                   Target type        Regression
3           Original data shape       (48842, 15)
4        Transformed data shape       (48842, 67)
5   Transformed train set shape       (34189, 67)
6    Transformed test set shape       (14653, 67)
7              Ordinal features                 2
8              Numeric features                 5
9          Categorical features                 9
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              6fb5
2023-09-04 17:49:55,069:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:55,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:55,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:55,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 17:49:55,169:INFO:setup() successfully completed in 3.0s...............
2023-09-04 17:50:02,786:INFO:Initializing compare_models()
2023-09-04 17:50:02,786:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f214789a950>, include=['lr', 'knn'], fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7f214789a950>, 'include': ['lr', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-09-04 17:50:02,786:INFO:Checking exceptions
2023-09-04 17:50:02,803:INFO:Preparing display monitor
2023-09-04 17:50:02,877:INFO:Initializing Linear Regression
2023-09-04 17:50:02,878:INFO:Total runtime is 6.12338383992513e-06 minutes
2023-09-04 17:50:02,886:INFO:SubProcess create_model() called ==================================
2023-09-04 17:50:02,887:INFO:Initializing create_model()
2023-09-04 17:50:02,888:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f214789a950>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f21473b8130>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 17:50:02,888:INFO:Checking exceptions
2023-09-04 17:50:02,888:INFO:Importing libraries
2023-09-04 17:50:02,888:INFO:Copying training dataset
2023-09-04 17:50:02,917:INFO:Defining folds
2023-09-04 17:50:02,917:INFO:Declaring metric variables
2023-09-04 17:50:02,923:INFO:Importing untrained model
2023-09-04 17:50:02,934:INFO:Linear Regression Imported successfully
2023-09-04 17:50:02,956:INFO:Starting cross validation
2023-09-04 17:50:02,964:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 17:50:05,909:INFO:Calculating mean and std
2023-09-04 17:50:05,910:INFO:Creating metrics dataframe
2023-09-04 17:50:06,065:INFO:Uploading results into container
2023-09-04 17:50:06,066:INFO:Uploading model into container now
2023-09-04 17:50:06,067:INFO:_master_model_container: 1
2023-09-04 17:50:06,067:INFO:_display_container: 2
2023-09-04 17:50:06,067:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-09-04 17:50:06,068:INFO:create_model() successfully completed......................................
2023-09-04 17:50:06,258:INFO:SubProcess create_model() end ==================================
2023-09-04 17:50:06,259:INFO:Creating metrics dataframe
2023-09-04 17:50:06,281:INFO:Initializing K Neighbors Regressor
2023-09-04 17:50:06,281:INFO:Total runtime is 0.05673430363337199 minutes
2023-09-04 17:50:06,287:INFO:SubProcess create_model() called ==================================
2023-09-04 17:50:06,288:INFO:Initializing create_model()
2023-09-04 17:50:06,289:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f214789a950>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f21473b8130>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 17:50:06,289:INFO:Checking exceptions
2023-09-04 17:50:06,289:INFO:Importing libraries
2023-09-04 17:50:06,290:INFO:Copying training dataset
2023-09-04 17:50:06,315:INFO:Defining folds
2023-09-04 17:50:06,315:INFO:Declaring metric variables
2023-09-04 17:50:06,324:INFO:Importing untrained model
2023-09-04 17:50:06,336:INFO:K Neighbors Regressor Imported successfully
2023-09-04 17:50:06,353:INFO:Starting cross validation
2023-09-04 17:50:06,358:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 17:50:12,138:INFO:Calculating mean and std
2023-09-04 17:50:12,140:INFO:Creating metrics dataframe
2023-09-04 17:50:12,287:INFO:Uploading results into container
2023-09-04 17:50:12,287:INFO:Uploading model into container now
2023-09-04 17:50:12,288:INFO:_master_model_container: 2
2023-09-04 17:50:12,288:INFO:_display_container: 2
2023-09-04 17:50:12,288:INFO:KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
                    metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                    weights='uniform')
2023-09-04 17:50:12,289:INFO:create_model() successfully completed......................................
2023-09-04 17:50:12,480:INFO:SubProcess create_model() end ==================================
2023-09-04 17:50:12,480:INFO:Creating metrics dataframe
2023-09-04 17:50:12,516:INFO:Initializing create_model()
2023-09-04 17:50:12,516:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7f214789a950>, estimator=LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-04 17:50:12,517:INFO:Checking exceptions
2023-09-04 17:50:12,520:INFO:Importing libraries
2023-09-04 17:50:12,520:INFO:Copying training dataset
2023-09-04 17:50:12,551:INFO:Defining folds
2023-09-04 17:50:12,551:INFO:Declaring metric variables
2023-09-04 17:50:12,551:INFO:Importing untrained model
2023-09-04 17:50:12,551:INFO:Declaring custom model
2023-09-04 17:50:12,552:INFO:Linear Regression Imported successfully
2023-09-04 17:50:12,557:INFO:Cross validation set to False
2023-09-04 17:50:12,557:INFO:Fitting Model
2023-09-04 17:50:13,926:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-09-04 17:50:13,926:INFO:create_model() successfully completed......................................
2023-09-04 17:50:14,142:INFO:_master_model_container: 2
2023-09-04 17:50:14,142:INFO:_display_container: 2
2023-09-04 17:50:14,142:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-09-04 17:50:14,142:INFO:compare_models() successfully completed......................................
2023-09-04 18:21:49,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-04 18:21:49,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-04 18:21:49,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-04 18:21:49,554:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-04 18:21:54,122:INFO:PyCaret ClassificationExperiment
2023-09-04 18:21:54,122:INFO:Logging name: clf-default-name
2023-09-04 18:21:54,122:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-09-04 18:21:54,122:INFO:version 3.0.4
2023-09-04 18:21:54,122:INFO:Initializing setup()
2023-09-04 18:21:54,122:INFO:self.USI: 7aac
2023-09-04 18:21:54,122:INFO:self._variable_keys: {'exp_id', 'y_test', 'exp_name_log', 'fold_groups_param', 'fix_imbalance', 'is_multiclass', 'data', 'target_param', 'gpu_n_jobs_param', 'logging_param', 'fold_shuffle_param', 'USI', 'fold_generator', 'html_param', 'memory', 'pipeline', 'y_train', 'idx', 'gpu_param', 'y', 'X', 'seed', 'X_train', 'log_plots_param', 'X_test', '_ml_usecase', 'n_jobs_param', '_available_plots'}
2023-09-04 18:21:54,122:INFO:Checking environment
2023-09-04 18:21:54,123:INFO:python_version: 3.10.12
2023-09-04 18:21:54,123:INFO:python_build: ('main', 'Jun 11 2023 05:26:28')
2023-09-04 18:21:54,123:INFO:machine: x86_64
2023-09-04 18:21:54,123:INFO:platform: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-04 18:21:54,123:INFO:Memory: svmem(total=8140144640, available=2042650624, percent=74.9, used=5126668288, free=160452608, active=1716899840, inactive=5071204352, buffers=188014592, cached=2665009152, shared=670572544, slab=634834944)
2023-09-04 18:21:54,124:INFO:Physical Core: 4
2023-09-04 18:21:54,124:INFO:Logical Core: 8
2023-09-04 18:21:54,124:INFO:Checking libraries
2023-09-04 18:21:54,124:INFO:System:
2023-09-04 18:21:54,124:INFO:    python: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]
2023-09-04 18:21:54,124:INFO:executable: /bin/python
2023-09-04 18:21:54,124:INFO:   machine: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-04 18:21:54,124:INFO:PyCaret required dependencies:
2023-09-04 18:21:54,141:INFO:                 pip: 22.0.2
2023-09-04 18:21:54,141:INFO:          setuptools: 59.6.0
2023-09-04 18:21:54,141:INFO:             pycaret: 3.0.4
2023-09-04 18:21:54,141:INFO:             IPython: 7.31.1
2023-09-04 18:21:54,141:INFO:          ipywidgets: 6.0.0
2023-09-04 18:21:54,141:INFO:                tqdm: 4.65.0
2023-09-04 18:21:54,141:INFO:               numpy: 1.21.5
2023-09-04 18:21:54,141:INFO:              pandas: 1.5.2
2023-09-04 18:21:54,141:INFO:              jinja2: 3.0.3
2023-09-04 18:21:54,141:INFO:               scipy: 1.8.0
2023-09-04 18:21:54,141:INFO:              joblib: 1.2.0
2023-09-04 18:21:54,141:INFO:             sklearn: 1.2.0
2023-09-04 18:21:54,141:INFO:                pyod: 1.1.0
2023-09-04 18:21:54,141:INFO:            imblearn: 0.11.0
2023-09-04 18:21:54,141:INFO:   category_encoders: 2.6.2
2023-09-04 18:21:54,141:INFO:            lightgbm: 4.0.0
2023-09-04 18:21:54,142:INFO:               numba: 0.57.1
2023-09-04 18:21:54,142:INFO:            requests: 2.25.1
2023-09-04 18:21:54,142:INFO:          matplotlib: 3.5.1
2023-09-04 18:21:54,142:INFO:          scikitplot: 0.3.7
2023-09-04 18:21:54,142:INFO:         yellowbrick: 1.5
2023-09-04 18:21:54,142:INFO:              plotly: 5.16.1
2023-09-04 18:21:54,142:INFO:    plotly-resampler: Not installed
2023-09-04 18:21:54,142:INFO:             kaleido: 0.2.1
2023-09-04 18:21:54,142:INFO:           schemdraw: 0.15
2023-09-04 18:21:54,142:INFO:         statsmodels: 0.14.0
2023-09-04 18:21:54,142:INFO:              sktime: 0.22.0
2023-09-04 18:21:54,142:INFO:               tbats: 1.1.3
2023-09-04 18:21:54,142:INFO:            pmdarima: 2.0.3
2023-09-04 18:21:54,142:INFO:              psutil: 5.9.0
2023-09-04 18:21:54,142:INFO:          markupsafe: 2.0.1
2023-09-04 18:21:54,142:INFO:             pickle5: Not installed
2023-09-04 18:21:54,142:INFO:         cloudpickle: 2.2.1
2023-09-04 18:21:54,142:INFO:         deprecation: 2.1.0
2023-09-04 18:21:54,142:INFO:              xxhash: 3.3.0
2023-09-04 18:21:54,142:INFO:           wurlitzer: 3.0.3
2023-09-04 18:21:54,142:INFO:PyCaret optional dependencies:
2023-09-04 18:21:54,158:INFO:                shap: Not installed
2023-09-04 18:21:54,158:INFO:           interpret: Not installed
2023-09-04 18:21:54,158:INFO:                umap: Not installed
2023-09-04 18:21:54,158:INFO:    pandas_profiling: Not installed
2023-09-04 18:21:54,158:INFO:  explainerdashboard: Not installed
2023-09-04 18:21:54,158:INFO:             autoviz: Not installed
2023-09-04 18:21:54,159:INFO:           fairlearn: Not installed
2023-09-04 18:21:54,159:INFO:          deepchecks: Not installed
2023-09-04 18:21:54,159:INFO:             xgboost: Not installed
2023-09-04 18:21:54,159:INFO:            catboost: Not installed
2023-09-04 18:21:54,159:INFO:              kmodes: Not installed
2023-09-04 18:21:54,159:INFO:             mlxtend: Not installed
2023-09-04 18:21:54,159:INFO:       statsforecast: Not installed
2023-09-04 18:21:54,159:INFO:        tune_sklearn: Not installed
2023-09-04 18:21:54,159:INFO:                 ray: Not installed
2023-09-04 18:21:54,159:INFO:            hyperopt: Not installed
2023-09-04 18:21:54,159:INFO:              optuna: Not installed
2023-09-04 18:21:54,159:INFO:               skopt: Not installed
2023-09-04 18:21:54,159:INFO:              mlflow: Not installed
2023-09-04 18:21:54,159:INFO:              gradio: Not installed
2023-09-04 18:21:54,159:INFO:             fastapi: Not installed
2023-09-04 18:21:54,159:INFO:             uvicorn: Not installed
2023-09-04 18:21:54,159:INFO:              m2cgen: Not installed
2023-09-04 18:21:54,159:INFO:           evidently: Not installed
2023-09-04 18:21:54,159:INFO:               fugue: Not installed
2023-09-04 18:21:54,159:INFO:           streamlit: Not installed
2023-09-04 18:21:54,159:INFO:             prophet: Not installed
2023-09-04 18:21:54,159:INFO:None
2023-09-04 18:21:54,159:INFO:Set up data.
2023-09-04 18:21:54,206:INFO:Set up train/test split.
2023-09-04 18:21:54,254:INFO:Set up index.
2023-09-04 18:21:54,255:INFO:Set up folding strategy.
2023-09-04 18:21:54,255:INFO:Assigning column types.
2023-09-04 18:21:54,260:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-04 18:21:54,300:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 18:21:54,303:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 18:21:54,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:54,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:54,374:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-04 18:21:54,375:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 18:21:54,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:54,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:54,399:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-04 18:21:54,439:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 18:21:54,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:54,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:54,504:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-04 18:21:54,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:54,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:54,529:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-09-04 18:21:54,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:54,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:54,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:54,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:54,669:INFO:Preparing preprocessing pipeline...
2023-09-04 18:21:54,671:INFO:Set up label encoding.
2023-09-04 18:21:54,671:INFO:Set up simple imputation.
2023-09-04 18:21:54,678:INFO:Set up encoding of ordinal features.
2023-09-04 18:21:54,682:INFO:Set up encoding of categorical features.
2023-09-04 18:21:54,684:INFO:Set up column name cleaning.
2023-09-04 18:21:55,148:INFO:Finished creating preprocessing pipeline.
2023-09-04 18:21:55,203:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-09-04 18:21:55,203:INFO:Creating final display dataframe.
2023-09-04 18:21:55,678:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (48842, 15)
5        Transformed data shape        (48842, 67)
6   Transformed train set shape        (34189, 67)
7    Transformed test set shape        (14653, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Fold Generator    StratifiedKFold
18                  Fold Number                 10
19                     CPU Jobs                 -1
20                      Use GPU              False
21               Log Experiment              False
22              Experiment Name   clf-default-name
23                          USI               7aac
2023-09-04 18:21:55,819:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:55,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:55,898:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:55,898:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-04 18:21:55,899:INFO:setup() successfully completed in 1.88s...............
2023-09-04 18:21:58,211:INFO:Initializing compare_models()
2023-09-04 18:21:58,211:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f06f0477fa0>, include=['lr', 'knn'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f06f0477fa0>, 'include': ['lr', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-04 18:21:58,211:INFO:Checking exceptions
2023-09-04 18:21:58,228:INFO:Preparing display monitor
2023-09-04 18:21:58,302:INFO:Initializing Logistic Regression
2023-09-04 18:21:58,303:INFO:Total runtime is 1.0693073272705078e-05 minutes
2023-09-04 18:21:58,310:INFO:SubProcess create_model() called ==================================
2023-09-04 18:21:58,312:INFO:Initializing create_model()
2023-09-04 18:21:58,312:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f06f0477fa0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f06f017f130>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 18:21:58,313:INFO:Checking exceptions
2023-09-04 18:21:58,313:INFO:Importing libraries
2023-09-04 18:21:58,313:INFO:Copying training dataset
2023-09-04 18:21:58,354:INFO:Defining folds
2023-09-04 18:21:58,354:INFO:Declaring metric variables
2023-09-04 18:21:58,363:INFO:Importing untrained model
2023-09-04 18:21:58,374:INFO:Logistic Regression Imported successfully
2023-09-04 18:21:58,393:INFO:Starting cross validation
2023-09-04 18:21:58,399:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 18:22:06,005:INFO:Calculating mean and std
2023-09-04 18:22:06,008:INFO:Creating metrics dataframe
2023-09-04 18:22:06,167:INFO:Uploading results into container
2023-09-04 18:22:06,168:INFO:Uploading model into container now
2023-09-04 18:22:06,168:INFO:_master_model_container: 1
2023-09-04 18:22:06,168:INFO:_display_container: 2
2023-09-04 18:22:06,169:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-04 18:22:06,169:INFO:create_model() successfully completed......................................
2023-09-04 18:22:06,257:INFO:SubProcess create_model() end ==================================
2023-09-04 18:22:06,257:INFO:Creating metrics dataframe
2023-09-04 18:22:06,274:INFO:Initializing K Neighbors Classifier
2023-09-04 18:22:06,275:INFO:Total runtime is 0.13287749290466308 minutes
2023-09-04 18:22:06,281:INFO:SubProcess create_model() called ==================================
2023-09-04 18:22:06,282:INFO:Initializing create_model()
2023-09-04 18:22:06,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f06f0477fa0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f06f017f130>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 18:22:06,282:INFO:Checking exceptions
2023-09-04 18:22:06,282:INFO:Importing libraries
2023-09-04 18:22:06,282:INFO:Copying training dataset
2023-09-04 18:22:06,309:INFO:Defining folds
2023-09-04 18:22:06,309:INFO:Declaring metric variables
2023-09-04 18:22:06,317:INFO:Importing untrained model
2023-09-04 18:22:06,325:INFO:K Neighbors Classifier Imported successfully
2023-09-04 18:22:06,343:INFO:Starting cross validation
2023-09-04 18:22:06,348:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 18:22:14,171:INFO:Calculating mean and std
2023-09-04 18:22:14,172:INFO:Creating metrics dataframe
2023-09-04 18:22:14,336:INFO:Uploading results into container
2023-09-04 18:22:14,337:INFO:Uploading model into container now
2023-09-04 18:22:14,338:INFO:_master_model_container: 2
2023-09-04 18:22:14,338:INFO:_display_container: 2
2023-09-04 18:22:14,338:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-04 18:22:14,338:INFO:create_model() successfully completed......................................
2023-09-04 18:22:14,421:INFO:SubProcess create_model() end ==================================
2023-09-04 18:22:14,421:INFO:Creating metrics dataframe
2023-09-04 18:22:14,455:INFO:Initializing create_model()
2023-09-04 18:22:14,456:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f06f0477fa0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-04 18:22:14,456:INFO:Checking exceptions
2023-09-04 18:22:14,459:INFO:Importing libraries
2023-09-04 18:22:14,459:INFO:Copying training dataset
2023-09-04 18:22:14,473:INFO:Defining folds
2023-09-04 18:22:14,473:INFO:Declaring metric variables
2023-09-04 18:22:14,474:INFO:Importing untrained model
2023-09-04 18:22:14,474:INFO:Declaring custom model
2023-09-04 18:22:14,474:INFO:Logistic Regression Imported successfully
2023-09-04 18:22:14,477:INFO:Cross validation set to False
2023-09-04 18:22:14,477:INFO:Fitting Model
2023-09-04 18:22:14,919:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-04 18:22:14,919:INFO:create_model() successfully completed......................................
2023-09-04 18:22:15,034:INFO:_master_model_container: 2
2023-09-04 18:22:15,034:INFO:_display_container: 2
2023-09-04 18:22:15,035:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-04 18:22:15,035:INFO:compare_models() successfully completed......................................
2023-09-04 18:22:46,713:INFO:Initializing compare_models()
2023-09-04 18:22:46,715:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f06f0477fa0>, include=['lr', 'knn'], fold=None, round=4, cross_validation=True, sort=Prec., n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f06f0477fa0>, 'include': ['lr', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Prec.', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-04 18:22:46,716:INFO:Checking exceptions
2023-09-04 18:22:46,724:INFO:Preparing display monitor
2023-09-04 18:22:46,776:INFO:Initializing Logistic Regression
2023-09-04 18:22:46,776:INFO:Total runtime is 9.818871815999348e-06 minutes
2023-09-04 18:22:46,785:INFO:SubProcess create_model() called ==================================
2023-09-04 18:22:46,786:INFO:Initializing create_model()
2023-09-04 18:22:46,786:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f06f0477fa0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f06f02d5690>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 18:22:46,786:INFO:Checking exceptions
2023-09-04 18:22:46,787:INFO:Importing libraries
2023-09-04 18:22:46,787:INFO:Copying training dataset
2023-09-04 18:22:46,811:INFO:Defining folds
2023-09-04 18:22:46,811:INFO:Declaring metric variables
2023-09-04 18:22:46,817:INFO:Importing untrained model
2023-09-04 18:22:46,823:INFO:Logistic Regression Imported successfully
2023-09-04 18:22:46,838:INFO:Starting cross validation
2023-09-04 18:22:46,843:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 18:22:48,781:INFO:Calculating mean and std
2023-09-04 18:22:48,782:INFO:Creating metrics dataframe
2023-09-04 18:22:48,940:INFO:Uploading results into container
2023-09-04 18:22:48,941:INFO:Uploading model into container now
2023-09-04 18:22:48,942:INFO:_master_model_container: 3
2023-09-04 18:22:48,942:INFO:_display_container: 3
2023-09-04 18:22:48,942:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-04 18:22:48,942:INFO:create_model() successfully completed......................................
2023-09-04 18:22:49,028:INFO:SubProcess create_model() end ==================================
2023-09-04 18:22:49,029:INFO:Creating metrics dataframe
2023-09-04 18:22:49,045:INFO:Initializing K Neighbors Classifier
2023-09-04 18:22:49,045:INFO:Total runtime is 0.0378273328145345 minutes
2023-09-04 18:22:49,051:INFO:SubProcess create_model() called ==================================
2023-09-04 18:22:49,052:INFO:Initializing create_model()
2023-09-04 18:22:49,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f06f0477fa0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f06f02d5690>, model_only=True, return_train_score=False, kwargs={})
2023-09-04 18:22:49,052:INFO:Checking exceptions
2023-09-04 18:22:49,052:INFO:Importing libraries
2023-09-04 18:22:49,052:INFO:Copying training dataset
2023-09-04 18:22:49,070:INFO:Defining folds
2023-09-04 18:22:49,071:INFO:Declaring metric variables
2023-09-04 18:22:49,078:INFO:Importing untrained model
2023-09-04 18:22:49,083:INFO:K Neighbors Classifier Imported successfully
2023-09-04 18:22:49,097:INFO:Starting cross validation
2023-09-04 18:22:49,101:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-04 18:22:55,878:INFO:Calculating mean and std
2023-09-04 18:22:55,880:INFO:Creating metrics dataframe
2023-09-04 18:22:56,030:INFO:Uploading results into container
2023-09-04 18:22:56,032:INFO:Uploading model into container now
2023-09-04 18:22:56,032:INFO:_master_model_container: 4
2023-09-04 18:22:56,032:INFO:_display_container: 3
2023-09-04 18:22:56,033:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-04 18:22:56,033:INFO:create_model() successfully completed......................................
2023-09-04 18:22:56,116:INFO:SubProcess create_model() end ==================================
2023-09-04 18:22:56,116:INFO:Creating metrics dataframe
2023-09-04 18:22:56,152:INFO:Initializing create_model()
2023-09-04 18:22:56,152:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f06f0477fa0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-04 18:22:56,152:INFO:Checking exceptions
2023-09-04 18:22:56,155:INFO:Importing libraries
2023-09-04 18:22:56,155:INFO:Copying training dataset
2023-09-04 18:22:56,182:INFO:Defining folds
2023-09-04 18:22:56,182:INFO:Declaring metric variables
2023-09-04 18:22:56,182:INFO:Importing untrained model
2023-09-04 18:22:56,182:INFO:Declaring custom model
2023-09-04 18:22:56,183:INFO:Logistic Regression Imported successfully
2023-09-04 18:22:56,186:INFO:Cross validation set to False
2023-09-04 18:22:56,186:INFO:Fitting Model
2023-09-04 18:22:56,568:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-04 18:22:56,568:INFO:create_model() successfully completed......................................
2023-09-04 18:22:56,702:INFO:_master_model_container: 4
2023-09-04 18:22:56,702:INFO:_display_container: 3
2023-09-04 18:22:56,703:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-04 18:22:56,703:INFO:compare_models() successfully completed......................................
2023-09-05 15:18:44,978:INFO:PyCaret ClassificationExperiment
2023-09-05 15:18:44,979:INFO:Logging name: clf-default-name
2023-09-05 15:18:44,980:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-09-05 15:18:44,980:INFO:version 3.0.4
2023-09-05 15:18:44,980:INFO:Initializing setup()
2023-09-05 15:18:44,980:INFO:self.USI: 6743
2023-09-05 15:18:44,980:INFO:self._variable_keys: {'exp_id', 'y_test', 'exp_name_log', 'fold_groups_param', 'fix_imbalance', 'is_multiclass', 'data', 'target_param', 'gpu_n_jobs_param', 'logging_param', 'fold_shuffle_param', 'USI', 'fold_generator', 'html_param', 'memory', 'pipeline', 'y_train', 'idx', 'gpu_param', 'y', 'X', 'seed', 'X_train', 'log_plots_param', 'X_test', '_ml_usecase', 'n_jobs_param', '_available_plots'}
2023-09-05 15:18:44,980:INFO:Checking environment
2023-09-05 15:18:44,982:INFO:python_version: 3.10.12
2023-09-05 15:18:44,982:INFO:python_build: ('main', 'Jun 11 2023 05:26:28')
2023-09-05 15:18:44,983:INFO:machine: x86_64
2023-09-05 15:18:44,984:INFO:platform: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-05 15:18:44,988:INFO:Memory: svmem(total=8140144640, available=1711333376, percent=79.0, used=5313458176, free=758140928, active=2710134784, inactive=3531075584, buffers=106287104, cached=1962258432, shared=731521024, slab=675364864)
2023-09-05 15:18:44,990:INFO:Physical Core: 4
2023-09-05 15:18:44,991:INFO:Logical Core: 8
2023-09-05 15:18:44,991:INFO:Checking libraries
2023-09-05 15:18:44,992:INFO:System:
2023-09-05 15:18:44,992:INFO:    python: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]
2023-09-05 15:18:44,992:INFO:executable: /bin/python
2023-09-05 15:18:44,992:INFO:   machine: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-05 15:18:44,992:INFO:PyCaret required dependencies:
2023-09-05 15:18:45,000:INFO:                 pip: 22.0.2
2023-09-05 15:18:45,000:INFO:          setuptools: 59.6.0
2023-09-05 15:18:45,000:INFO:             pycaret: 3.0.4
2023-09-05 15:18:45,000:INFO:             IPython: 7.31.1
2023-09-05 15:18:45,000:INFO:          ipywidgets: 6.0.0
2023-09-05 15:18:45,000:INFO:                tqdm: 4.65.0
2023-09-05 15:18:45,000:INFO:               numpy: 1.21.5
2023-09-05 15:18:45,000:INFO:              pandas: 1.5.2
2023-09-05 15:18:45,000:INFO:              jinja2: 3.0.3
2023-09-05 15:18:45,000:INFO:               scipy: 1.8.0
2023-09-05 15:18:45,000:INFO:              joblib: 1.2.0
2023-09-05 15:18:45,000:INFO:             sklearn: 1.2.0
2023-09-05 15:18:45,000:INFO:                pyod: 1.1.0
2023-09-05 15:18:45,000:INFO:            imblearn: 0.11.0
2023-09-05 15:18:45,000:INFO:   category_encoders: 2.6.2
2023-09-05 15:18:45,000:INFO:            lightgbm: 4.0.0
2023-09-05 15:18:45,000:INFO:               numba: 0.57.1
2023-09-05 15:18:45,000:INFO:            requests: 2.25.1
2023-09-05 15:18:45,000:INFO:          matplotlib: 3.5.1
2023-09-05 15:18:45,001:INFO:          scikitplot: 0.3.7
2023-09-05 15:18:45,001:INFO:         yellowbrick: 1.5
2023-09-05 15:18:45,001:INFO:              plotly: 5.16.1
2023-09-05 15:18:45,001:INFO:    plotly-resampler: Not installed
2023-09-05 15:18:45,001:INFO:             kaleido: 0.2.1
2023-09-05 15:18:45,001:INFO:           schemdraw: 0.15
2023-09-05 15:18:45,001:INFO:         statsmodels: 0.14.0
2023-09-05 15:18:45,001:INFO:              sktime: 0.22.0
2023-09-05 15:18:45,001:INFO:               tbats: 1.1.3
2023-09-05 15:18:45,001:INFO:            pmdarima: 2.0.3
2023-09-05 15:18:45,001:INFO:              psutil: 5.9.0
2023-09-05 15:18:45,001:INFO:          markupsafe: 2.0.1
2023-09-05 15:18:45,001:INFO:             pickle5: Not installed
2023-09-05 15:18:45,001:INFO:         cloudpickle: 2.2.1
2023-09-05 15:18:45,001:INFO:         deprecation: 2.1.0
2023-09-05 15:18:45,001:INFO:              xxhash: 3.3.0
2023-09-05 15:18:45,001:INFO:           wurlitzer: 3.0.3
2023-09-05 15:18:45,001:INFO:PyCaret optional dependencies:
2023-09-05 15:18:45,001:INFO:                shap: Not installed
2023-09-05 15:18:45,001:INFO:           interpret: Not installed
2023-09-05 15:18:45,001:INFO:                umap: Not installed
2023-09-05 15:18:45,001:INFO:    pandas_profiling: Not installed
2023-09-05 15:18:45,001:INFO:  explainerdashboard: Not installed
2023-09-05 15:18:45,001:INFO:             autoviz: Not installed
2023-09-05 15:18:45,001:INFO:           fairlearn: Not installed
2023-09-05 15:18:45,001:INFO:          deepchecks: Not installed
2023-09-05 15:18:45,001:INFO:             xgboost: Not installed
2023-09-05 15:18:45,001:INFO:            catboost: Not installed
2023-09-05 15:18:45,001:INFO:              kmodes: Not installed
2023-09-05 15:18:45,002:INFO:             mlxtend: Not installed
2023-09-05 15:18:45,002:INFO:       statsforecast: Not installed
2023-09-05 15:18:45,002:INFO:        tune_sklearn: Not installed
2023-09-05 15:18:45,002:INFO:                 ray: Not installed
2023-09-05 15:18:45,002:INFO:            hyperopt: Not installed
2023-09-05 15:18:45,002:INFO:              optuna: Not installed
2023-09-05 15:18:45,002:INFO:               skopt: Not installed
2023-09-05 15:18:45,002:INFO:              mlflow: Not installed
2023-09-05 15:18:45,002:INFO:              gradio: Not installed
2023-09-05 15:18:45,002:INFO:             fastapi: Not installed
2023-09-05 15:18:45,002:INFO:             uvicorn: Not installed
2023-09-05 15:18:45,002:INFO:              m2cgen: Not installed
2023-09-05 15:18:45,002:INFO:           evidently: Not installed
2023-09-05 15:18:45,002:INFO:               fugue: Not installed
2023-09-05 15:18:45,002:INFO:           streamlit: Not installed
2023-09-05 15:18:45,002:INFO:             prophet: Not installed
2023-09-05 15:18:45,002:INFO:None
2023-09-05 15:18:45,003:INFO:Set up data.
2023-09-05 15:18:45,211:INFO:Set up train/test split.
2023-09-05 15:18:45,337:INFO:Set up index.
2023-09-05 15:18:45,340:INFO:Set up folding strategy.
2023-09-05 15:18:45,343:INFO:Assigning column types.
2023-09-05 15:18:45,364:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-05 15:18:45,427:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-05 15:18:45,444:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-05 15:18:45,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:45,505:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:45,559:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-05 15:18:45,561:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-05 15:18:45,603:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:45,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:45,608:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-05 15:18:45,693:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-05 15:18:45,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:45,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:45,769:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-05 15:18:45,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:45,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:45,804:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-09-05 15:18:45,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:45,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:45,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:45,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:46,002:INFO:Preparing preprocessing pipeline...
2023-09-05 15:18:46,010:INFO:Set up label encoding.
2023-09-05 15:18:46,013:INFO:Set up simple imputation.
2023-09-05 15:18:46,049:INFO:Set up encoding of ordinal features.
2023-09-05 15:18:46,055:INFO:Set up encoding of categorical features.
2023-09-05 15:18:46,060:INFO:Set up column name cleaning.
2023-09-05 15:18:46,697:INFO:Finished creating preprocessing pipeline.
2023-09-05 15:18:46,738:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-09-05 15:18:46,738:INFO:Creating final display dataframe.
2023-09-05 15:18:47,010:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (48842, 15)
5        Transformed data shape        (48842, 67)
6   Transformed train set shape        (34189, 67)
7    Transformed test set shape        (14653, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Fold Generator    StratifiedKFold
18                  Fold Number                 10
19                     CPU Jobs                 -1
20                      Use GPU              False
21               Log Experiment              False
22              Experiment Name   clf-default-name
23                          USI               6743
2023-09-05 15:18:47,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:47,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:47,305:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:47,306:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:18:47,316:INFO:setup() successfully completed in 2.83s...............
2023-09-05 15:29:28,120:INFO:Initializing compare_models()
2023-09-05 15:29:28,122:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f06f01aa8c0>, include=['lr', 'knn'], fold=None, round=4, cross_validation=True, sort=Prec., n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f06f01aa8c0>, 'include': ['lr', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Prec.', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-05 15:29:28,122:INFO:Checking exceptions
2023-09-05 15:29:28,184:INFO:Preparing display monitor
2023-09-05 15:29:28,272:INFO:Initializing Logistic Regression
2023-09-05 15:29:28,273:INFO:Total runtime is 5.280971527099609e-06 minutes
2023-09-05 15:29:28,277:INFO:SubProcess create_model() called ==================================
2023-09-05 15:29:28,280:INFO:Initializing create_model()
2023-09-05 15:29:28,280:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f06f01aa8c0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f06c952a920>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:29:28,281:INFO:Checking exceptions
2023-09-05 15:29:28,281:INFO:Importing libraries
2023-09-05 15:29:28,281:INFO:Copying training dataset
2023-09-05 15:29:28,314:INFO:Defining folds
2023-09-05 15:29:28,314:INFO:Declaring metric variables
2023-09-05 15:29:28,322:INFO:Importing untrained model
2023-09-05 15:29:28,331:INFO:Logistic Regression Imported successfully
2023-09-05 15:29:28,351:INFO:Starting cross validation
2023-09-05 15:29:28,358:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:38:57,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-05 15:38:57,728:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-05 15:38:57,729:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-05 15:38:57,729:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-05 15:39:01,724:INFO:PyCaret ClassificationExperiment
2023-09-05 15:39:01,724:INFO:Logging name: clf-default-name
2023-09-05 15:39:01,724:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-09-05 15:39:01,724:INFO:version 3.0.4
2023-09-05 15:39:01,724:INFO:Initializing setup()
2023-09-05 15:39:01,724:INFO:self.USI: 25e6
2023-09-05 15:39:01,724:INFO:self._variable_keys: {'gpu_n_jobs_param', 'idx', 'exp_name_log', 'n_jobs_param', 'fold_shuffle_param', 'y_train', 'exp_id', 'target_param', 'seed', 'USI', 'html_param', 'fold_generator', 'X_test', 'gpu_param', 'data', 'X', 'fix_imbalance', 'logging_param', 'pipeline', 'fold_groups_param', '_available_plots', 'X_train', 'y_test', 'is_multiclass', 'y', '_ml_usecase', 'memory', 'log_plots_param'}
2023-09-05 15:39:01,725:INFO:Checking environment
2023-09-05 15:39:01,725:INFO:python_version: 3.10.12
2023-09-05 15:39:01,725:INFO:python_build: ('main', 'Jun 11 2023 05:26:28')
2023-09-05 15:39:01,725:INFO:machine: x86_64
2023-09-05 15:39:01,725:INFO:platform: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-05 15:39:01,725:INFO:Memory: svmem(total=8140144640, available=1753071616, percent=78.5, used=5351477248, free=135634944, active=2018496512, inactive=5047427072, buffers=199950336, cached=2453082112, shared=721727488, slab=695484416)
2023-09-05 15:39:01,726:INFO:Physical Core: 4
2023-09-05 15:39:01,726:INFO:Logical Core: 8
2023-09-05 15:39:01,726:INFO:Checking libraries
2023-09-05 15:39:01,726:INFO:System:
2023-09-05 15:39:01,726:INFO:    python: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]
2023-09-05 15:39:01,726:INFO:executable: /bin/python
2023-09-05 15:39:01,726:INFO:   machine: Linux-6.2.0-31-generic-x86_64-with-glibc2.35
2023-09-05 15:39:01,726:INFO:PyCaret required dependencies:
2023-09-05 15:39:01,745:INFO:                 pip: 22.0.2
2023-09-05 15:39:01,745:INFO:          setuptools: 59.6.0
2023-09-05 15:39:01,745:INFO:             pycaret: 3.0.4
2023-09-05 15:39:01,745:INFO:             IPython: 7.31.1
2023-09-05 15:39:01,745:INFO:          ipywidgets: 6.0.0
2023-09-05 15:39:01,745:INFO:                tqdm: 4.65.0
2023-09-05 15:39:01,745:INFO:               numpy: 1.21.5
2023-09-05 15:39:01,745:INFO:              pandas: 1.5.2
2023-09-05 15:39:01,745:INFO:              jinja2: 3.0.3
2023-09-05 15:39:01,745:INFO:               scipy: 1.8.0
2023-09-05 15:39:01,745:INFO:              joblib: 1.2.0
2023-09-05 15:39:01,745:INFO:             sklearn: 1.2.0
2023-09-05 15:39:01,745:INFO:                pyod: 1.1.0
2023-09-05 15:39:01,745:INFO:            imblearn: 0.11.0
2023-09-05 15:39:01,745:INFO:   category_encoders: 2.6.2
2023-09-05 15:39:01,745:INFO:            lightgbm: 4.0.0
2023-09-05 15:39:01,746:INFO:               numba: 0.57.1
2023-09-05 15:39:01,746:INFO:            requests: 2.25.1
2023-09-05 15:39:01,746:INFO:          matplotlib: 3.5.1
2023-09-05 15:39:01,746:INFO:          scikitplot: 0.3.7
2023-09-05 15:39:01,746:INFO:         yellowbrick: 1.5
2023-09-05 15:39:01,746:INFO:              plotly: 5.16.1
2023-09-05 15:39:01,746:INFO:    plotly-resampler: Not installed
2023-09-05 15:39:01,746:INFO:             kaleido: 0.2.1
2023-09-05 15:39:01,746:INFO:           schemdraw: 0.15
2023-09-05 15:39:01,746:INFO:         statsmodels: 0.14.0
2023-09-05 15:39:01,746:INFO:              sktime: 0.22.0
2023-09-05 15:39:01,746:INFO:               tbats: 1.1.3
2023-09-05 15:39:01,746:INFO:            pmdarima: 2.0.3
2023-09-05 15:39:01,746:INFO:              psutil: 5.9.0
2023-09-05 15:39:01,746:INFO:          markupsafe: 2.0.1
2023-09-05 15:39:01,746:INFO:             pickle5: Not installed
2023-09-05 15:39:01,746:INFO:         cloudpickle: 2.2.1
2023-09-05 15:39:01,746:INFO:         deprecation: 2.1.0
2023-09-05 15:39:01,746:INFO:              xxhash: 3.3.0
2023-09-05 15:39:01,746:INFO:           wurlitzer: 3.0.3
2023-09-05 15:39:01,746:INFO:PyCaret optional dependencies:
2023-09-05 15:39:01,760:INFO:                shap: Not installed
2023-09-05 15:39:01,760:INFO:           interpret: Not installed
2023-09-05 15:39:01,760:INFO:                umap: Not installed
2023-09-05 15:39:01,760:INFO:    pandas_profiling: Not installed
2023-09-05 15:39:01,760:INFO:  explainerdashboard: Not installed
2023-09-05 15:39:01,760:INFO:             autoviz: Not installed
2023-09-05 15:39:01,760:INFO:           fairlearn: Not installed
2023-09-05 15:39:01,760:INFO:          deepchecks: Not installed
2023-09-05 15:39:01,760:INFO:             xgboost: Not installed
2023-09-05 15:39:01,760:INFO:            catboost: Not installed
2023-09-05 15:39:01,760:INFO:              kmodes: Not installed
2023-09-05 15:39:01,760:INFO:             mlxtend: Not installed
2023-09-05 15:39:01,760:INFO:       statsforecast: Not installed
2023-09-05 15:39:01,761:INFO:        tune_sklearn: Not installed
2023-09-05 15:39:01,761:INFO:                 ray: Not installed
2023-09-05 15:39:01,761:INFO:            hyperopt: Not installed
2023-09-05 15:39:01,761:INFO:              optuna: Not installed
2023-09-05 15:39:01,761:INFO:               skopt: Not installed
2023-09-05 15:39:01,761:INFO:              mlflow: Not installed
2023-09-05 15:39:01,761:INFO:              gradio: Not installed
2023-09-05 15:39:01,761:INFO:             fastapi: Not installed
2023-09-05 15:39:01,761:INFO:             uvicorn: Not installed
2023-09-05 15:39:01,761:INFO:              m2cgen: Not installed
2023-09-05 15:39:01,761:INFO:           evidently: Not installed
2023-09-05 15:39:01,761:INFO:               fugue: Not installed
2023-09-05 15:39:01,761:INFO:           streamlit: Not installed
2023-09-05 15:39:01,761:INFO:             prophet: Not installed
2023-09-05 15:39:01,761:INFO:None
2023-09-05 15:39:01,761:INFO:Set up data.
2023-09-05 15:39:01,808:INFO:Set up train/test split.
2023-09-05 15:39:01,858:INFO:Set up index.
2023-09-05 15:39:01,859:INFO:Set up folding strategy.
2023-09-05 15:39:01,859:INFO:Assigning column types.
2023-09-05 15:39:01,864:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-05 15:39:01,904:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-05 15:39:01,915:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-05 15:39:01,959:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:01,959:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:01,996:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-05 15:39:01,997:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-05 15:39:02,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:02,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:02,022:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-05 15:39:02,066:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-05 15:39:02,097:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:02,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:02,140:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-05 15:39:02,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:02,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:02,166:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-09-05 15:39:02,233:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:02,233:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:02,300:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:02,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:02,302:INFO:Preparing preprocessing pipeline...
2023-09-05 15:39:02,307:INFO:Set up label encoding.
2023-09-05 15:39:02,307:INFO:Set up simple imputation.
2023-09-05 15:39:02,316:INFO:Set up encoding of ordinal features.
2023-09-05 15:39:02,318:INFO:Set up encoding of categorical features.
2023-09-05 15:39:02,319:INFO:Set up column name cleaning.
2023-09-05 15:39:02,889:INFO:Finished creating preprocessing pipeline.
2023-09-05 15:39:02,914:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-09-05 15:39:02,914:INFO:Creating final display dataframe.
2023-09-05 15:39:03,193:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (48842, 15)
5        Transformed data shape        (48842, 67)
6   Transformed train set shape        (34189, 67)
7    Transformed test set shape        (14653, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Fold Generator    StratifiedKFold
18                  Fold Number                 10
19                     CPU Jobs                 -1
20                      Use GPU              False
21               Log Experiment              False
22              Experiment Name   clf-default-name
23                          USI               25e6
2023-09-05 15:39:03,320:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:03,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:03,394:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:03,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-05 15:39:03,395:INFO:setup() successfully completed in 1.9s...............
2023-09-05 15:39:16,042:INFO:Initializing compare_models()
2023-09-05 15:39:16,044:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, include=['lr', 'knn'], fold=None, round=4, cross_validation=True, sort=Prec., n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, 'include': ['lr', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Prec.', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-05 15:39:16,044:INFO:Checking exceptions
2023-09-05 15:39:16,055:INFO:Preparing display monitor
2023-09-05 15:39:16,110:INFO:Initializing Logistic Regression
2023-09-05 15:39:16,111:INFO:Total runtime is 1.3415018717447916e-05 minutes
2023-09-05 15:39:16,119:INFO:SubProcess create_model() called ==================================
2023-09-05 15:39:16,120:INFO:Initializing create_model()
2023-09-05 15:39:16,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f40362c3850>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:39:16,120:INFO:Checking exceptions
2023-09-05 15:39:16,120:INFO:Importing libraries
2023-09-05 15:39:16,121:INFO:Copying training dataset
2023-09-05 15:39:16,154:INFO:Defining folds
2023-09-05 15:39:16,154:INFO:Declaring metric variables
2023-09-05 15:39:16,165:INFO:Importing untrained model
2023-09-05 15:39:16,174:INFO:Logistic Regression Imported successfully
2023-09-05 15:39:16,185:INFO:Starting cross validation
2023-09-05 15:39:16,188:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:39:24,793:INFO:Calculating mean and std
2023-09-05 15:39:24,797:INFO:Creating metrics dataframe
2023-09-05 15:39:24,971:INFO:Uploading results into container
2023-09-05 15:39:24,972:INFO:Uploading model into container now
2023-09-05 15:39:24,974:INFO:_master_model_container: 1
2023-09-05 15:39:24,975:INFO:_display_container: 2
2023-09-05 15:39:24,975:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:39:24,975:INFO:create_model() successfully completed......................................
2023-09-05 15:39:25,067:INFO:SubProcess create_model() end ==================================
2023-09-05 15:39:25,067:INFO:Creating metrics dataframe
2023-09-05 15:39:25,085:INFO:Initializing K Neighbors Classifier
2023-09-05 15:39:25,085:INFO:Total runtime is 0.14958614508310955 minutes
2023-09-05 15:39:25,090:INFO:SubProcess create_model() called ==================================
2023-09-05 15:39:25,090:INFO:Initializing create_model()
2023-09-05 15:39:25,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f40362c3850>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:39:25,090:INFO:Checking exceptions
2023-09-05 15:39:25,091:INFO:Importing libraries
2023-09-05 15:39:25,091:INFO:Copying training dataset
2023-09-05 15:39:25,106:INFO:Defining folds
2023-09-05 15:39:25,107:INFO:Declaring metric variables
2023-09-05 15:39:25,112:INFO:Importing untrained model
2023-09-05 15:39:25,122:INFO:K Neighbors Classifier Imported successfully
2023-09-05 15:39:25,140:INFO:Starting cross validation
2023-09-05 15:39:25,145:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:39:32,860:INFO:Calculating mean and std
2023-09-05 15:39:32,862:INFO:Creating metrics dataframe
2023-09-05 15:39:33,055:INFO:Uploading results into container
2023-09-05 15:39:33,056:INFO:Uploading model into container now
2023-09-05 15:39:33,056:INFO:_master_model_container: 2
2023-09-05 15:39:33,056:INFO:_display_container: 2
2023-09-05 15:39:33,057:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-05 15:39:33,057:INFO:create_model() successfully completed......................................
2023-09-05 15:39:33,144:INFO:SubProcess create_model() end ==================================
2023-09-05 15:39:33,144:INFO:Creating metrics dataframe
2023-09-05 15:39:33,178:INFO:Initializing create_model()
2023-09-05 15:39:33,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:39:33,178:INFO:Checking exceptions
2023-09-05 15:39:33,181:INFO:Importing libraries
2023-09-05 15:39:33,181:INFO:Copying training dataset
2023-09-05 15:39:33,205:INFO:Defining folds
2023-09-05 15:39:33,206:INFO:Declaring metric variables
2023-09-05 15:39:33,206:INFO:Importing untrained model
2023-09-05 15:39:33,206:INFO:Declaring custom model
2023-09-05 15:39:33,207:INFO:Logistic Regression Imported successfully
2023-09-05 15:39:33,212:INFO:Cross validation set to False
2023-09-05 15:39:33,212:INFO:Fitting Model
2023-09-05 15:39:33,683:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:39:33,684:INFO:create_model() successfully completed......................................
2023-09-05 15:39:33,793:INFO:_master_model_container: 2
2023-09-05 15:39:33,793:INFO:_display_container: 2
2023-09-05 15:39:33,794:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:39:33,794:INFO:compare_models() successfully completed......................................
2023-09-05 15:42:15,810:INFO:Initializing compare_models()
2023-09-05 15:42:15,811:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, include=['lr', 'knn'], fold=None, round=4, cross_validation=True, sort=Prec., n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, 'include': ['lr', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Prec.', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-05 15:42:15,812:INFO:Checking exceptions
2023-09-05 15:42:15,820:INFO:Preparing display monitor
2023-09-05 15:42:15,885:INFO:Initializing Logistic Regression
2023-09-05 15:42:15,886:INFO:Total runtime is 1.1412302652994792e-05 minutes
2023-09-05 15:42:15,897:INFO:SubProcess create_model() called ==================================
2023-09-05 15:42:15,898:INFO:Initializing create_model()
2023-09-05 15:42:15,899:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f40363fb190>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:42:15,899:INFO:Checking exceptions
2023-09-05 15:42:15,899:INFO:Importing libraries
2023-09-05 15:42:15,899:INFO:Copying training dataset
2023-09-05 15:42:15,921:INFO:Defining folds
2023-09-05 15:42:15,922:INFO:Declaring metric variables
2023-09-05 15:42:15,929:INFO:Importing untrained model
2023-09-05 15:42:15,936:INFO:Logistic Regression Imported successfully
2023-09-05 15:42:15,950:INFO:Starting cross validation
2023-09-05 15:42:15,955:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:42:17,863:INFO:Calculating mean and std
2023-09-05 15:42:17,864:INFO:Creating metrics dataframe
2023-09-05 15:42:18,040:INFO:Uploading results into container
2023-09-05 15:42:18,041:INFO:Uploading model into container now
2023-09-05 15:42:18,041:INFO:_master_model_container: 3
2023-09-05 15:42:18,041:INFO:_display_container: 3
2023-09-05 15:42:18,042:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:42:18,042:INFO:create_model() successfully completed......................................
2023-09-05 15:42:18,120:INFO:SubProcess create_model() end ==================================
2023-09-05 15:42:18,121:INFO:Creating metrics dataframe
2023-09-05 15:42:18,140:INFO:Initializing K Neighbors Classifier
2023-09-05 15:42:18,140:INFO:Total runtime is 0.03758426109949748 minutes
2023-09-05 15:42:18,146:INFO:SubProcess create_model() called ==================================
2023-09-05 15:42:18,147:INFO:Initializing create_model()
2023-09-05 15:42:18,147:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f40363fb190>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:42:18,147:INFO:Checking exceptions
2023-09-05 15:42:18,148:INFO:Importing libraries
2023-09-05 15:42:18,148:INFO:Copying training dataset
2023-09-05 15:42:18,172:INFO:Defining folds
2023-09-05 15:42:18,173:INFO:Declaring metric variables
2023-09-05 15:42:18,181:INFO:Importing untrained model
2023-09-05 15:42:18,189:INFO:K Neighbors Classifier Imported successfully
2023-09-05 15:42:18,208:INFO:Starting cross validation
2023-09-05 15:42:18,213:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:42:24,682:INFO:Calculating mean and std
2023-09-05 15:42:24,683:INFO:Creating metrics dataframe
2023-09-05 15:42:24,867:INFO:Uploading results into container
2023-09-05 15:42:24,868:INFO:Uploading model into container now
2023-09-05 15:42:24,868:INFO:_master_model_container: 4
2023-09-05 15:42:24,868:INFO:_display_container: 3
2023-09-05 15:42:24,868:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-05 15:42:24,869:INFO:create_model() successfully completed......................................
2023-09-05 15:42:24,951:INFO:SubProcess create_model() end ==================================
2023-09-05 15:42:24,951:INFO:Creating metrics dataframe
2023-09-05 15:42:24,983:INFO:Initializing create_model()
2023-09-05 15:42:24,984:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:42:24,984:INFO:Checking exceptions
2023-09-05 15:42:24,988:INFO:Importing libraries
2023-09-05 15:42:24,988:INFO:Copying training dataset
2023-09-05 15:42:25,009:INFO:Defining folds
2023-09-05 15:42:25,009:INFO:Declaring metric variables
2023-09-05 15:42:25,009:INFO:Importing untrained model
2023-09-05 15:42:25,009:INFO:Declaring custom model
2023-09-05 15:42:25,010:INFO:Logistic Regression Imported successfully
2023-09-05 15:42:25,014:INFO:Cross validation set to False
2023-09-05 15:42:25,014:INFO:Fitting Model
2023-09-05 15:42:25,365:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:42:25,365:INFO:create_model() successfully completed......................................
2023-09-05 15:42:25,478:INFO:_master_model_container: 4
2023-09-05 15:42:25,479:INFO:_display_container: 3
2023-09-05 15:42:25,481:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:42:25,482:INFO:compare_models() successfully completed......................................
2023-09-05 15:42:35,489:INFO:Initializing compare_models()
2023-09-05 15:42:35,489:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, include=['lr', 'knn'], fold=None, round=4, cross_validation=True, sort=Prec., n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, 'include': ['lr', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Prec.', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-05 15:42:35,490:INFO:Checking exceptions
2023-09-05 15:42:35,506:INFO:Preparing display monitor
2023-09-05 15:42:35,601:INFO:Initializing Logistic Regression
2023-09-05 15:42:35,601:INFO:Total runtime is 5.718072255452474e-06 minutes
2023-09-05 15:42:35,607:INFO:SubProcess create_model() called ==================================
2023-09-05 15:42:35,608:INFO:Initializing create_model()
2023-09-05 15:42:35,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f40362c0370>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:42:35,608:INFO:Checking exceptions
2023-09-05 15:42:35,608:INFO:Importing libraries
2023-09-05 15:42:35,608:INFO:Copying training dataset
2023-09-05 15:42:35,625:INFO:Defining folds
2023-09-05 15:42:35,625:INFO:Declaring metric variables
2023-09-05 15:42:35,628:INFO:Importing untrained model
2023-09-05 15:42:35,634:INFO:Logistic Regression Imported successfully
2023-09-05 15:42:35,650:INFO:Starting cross validation
2023-09-05 15:42:35,653:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:42:37,391:INFO:Calculating mean and std
2023-09-05 15:42:37,392:INFO:Creating metrics dataframe
2023-09-05 15:42:37,566:INFO:Uploading results into container
2023-09-05 15:42:37,567:INFO:Uploading model into container now
2023-09-05 15:42:37,567:INFO:_master_model_container: 5
2023-09-05 15:42:37,567:INFO:_display_container: 4
2023-09-05 15:42:37,568:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:42:37,568:INFO:create_model() successfully completed......................................
2023-09-05 15:42:37,656:INFO:SubProcess create_model() end ==================================
2023-09-05 15:42:37,656:INFO:Creating metrics dataframe
2023-09-05 15:42:37,673:INFO:Initializing K Neighbors Classifier
2023-09-05 15:42:37,674:INFO:Total runtime is 0.03454958995183309 minutes
2023-09-05 15:42:37,681:INFO:SubProcess create_model() called ==================================
2023-09-05 15:42:37,681:INFO:Initializing create_model()
2023-09-05 15:42:37,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f40362c0370>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:42:37,681:INFO:Checking exceptions
2023-09-05 15:42:37,682:INFO:Importing libraries
2023-09-05 15:42:37,682:INFO:Copying training dataset
2023-09-05 15:42:37,708:INFO:Defining folds
2023-09-05 15:42:37,708:INFO:Declaring metric variables
2023-09-05 15:42:37,721:INFO:Importing untrained model
2023-09-05 15:42:37,735:INFO:K Neighbors Classifier Imported successfully
2023-09-05 15:42:37,758:INFO:Starting cross validation
2023-09-05 15:42:37,766:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:42:44,187:INFO:Calculating mean and std
2023-09-05 15:42:44,188:INFO:Creating metrics dataframe
2023-09-05 15:42:44,366:INFO:Uploading results into container
2023-09-05 15:42:44,367:INFO:Uploading model into container now
2023-09-05 15:42:44,369:INFO:_master_model_container: 6
2023-09-05 15:42:44,369:INFO:_display_container: 4
2023-09-05 15:42:44,369:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-05 15:42:44,370:INFO:create_model() successfully completed......................................
2023-09-05 15:42:44,474:INFO:SubProcess create_model() end ==================================
2023-09-05 15:42:44,474:INFO:Creating metrics dataframe
2023-09-05 15:42:44,498:INFO:Initializing create_model()
2023-09-05 15:42:44,499:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:42:44,499:INFO:Checking exceptions
2023-09-05 15:42:44,501:INFO:Importing libraries
2023-09-05 15:42:44,502:INFO:Copying training dataset
2023-09-05 15:42:44,517:INFO:Defining folds
2023-09-05 15:42:44,517:INFO:Declaring metric variables
2023-09-05 15:42:44,517:INFO:Importing untrained model
2023-09-05 15:42:44,517:INFO:Declaring custom model
2023-09-05 15:42:44,518:INFO:Logistic Regression Imported successfully
2023-09-05 15:42:44,520:INFO:Cross validation set to False
2023-09-05 15:42:44,520:INFO:Fitting Model
2023-09-05 15:42:44,862:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:42:44,862:INFO:create_model() successfully completed......................................
2023-09-05 15:42:44,974:INFO:_master_model_container: 6
2023-09-05 15:42:44,974:INFO:_display_container: 4
2023-09-05 15:42:44,975:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:42:44,975:INFO:compare_models() successfully completed......................................
2023-09-05 15:45:17,405:INFO:Initializing compare_models()
2023-09-05 15:45:17,405:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, include=['lr', 'knn'], fold=None, round=4, cross_validation=True, sort=Prec., n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, 'include': ['lr', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Prec.', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-05 15:45:17,406:INFO:Checking exceptions
2023-09-05 15:45:17,420:INFO:Preparing display monitor
2023-09-05 15:45:17,470:INFO:Initializing Logistic Regression
2023-09-05 15:45:17,471:INFO:Total runtime is 7.522106170654297e-06 minutes
2023-09-05 15:45:17,481:INFO:SubProcess create_model() called ==================================
2023-09-05 15:45:17,482:INFO:Initializing create_model()
2023-09-05 15:45:17,482:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f405c1330d0>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:45:17,482:INFO:Checking exceptions
2023-09-05 15:45:17,482:INFO:Importing libraries
2023-09-05 15:45:17,482:INFO:Copying training dataset
2023-09-05 15:45:17,504:INFO:Defining folds
2023-09-05 15:45:17,504:INFO:Declaring metric variables
2023-09-05 15:45:17,511:INFO:Importing untrained model
2023-09-05 15:45:17,519:INFO:Logistic Regression Imported successfully
2023-09-05 15:45:17,533:INFO:Starting cross validation
2023-09-05 15:45:17,540:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:45:19,328:INFO:Calculating mean and std
2023-09-05 15:45:19,330:INFO:Creating metrics dataframe
2023-09-05 15:45:19,556:INFO:Uploading results into container
2023-09-05 15:45:19,557:INFO:Uploading model into container now
2023-09-05 15:45:19,557:INFO:_master_model_container: 7
2023-09-05 15:45:19,557:INFO:_display_container: 5
2023-09-05 15:45:19,558:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:45:19,558:INFO:create_model() successfully completed......................................
2023-09-05 15:45:19,642:INFO:SubProcess create_model() end ==================================
2023-09-05 15:45:19,642:INFO:Creating metrics dataframe
2023-09-05 15:45:19,660:INFO:Initializing K Neighbors Classifier
2023-09-05 15:45:19,660:INFO:Total runtime is 0.036500597000122065 minutes
2023-09-05 15:45:19,666:INFO:SubProcess create_model() called ==================================
2023-09-05 15:45:19,667:INFO:Initializing create_model()
2023-09-05 15:45:19,667:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f405c1330d0>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:45:19,667:INFO:Checking exceptions
2023-09-05 15:45:19,667:INFO:Importing libraries
2023-09-05 15:45:19,667:INFO:Copying training dataset
2023-09-05 15:45:19,685:INFO:Defining folds
2023-09-05 15:45:19,687:INFO:Declaring metric variables
2023-09-05 15:45:19,692:INFO:Importing untrained model
2023-09-05 15:45:19,699:INFO:K Neighbors Classifier Imported successfully
2023-09-05 15:45:19,716:INFO:Starting cross validation
2023-09-05 15:45:19,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:45:26,289:INFO:Calculating mean and std
2023-09-05 15:45:26,290:INFO:Creating metrics dataframe
2023-09-05 15:45:26,472:INFO:Uploading results into container
2023-09-05 15:45:26,473:INFO:Uploading model into container now
2023-09-05 15:45:26,473:INFO:_master_model_container: 8
2023-09-05 15:45:26,473:INFO:_display_container: 5
2023-09-05 15:45:26,474:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-05 15:45:26,474:INFO:create_model() successfully completed......................................
2023-09-05 15:45:26,562:INFO:SubProcess create_model() end ==================================
2023-09-05 15:45:26,562:INFO:Creating metrics dataframe
2023-09-05 15:45:26,599:INFO:Initializing create_model()
2023-09-05 15:45:26,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:45:26,600:INFO:Checking exceptions
2023-09-05 15:45:26,605:INFO:Importing libraries
2023-09-05 15:45:26,605:INFO:Copying training dataset
2023-09-05 15:45:26,640:INFO:Defining folds
2023-09-05 15:45:26,641:INFO:Declaring metric variables
2023-09-05 15:45:26,641:INFO:Importing untrained model
2023-09-05 15:45:26,641:INFO:Declaring custom model
2023-09-05 15:45:26,644:INFO:Logistic Regression Imported successfully
2023-09-05 15:45:26,650:INFO:Cross validation set to False
2023-09-05 15:45:26,650:INFO:Fitting Model
2023-09-05 15:45:26,976:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:45:26,977:INFO:create_model() successfully completed......................................
2023-09-05 15:45:27,090:INFO:_master_model_container: 8
2023-09-05 15:45:27,090:INFO:_display_container: 5
2023-09-05 15:45:27,091:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:45:27,091:INFO:compare_models() successfully completed......................................
2023-09-05 15:45:41,567:INFO:Initializing compare_models()
2023-09-05 15:45:41,568:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, include=['lr', 'knn'], fold=None, round=4, cross_validation=True, sort=Prec., n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, 'include': ['lr', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Prec.', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-05 15:45:41,568:INFO:Checking exceptions
2023-09-05 15:45:41,585:INFO:Preparing display monitor
2023-09-05 15:45:41,647:INFO:Initializing Logistic Regression
2023-09-05 15:45:41,647:INFO:Total runtime is 8.535385131835937e-06 minutes
2023-09-05 15:45:41,658:INFO:SubProcess create_model() called ==================================
2023-09-05 15:45:41,659:INFO:Initializing create_model()
2023-09-05 15:45:41,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f403622e440>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:45:41,659:INFO:Checking exceptions
2023-09-05 15:45:41,659:INFO:Importing libraries
2023-09-05 15:45:41,659:INFO:Copying training dataset
2023-09-05 15:45:41,691:INFO:Defining folds
2023-09-05 15:45:41,691:INFO:Declaring metric variables
2023-09-05 15:45:41,696:INFO:Importing untrained model
2023-09-05 15:45:41,706:INFO:Logistic Regression Imported successfully
2023-09-05 15:45:41,721:INFO:Starting cross validation
2023-09-05 15:45:41,725:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:45:43,462:INFO:Calculating mean and std
2023-09-05 15:45:43,463:INFO:Creating metrics dataframe
2023-09-05 15:45:43,637:INFO:Uploading results into container
2023-09-05 15:45:43,637:INFO:Uploading model into container now
2023-09-05 15:45:43,638:INFO:_master_model_container: 9
2023-09-05 15:45:43,638:INFO:_display_container: 6
2023-09-05 15:45:43,638:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:45:43,638:INFO:create_model() successfully completed......................................
2023-09-05 15:45:43,719:INFO:SubProcess create_model() end ==================================
2023-09-05 15:45:43,720:INFO:Creating metrics dataframe
2023-09-05 15:45:43,737:INFO:Initializing K Neighbors Classifier
2023-09-05 15:45:43,737:INFO:Total runtime is 0.03484682242075602 minutes
2023-09-05 15:45:43,743:INFO:SubProcess create_model() called ==================================
2023-09-05 15:45:43,744:INFO:Initializing create_model()
2023-09-05 15:45:43,744:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f403622e440>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:45:43,744:INFO:Checking exceptions
2023-09-05 15:45:43,744:INFO:Importing libraries
2023-09-05 15:45:43,745:INFO:Copying training dataset
2023-09-05 15:45:43,770:INFO:Defining folds
2023-09-05 15:45:43,770:INFO:Declaring metric variables
2023-09-05 15:45:43,776:INFO:Importing untrained model
2023-09-05 15:45:43,786:INFO:K Neighbors Classifier Imported successfully
2023-09-05 15:45:43,799:INFO:Starting cross validation
2023-09-05 15:45:43,804:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:45:50,238:INFO:Calculating mean and std
2023-09-05 15:45:50,239:INFO:Creating metrics dataframe
2023-09-05 15:45:50,440:INFO:Uploading results into container
2023-09-05 15:45:50,441:INFO:Uploading model into container now
2023-09-05 15:45:50,441:INFO:_master_model_container: 10
2023-09-05 15:45:50,441:INFO:_display_container: 6
2023-09-05 15:45:50,441:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-05 15:45:50,442:INFO:create_model() successfully completed......................................
2023-09-05 15:45:50,527:INFO:SubProcess create_model() end ==================================
2023-09-05 15:45:50,527:INFO:Creating metrics dataframe
2023-09-05 15:45:50,561:INFO:Initializing create_model()
2023-09-05 15:45:50,561:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:45:50,561:INFO:Checking exceptions
2023-09-05 15:45:50,564:INFO:Importing libraries
2023-09-05 15:45:50,564:INFO:Copying training dataset
2023-09-05 15:45:50,587:INFO:Defining folds
2023-09-05 15:45:50,587:INFO:Declaring metric variables
2023-09-05 15:45:50,587:INFO:Importing untrained model
2023-09-05 15:45:50,587:INFO:Declaring custom model
2023-09-05 15:45:50,588:INFO:Logistic Regression Imported successfully
2023-09-05 15:45:50,591:INFO:Cross validation set to False
2023-09-05 15:45:50,591:INFO:Fitting Model
2023-09-05 15:45:50,963:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:45:50,963:INFO:create_model() successfully completed......................................
2023-09-05 15:45:51,092:INFO:_master_model_container: 10
2023-09-05 15:45:51,092:INFO:_display_container: 6
2023-09-05 15:45:51,094:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:45:51,094:INFO:compare_models() successfully completed......................................
2023-09-05 15:45:53,948:INFO:Initializing compare_models()
2023-09-05 15:45:53,949:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, include=['lr', 'knn'], fold=None, round=4, cross_validation=True, sort=Prec., n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, 'include': ['lr', 'knn'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Prec.', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-05 15:45:53,950:INFO:Checking exceptions
2023-09-05 15:45:53,959:INFO:Preparing display monitor
2023-09-05 15:45:54,007:INFO:Initializing Logistic Regression
2023-09-05 15:45:54,008:INFO:Total runtime is 1.2131532033284505e-05 minutes
2023-09-05 15:45:54,019:INFO:SubProcess create_model() called ==================================
2023-09-05 15:45:54,020:INFO:Initializing create_model()
2023-09-05 15:45:54,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4036513b80>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:45:54,021:INFO:Checking exceptions
2023-09-05 15:45:54,021:INFO:Importing libraries
2023-09-05 15:45:54,022:INFO:Copying training dataset
2023-09-05 15:45:54,051:INFO:Defining folds
2023-09-05 15:45:54,051:INFO:Declaring metric variables
2023-09-05 15:45:54,057:INFO:Importing untrained model
2023-09-05 15:45:54,063:INFO:Logistic Regression Imported successfully
2023-09-05 15:45:54,077:INFO:Starting cross validation
2023-09-05 15:45:54,087:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:45:55,891:INFO:Calculating mean and std
2023-09-05 15:45:55,892:INFO:Creating metrics dataframe
2023-09-05 15:45:56,073:INFO:Uploading results into container
2023-09-05 15:45:56,074:INFO:Uploading model into container now
2023-09-05 15:45:56,075:INFO:_master_model_container: 11
2023-09-05 15:45:56,075:INFO:_display_container: 7
2023-09-05 15:45:56,076:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:45:56,076:INFO:create_model() successfully completed......................................
2023-09-05 15:45:56,158:INFO:SubProcess create_model() end ==================================
2023-09-05 15:45:56,158:INFO:Creating metrics dataframe
2023-09-05 15:45:56,174:INFO:Initializing K Neighbors Classifier
2023-09-05 15:45:56,175:INFO:Total runtime is 0.036127793788909915 minutes
2023-09-05 15:45:56,180:INFO:SubProcess create_model() called ==================================
2023-09-05 15:45:56,181:INFO:Initializing create_model()
2023-09-05 15:45:56,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4036513b80>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:45:56,181:INFO:Checking exceptions
2023-09-05 15:45:56,182:INFO:Importing libraries
2023-09-05 15:45:56,182:INFO:Copying training dataset
2023-09-05 15:45:56,200:INFO:Defining folds
2023-09-05 15:45:56,200:INFO:Declaring metric variables
2023-09-05 15:45:56,207:INFO:Importing untrained model
2023-09-05 15:45:56,214:INFO:K Neighbors Classifier Imported successfully
2023-09-05 15:45:56,226:INFO:Starting cross validation
2023-09-05 15:45:56,229:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:46:02,797:INFO:Calculating mean and std
2023-09-05 15:46:02,799:INFO:Creating metrics dataframe
2023-09-05 15:46:02,978:INFO:Uploading results into container
2023-09-05 15:46:02,979:INFO:Uploading model into container now
2023-09-05 15:46:02,979:INFO:_master_model_container: 12
2023-09-05 15:46:02,979:INFO:_display_container: 7
2023-09-05 15:46:02,980:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-05 15:46:02,980:INFO:create_model() successfully completed......................................
2023-09-05 15:46:03,067:INFO:SubProcess create_model() end ==================================
2023-09-05 15:46:03,067:INFO:Creating metrics dataframe
2023-09-05 15:46:03,101:INFO:Initializing create_model()
2023-09-05 15:46:03,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:46:03,102:INFO:Checking exceptions
2023-09-05 15:46:03,105:INFO:Importing libraries
2023-09-05 15:46:03,105:INFO:Copying training dataset
2023-09-05 15:46:03,127:INFO:Defining folds
2023-09-05 15:46:03,127:INFO:Declaring metric variables
2023-09-05 15:46:03,127:INFO:Importing untrained model
2023-09-05 15:46:03,127:INFO:Declaring custom model
2023-09-05 15:46:03,129:INFO:Logistic Regression Imported successfully
2023-09-05 15:46:03,134:INFO:Cross validation set to False
2023-09-05 15:46:03,134:INFO:Fitting Model
2023-09-05 15:46:03,462:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:46:03,463:INFO:create_model() successfully completed......................................
2023-09-05 15:46:03,587:INFO:_master_model_container: 12
2023-09-05 15:46:03,587:INFO:_display_container: 7
2023-09-05 15:46:03,588:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:46:03,589:INFO:compare_models() successfully completed......................................
2023-09-05 15:46:27,317:INFO:Initializing compare_models()
2023-09-05 15:46:27,318:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, include=['knn', 'lr'], fold=None, round=4, cross_validation=True, sort=Prec., n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, 'include': ['knn', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Prec.', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-05 15:46:27,318:INFO:Checking exceptions
2023-09-05 15:46:27,336:INFO:Preparing display monitor
2023-09-05 15:46:27,420:INFO:Initializing K Neighbors Classifier
2023-09-05 15:46:27,420:INFO:Total runtime is 9.731451670328777e-06 minutes
2023-09-05 15:46:27,435:INFO:SubProcess create_model() called ==================================
2023-09-05 15:46:27,436:INFO:Initializing create_model()
2023-09-05 15:46:27,437:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f40362fdb10>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:46:27,437:INFO:Checking exceptions
2023-09-05 15:46:27,438:INFO:Importing libraries
2023-09-05 15:46:27,438:INFO:Copying training dataset
2023-09-05 15:46:27,468:INFO:Defining folds
2023-09-05 15:46:27,469:INFO:Declaring metric variables
2023-09-05 15:46:27,476:INFO:Importing untrained model
2023-09-05 15:46:27,484:INFO:K Neighbors Classifier Imported successfully
2023-09-05 15:46:27,498:INFO:Starting cross validation
2023-09-05 15:46:27,504:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:46:33,997:INFO:Calculating mean and std
2023-09-05 15:46:33,998:INFO:Creating metrics dataframe
2023-09-05 15:46:34,202:INFO:Uploading results into container
2023-09-05 15:46:34,204:INFO:Uploading model into container now
2023-09-05 15:46:34,204:INFO:_master_model_container: 13
2023-09-05 15:46:34,205:INFO:_display_container: 8
2023-09-05 15:46:34,205:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-05 15:46:34,205:INFO:create_model() successfully completed......................................
2023-09-05 15:46:34,287:INFO:SubProcess create_model() end ==================================
2023-09-05 15:46:34,287:INFO:Creating metrics dataframe
2023-09-05 15:46:34,305:INFO:Initializing Logistic Regression
2023-09-05 15:46:34,306:INFO:Total runtime is 0.11476806004842122 minutes
2023-09-05 15:46:34,311:INFO:SubProcess create_model() called ==================================
2023-09-05 15:46:34,312:INFO:Initializing create_model()
2023-09-05 15:46:34,312:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f40362fdb10>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:46:34,312:INFO:Checking exceptions
2023-09-05 15:46:34,312:INFO:Importing libraries
2023-09-05 15:46:34,312:INFO:Copying training dataset
2023-09-05 15:46:34,330:INFO:Defining folds
2023-09-05 15:46:34,330:INFO:Declaring metric variables
2023-09-05 15:46:34,336:INFO:Importing untrained model
2023-09-05 15:46:34,346:INFO:Logistic Regression Imported successfully
2023-09-05 15:46:34,360:INFO:Starting cross validation
2023-09-05 15:46:34,363:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:46:35,972:INFO:Calculating mean and std
2023-09-05 15:46:35,974:INFO:Creating metrics dataframe
2023-09-05 15:46:36,147:INFO:Uploading results into container
2023-09-05 15:46:36,147:INFO:Uploading model into container now
2023-09-05 15:46:36,148:INFO:_master_model_container: 14
2023-09-05 15:46:36,148:INFO:_display_container: 8
2023-09-05 15:46:36,148:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:46:36,149:INFO:create_model() successfully completed......................................
2023-09-05 15:46:36,230:INFO:SubProcess create_model() end ==================================
2023-09-05 15:46:36,230:INFO:Creating metrics dataframe
2023-09-05 15:46:36,263:INFO:Initializing create_model()
2023-09-05 15:46:36,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:46:36,263:INFO:Checking exceptions
2023-09-05 15:46:36,265:INFO:Importing libraries
2023-09-05 15:46:36,265:INFO:Copying training dataset
2023-09-05 15:46:36,286:INFO:Defining folds
2023-09-05 15:46:36,286:INFO:Declaring metric variables
2023-09-05 15:46:36,286:INFO:Importing untrained model
2023-09-05 15:46:36,286:INFO:Declaring custom model
2023-09-05 15:46:36,287:INFO:Logistic Regression Imported successfully
2023-09-05 15:46:36,290:INFO:Cross validation set to False
2023-09-05 15:46:36,291:INFO:Fitting Model
2023-09-05 15:46:36,587:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:46:36,587:INFO:create_model() successfully completed......................................
2023-09-05 15:46:36,703:INFO:_master_model_container: 14
2023-09-05 15:46:36,703:INFO:_display_container: 8
2023-09-05 15:46:36,704:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:46:36,705:INFO:compare_models() successfully completed......................................
2023-09-05 15:46:49,224:INFO:Initializing compare_models()
2023-09-05 15:46:49,224:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, include=['knn', 'lr'], fold=None, round=4, cross_validation=True, sort=Prec., n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, 'include': ['knn', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Prec.', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-05 15:46:49,224:INFO:Checking exceptions
2023-09-05 15:46:49,235:INFO:Preparing display monitor
2023-09-05 15:46:49,301:INFO:Initializing K Neighbors Classifier
2023-09-05 15:46:49,302:INFO:Total runtime is 8.873144785563151e-06 minutes
2023-09-05 15:46:49,310:INFO:SubProcess create_model() called ==================================
2023-09-05 15:46:49,311:INFO:Initializing create_model()
2023-09-05 15:46:49,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f403658f400>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:46:49,312:INFO:Checking exceptions
2023-09-05 15:46:49,312:INFO:Importing libraries
2023-09-05 15:46:49,313:INFO:Copying training dataset
2023-09-05 15:46:49,342:INFO:Defining folds
2023-09-05 15:46:49,343:INFO:Declaring metric variables
2023-09-05 15:46:49,351:INFO:Importing untrained model
2023-09-05 15:46:49,362:INFO:K Neighbors Classifier Imported successfully
2023-09-05 15:46:49,384:INFO:Starting cross validation
2023-09-05 15:46:49,387:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:46:56,301:INFO:Calculating mean and std
2023-09-05 15:46:56,303:INFO:Creating metrics dataframe
2023-09-05 15:46:56,485:INFO:Uploading results into container
2023-09-05 15:46:56,486:INFO:Uploading model into container now
2023-09-05 15:46:56,486:INFO:_master_model_container: 15
2023-09-05 15:46:56,486:INFO:_display_container: 9
2023-09-05 15:46:56,487:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-05 15:46:56,487:INFO:create_model() successfully completed......................................
2023-09-05 15:46:56,577:INFO:SubProcess create_model() end ==================================
2023-09-05 15:46:56,577:INFO:Creating metrics dataframe
2023-09-05 15:46:56,594:INFO:Initializing Logistic Regression
2023-09-05 15:46:56,594:INFO:Total runtime is 0.12154875993728638 minutes
2023-09-05 15:46:56,599:INFO:SubProcess create_model() called ==================================
2023-09-05 15:46:56,600:INFO:Initializing create_model()
2023-09-05 15:46:56,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f403658f400>, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:46:56,601:INFO:Checking exceptions
2023-09-05 15:46:56,601:INFO:Importing libraries
2023-09-05 15:46:56,601:INFO:Copying training dataset
2023-09-05 15:46:56,622:INFO:Defining folds
2023-09-05 15:46:56,622:INFO:Declaring metric variables
2023-09-05 15:46:56,627:INFO:Importing untrained model
2023-09-05 15:46:56,633:INFO:Logistic Regression Imported successfully
2023-09-05 15:46:56,641:INFO:Starting cross validation
2023-09-05 15:46:56,643:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-05 15:46:58,495:INFO:Calculating mean and std
2023-09-05 15:46:58,497:INFO:Creating metrics dataframe
2023-09-05 15:46:58,675:INFO:Uploading results into container
2023-09-05 15:46:58,676:INFO:Uploading model into container now
2023-09-05 15:46:58,676:INFO:_master_model_container: 16
2023-09-05 15:46:58,677:INFO:_display_container: 9
2023-09-05 15:46:58,677:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:46:58,677:INFO:create_model() successfully completed......................................
2023-09-05 15:46:58,765:INFO:SubProcess create_model() end ==================================
2023-09-05 15:46:58,765:INFO:Creating metrics dataframe
2023-09-05 15:46:58,799:INFO:Initializing create_model()
2023-09-05 15:46:58,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4094190dc0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-05 15:46:58,801:INFO:Checking exceptions
2023-09-05 15:46:58,805:INFO:Importing libraries
2023-09-05 15:46:58,805:INFO:Copying training dataset
2023-09-05 15:46:58,844:INFO:Defining folds
2023-09-05 15:46:58,844:INFO:Declaring metric variables
2023-09-05 15:46:58,844:INFO:Importing untrained model
2023-09-05 15:46:58,844:INFO:Declaring custom model
2023-09-05 15:46:58,845:INFO:Logistic Regression Imported successfully
2023-09-05 15:46:58,848:INFO:Cross validation set to False
2023-09-05 15:46:58,848:INFO:Fitting Model
2023-09-05 15:46:59,180:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:46:59,180:INFO:create_model() successfully completed......................................
2023-09-05 15:46:59,296:INFO:_master_model_container: 16
2023-09-05 15:46:59,297:INFO:_display_container: 9
2023-09-05 15:46:59,298:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-05 15:46:59,298:INFO:compare_models() successfully completed......................................
2023-09-10 13:22:53,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 13:22:53,578:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 13:22:53,578:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 13:22:53,578:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 13:22:57,008:INFO:PyCaret ClassificationExperiment
2023-09-10 13:22:57,008:INFO:Logging name: clf-default-name
2023-09-10 13:22:57,008:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-09-10 13:22:57,008:INFO:version 3.0.4
2023-09-10 13:22:57,008:INFO:Initializing setup()
2023-09-10 13:22:57,008:INFO:self.USI: 5710
2023-09-10 13:22:57,008:INFO:self._variable_keys: {'exp_id', 'y', '_ml_usecase', 'y_test', 'USI', 'pipeline', 'seed', 'logging_param', 'gpu_n_jobs_param', 'target_param', 'y_train', 'html_param', 'exp_name_log', 'X_train', 'fold_generator', 'is_multiclass', 'fold_groups_param', 'log_plots_param', 'data', 'X', '_available_plots', 'n_jobs_param', 'fold_shuffle_param', 'gpu_param', 'X_test', 'fix_imbalance', 'idx', 'memory'}
2023-09-10 13:22:57,009:INFO:Checking environment
2023-09-10 13:22:57,009:INFO:python_version: 3.10.12
2023-09-10 13:22:57,009:INFO:python_build: ('main', 'Jun 11 2023 05:26:28')
2023-09-10 13:22:57,009:INFO:machine: x86_64
2023-09-10 13:22:57,009:INFO:platform: Linux-6.2.0-32-generic-x86_64-with-glibc2.35
2023-09-10 13:22:57,009:INFO:Memory: svmem(total=8140140544, available=1663991808, percent=79.6, used=5207060480, free=350740480, active=910180352, inactive=6174601216, buffers=190578688, cached=2391760896, shared=929210368, slab=470065152)
2023-09-10 13:22:57,010:INFO:Physical Core: 4
2023-09-10 13:22:57,010:INFO:Logical Core: 8
2023-09-10 13:22:57,010:INFO:Checking libraries
2023-09-10 13:22:57,010:INFO:System:
2023-09-10 13:22:57,010:INFO:    python: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]
2023-09-10 13:22:57,010:INFO:executable: /bin/python
2023-09-10 13:22:57,010:INFO:   machine: Linux-6.2.0-32-generic-x86_64-with-glibc2.35
2023-09-10 13:22:57,010:INFO:PyCaret required dependencies:
2023-09-10 13:22:57,057:INFO:                 pip: 22.0.2
2023-09-10 13:22:57,058:INFO:          setuptools: 59.6.0
2023-09-10 13:22:57,058:INFO:             pycaret: 3.0.4
2023-09-10 13:22:57,058:INFO:             IPython: 7.31.1
2023-09-10 13:22:57,058:INFO:          ipywidgets: 6.0.0
2023-09-10 13:22:57,058:INFO:                tqdm: 4.65.0
2023-09-10 13:22:57,058:INFO:               numpy: 1.21.5
2023-09-10 13:22:57,058:INFO:              pandas: 1.5.2
2023-09-10 13:22:57,058:INFO:              jinja2: 3.0.3
2023-09-10 13:22:57,058:INFO:               scipy: 1.8.0
2023-09-10 13:22:57,058:INFO:              joblib: 1.2.0
2023-09-10 13:22:57,058:INFO:             sklearn: 1.2.0
2023-09-10 13:22:57,058:INFO:                pyod: 1.1.0
2023-09-10 13:22:57,059:INFO:            imblearn: 0.11.0
2023-09-10 13:22:57,059:INFO:   category_encoders: 2.6.2
2023-09-10 13:22:57,059:INFO:            lightgbm: 4.0.0
2023-09-10 13:22:57,059:INFO:               numba: 0.57.1
2023-09-10 13:22:57,059:INFO:            requests: 2.25.1
2023-09-10 13:22:57,059:INFO:          matplotlib: 3.5.1
2023-09-10 13:22:57,059:INFO:          scikitplot: 0.3.7
2023-09-10 13:22:57,059:INFO:         yellowbrick: 1.5
2023-09-10 13:22:57,059:INFO:              plotly: 5.16.1
2023-09-10 13:22:57,059:INFO:    plotly-resampler: Not installed
2023-09-10 13:22:57,059:INFO:             kaleido: 0.2.1
2023-09-10 13:22:57,059:INFO:           schemdraw: 0.15
2023-09-10 13:22:57,059:INFO:         statsmodels: 0.14.0
2023-09-10 13:22:57,059:INFO:              sktime: 0.22.0
2023-09-10 13:22:57,059:INFO:               tbats: 1.1.3
2023-09-10 13:22:57,059:INFO:            pmdarima: 2.0.3
2023-09-10 13:22:57,059:INFO:              psutil: 5.9.0
2023-09-10 13:22:57,059:INFO:          markupsafe: 2.0.1
2023-09-10 13:22:57,059:INFO:             pickle5: Not installed
2023-09-10 13:22:57,059:INFO:         cloudpickle: 2.2.1
2023-09-10 13:22:57,059:INFO:         deprecation: 2.1.0
2023-09-10 13:22:57,060:INFO:              xxhash: 3.3.0
2023-09-10 13:22:57,060:INFO:           wurlitzer: 3.0.3
2023-09-10 13:22:57,060:INFO:PyCaret optional dependencies:
2023-09-10 13:22:57,078:INFO:                shap: Not installed
2023-09-10 13:22:57,078:INFO:           interpret: Not installed
2023-09-10 13:22:57,078:INFO:                umap: Not installed
2023-09-10 13:22:57,078:INFO:    pandas_profiling: Not installed
2023-09-10 13:22:57,078:INFO:  explainerdashboard: Not installed
2023-09-10 13:22:57,079:INFO:             autoviz: Not installed
2023-09-10 13:22:57,079:INFO:           fairlearn: Not installed
2023-09-10 13:22:57,079:INFO:          deepchecks: Not installed
2023-09-10 13:22:57,079:INFO:             xgboost: Not installed
2023-09-10 13:22:57,079:INFO:            catboost: Not installed
2023-09-10 13:22:57,079:INFO:              kmodes: Not installed
2023-09-10 13:22:57,079:INFO:             mlxtend: Not installed
2023-09-10 13:22:57,079:INFO:       statsforecast: Not installed
2023-09-10 13:22:57,079:INFO:        tune_sklearn: Not installed
2023-09-10 13:22:57,079:INFO:                 ray: Not installed
2023-09-10 13:22:57,079:INFO:            hyperopt: Not installed
2023-09-10 13:22:57,079:INFO:              optuna: Not installed
2023-09-10 13:22:57,079:INFO:               skopt: Not installed
2023-09-10 13:22:57,079:INFO:              mlflow: Not installed
2023-09-10 13:22:57,079:INFO:              gradio: Not installed
2023-09-10 13:22:57,079:INFO:             fastapi: Not installed
2023-09-10 13:22:57,079:INFO:             uvicorn: Not installed
2023-09-10 13:22:57,079:INFO:              m2cgen: Not installed
2023-09-10 13:22:57,079:INFO:           evidently: Not installed
2023-09-10 13:22:57,079:INFO:               fugue: Not installed
2023-09-10 13:22:57,079:INFO:           streamlit: Not installed
2023-09-10 13:22:57,079:INFO:             prophet: Not installed
2023-09-10 13:22:57,079:INFO:None
2023-09-10 13:22:57,079:INFO:Set up data.
2023-09-10 13:22:57,147:INFO:Set up train/test split.
2023-09-10 13:22:57,193:INFO:Set up index.
2023-09-10 13:22:57,195:INFO:Set up folding strategy.
2023-09-10 13:22:57,195:INFO:Assigning column types.
2023-09-10 13:22:57,200:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-10 13:22:57,239:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-10 13:22:57,241:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 13:22:57,274:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:57,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:57,314:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-10 13:22:57,315:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 13:22:57,340:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:57,340:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:57,341:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-10 13:22:57,381:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 13:22:57,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:57,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:57,453:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 13:22:57,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:57,477:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:57,477:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-09-10 13:22:57,541:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:57,541:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:57,616:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:57,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:57,618:INFO:Preparing preprocessing pipeline...
2023-09-10 13:22:57,621:INFO:Set up label encoding.
2023-09-10 13:22:57,621:INFO:Set up simple imputation.
2023-09-10 13:22:57,632:INFO:Set up encoding of ordinal features.
2023-09-10 13:22:57,636:INFO:Set up encoding of categorical features.
2023-09-10 13:22:57,637:INFO:Set up column name cleaning.
2023-09-10 13:22:58,772:INFO:Finished creating preprocessing pipeline.
2023-09-10 13:22:58,794:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-09-10 13:22:58,794:INFO:Creating final display dataframe.
2023-09-10 13:22:59,535:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (48842, 15)
5        Transformed data shape        (48842, 67)
6   Transformed train set shape        (34189, 67)
7    Transformed test set shape        (14653, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Fold Generator    StratifiedKFold
18                  Fold Number                 10
19                     CPU Jobs                 -1
20                      Use GPU              False
21               Log Experiment              False
22              Experiment Name   clf-default-name
23                          USI               5710
2023-09-10 13:22:59,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:59,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:59,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:59,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:22:59,709:INFO:setup() successfully completed in 2.7s...............
2023-09-10 13:23:04,294:INFO:Initializing compare_models()
2023-09-10 13:23:04,294:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, include=['knn', 'lr'], fold=None, round=4, cross_validation=True, sort=Prec., n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, 'include': ['knn', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Prec.', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-10 13:23:04,295:INFO:Checking exceptions
2023-09-10 13:23:04,308:INFO:Preparing display monitor
2023-09-10 13:23:04,363:INFO:Initializing K Neighbors Classifier
2023-09-10 13:23:04,363:INFO:Total runtime is 5.634625752766927e-06 minutes
2023-09-10 13:23:04,370:INFO:SubProcess create_model() called ==================================
2023-09-10 13:23:04,370:INFO:Initializing create_model()
2023-09-10 13:23:04,371:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f40345d7160>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:23:04,371:INFO:Checking exceptions
2023-09-10 13:23:04,371:INFO:Importing libraries
2023-09-10 13:23:04,371:INFO:Copying training dataset
2023-09-10 13:23:04,408:INFO:Defining folds
2023-09-10 13:23:04,409:INFO:Declaring metric variables
2023-09-10 13:23:04,417:INFO:Importing untrained model
2023-09-10 13:23:04,425:INFO:K Neighbors Classifier Imported successfully
2023-09-10 13:23:04,439:INFO:Starting cross validation
2023-09-10 13:23:04,442:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 13:23:20,749:INFO:Calculating mean and std
2023-09-10 13:23:20,753:INFO:Creating metrics dataframe
2023-09-10 13:23:20,765:INFO:Uploading results into container
2023-09-10 13:23:20,766:INFO:Uploading model into container now
2023-09-10 13:23:20,766:INFO:_master_model_container: 1
2023-09-10 13:23:20,766:INFO:_display_container: 2
2023-09-10 13:23:20,767:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-10 13:23:20,767:INFO:create_model() successfully completed......................................
2023-09-10 13:23:20,862:INFO:SubProcess create_model() end ==================================
2023-09-10 13:23:20,862:INFO:Creating metrics dataframe
2023-09-10 13:23:20,880:INFO:Initializing Logistic Regression
2023-09-10 13:23:20,880:INFO:Total runtime is 0.2752873341242472 minutes
2023-09-10 13:23:20,886:INFO:SubProcess create_model() called ==================================
2023-09-10 13:23:20,886:INFO:Initializing create_model()
2023-09-10 13:23:20,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f40345d7160>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:23:20,886:INFO:Checking exceptions
2023-09-10 13:23:20,887:INFO:Importing libraries
2023-09-10 13:23:20,887:INFO:Copying training dataset
2023-09-10 13:23:20,908:INFO:Defining folds
2023-09-10 13:23:20,908:INFO:Declaring metric variables
2023-09-10 13:23:20,915:INFO:Importing untrained model
2023-09-10 13:23:20,923:INFO:Logistic Regression Imported successfully
2023-09-10 13:23:20,936:INFO:Starting cross validation
2023-09-10 13:23:20,940:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 13:23:24,579:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:238: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-09-10 13:23:28,622:INFO:Calculating mean and std
2023-09-10 13:23:28,624:INFO:Creating metrics dataframe
2023-09-10 13:23:28,643:INFO:Uploading results into container
2023-09-10 13:23:28,644:INFO:Uploading model into container now
2023-09-10 13:23:28,644:INFO:_master_model_container: 2
2023-09-10 13:23:28,644:INFO:_display_container: 2
2023-09-10 13:23:28,644:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:23:28,644:INFO:create_model() successfully completed......................................
2023-09-10 13:23:28,726:INFO:SubProcess create_model() end ==================================
2023-09-10 13:23:28,726:INFO:Creating metrics dataframe
2023-09-10 13:23:28,759:INFO:Initializing create_model()
2023-09-10 13:23:28,759:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:23:28,759:INFO:Checking exceptions
2023-09-10 13:23:28,762:INFO:Importing libraries
2023-09-10 13:23:28,762:INFO:Copying training dataset
2023-09-10 13:23:28,784:INFO:Defining folds
2023-09-10 13:23:28,784:INFO:Declaring metric variables
2023-09-10 13:23:28,784:INFO:Importing untrained model
2023-09-10 13:23:28,784:INFO:Declaring custom model
2023-09-10 13:23:28,785:INFO:Logistic Regression Imported successfully
2023-09-10 13:23:28,787:INFO:Cross validation set to False
2023-09-10 13:23:28,787:INFO:Fitting Model
2023-09-10 13:23:29,986:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:23:29,986:INFO:create_model() successfully completed......................................
2023-09-10 13:23:30,110:INFO:_master_model_container: 2
2023-09-10 13:23:30,111:INFO:_display_container: 2
2023-09-10 13:23:30,111:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:23:30,111:INFO:compare_models() successfully completed......................................
2023-09-10 13:23:54,482:INFO:Initializing create_model()
2023-09-10 13:23:54,483:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:23:54,483:INFO:Checking exceptions
2023-09-10 13:23:54,487:INFO:Importing libraries
2023-09-10 13:23:54,487:INFO:Copying training dataset
2023-09-10 13:23:54,523:INFO:Defining folds
2023-09-10 13:23:54,523:INFO:Declaring metric variables
2023-09-10 13:23:54,523:INFO:Importing untrained model
2023-09-10 13:23:54,523:INFO:Declaring custom model
2023-09-10 13:23:54,525:INFO:K Neighbors Classifier Imported successfully
2023-09-10 13:23:54,525:INFO:Starting cross validation
2023-09-10 13:23:54,531:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 13:24:04,504:INFO:Calculating mean and std
2023-09-10 13:24:04,505:INFO:Creating metrics dataframe
2023-09-10 13:24:04,509:INFO:Finalizing model
2023-09-10 13:24:04,912:INFO:Uploading results into container
2023-09-10 13:24:04,913:INFO:_master_model_container: 2
2023-09-10 13:24:04,913:INFO:_display_container: 3
2023-09-10 13:24:04,914:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-10 13:24:04,914:INFO:create_model() successfully completed......................................
2023-09-10 13:24:05,009:INFO:Initializing create_model()
2023-09-10 13:24:05,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:24:05,010:INFO:Checking exceptions
2023-09-10 13:24:05,013:INFO:Importing libraries
2023-09-10 13:24:05,013:INFO:Copying training dataset
2023-09-10 13:24:05,030:INFO:Defining folds
2023-09-10 13:24:05,030:INFO:Declaring metric variables
2023-09-10 13:24:05,030:INFO:Importing untrained model
2023-09-10 13:24:05,031:INFO:Declaring custom model
2023-09-10 13:24:05,032:INFO:Logistic Regression Imported successfully
2023-09-10 13:24:05,032:INFO:Starting cross validation
2023-09-10 13:24:05,036:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 13:24:07,509:INFO:Calculating mean and std
2023-09-10 13:24:07,510:INFO:Creating metrics dataframe
2023-09-10 13:24:07,512:INFO:Finalizing model
2023-09-10 13:24:07,875:INFO:Uploading results into container
2023-09-10 13:24:07,875:INFO:_master_model_container: 2
2023-09-10 13:24:07,876:INFO:_display_container: 4
2023-09-10 13:24:07,876:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:24:07,876:INFO:create_model() successfully completed......................................
2023-09-10 13:42:20,316:INFO:Initializing compare_models()
2023-09-10 13:42:20,317:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, include=['knn', 'lr'], fold=None, round=4, cross_validation=True, sort=Prec., n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, 'include': ['knn', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Prec.', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-10 13:42:20,317:INFO:Checking exceptions
2023-09-10 13:42:20,330:INFO:Preparing display monitor
2023-09-10 13:42:20,383:INFO:Initializing K Neighbors Classifier
2023-09-10 13:42:20,383:INFO:Total runtime is 7.613499959309896e-06 minutes
2023-09-10 13:42:20,392:INFO:SubProcess create_model() called ==================================
2023-09-10 13:42:20,393:INFO:Initializing create_model()
2023-09-10 13:42:20,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3ff898c370>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:42:20,393:INFO:Checking exceptions
2023-09-10 13:42:20,394:INFO:Importing libraries
2023-09-10 13:42:20,394:INFO:Copying training dataset
2023-09-10 13:42:20,416:INFO:Defining folds
2023-09-10 13:42:20,417:INFO:Declaring metric variables
2023-09-10 13:42:20,424:INFO:Importing untrained model
2023-09-10 13:42:20,433:INFO:K Neighbors Classifier Imported successfully
2023-09-10 13:42:20,451:INFO:Starting cross validation
2023-09-10 13:42:20,456:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 13:42:37,025:INFO:Calculating mean and std
2023-09-10 13:42:37,039:INFO:Creating metrics dataframe
2023-09-10 13:42:37,083:INFO:Uploading results into container
2023-09-10 13:42:37,084:INFO:Uploading model into container now
2023-09-10 13:42:37,085:INFO:_master_model_container: 3
2023-09-10 13:42:37,085:INFO:_display_container: 5
2023-09-10 13:42:37,085:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-10 13:42:37,086:INFO:create_model() successfully completed......................................
2023-09-10 13:42:37,440:INFO:SubProcess create_model() end ==================================
2023-09-10 13:42:37,440:INFO:Creating metrics dataframe
2023-09-10 13:42:37,466:INFO:Initializing Logistic Regression
2023-09-10 13:42:37,466:INFO:Total runtime is 0.28472514549891154 minutes
2023-09-10 13:42:37,472:INFO:SubProcess create_model() called ==================================
2023-09-10 13:42:37,473:INFO:Initializing create_model()
2023-09-10 13:42:37,473:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3ff898c370>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:42:37,473:INFO:Checking exceptions
2023-09-10 13:42:37,473:INFO:Importing libraries
2023-09-10 13:42:37,473:INFO:Copying training dataset
2023-09-10 13:42:37,490:INFO:Defining folds
2023-09-10 13:42:37,490:INFO:Declaring metric variables
2023-09-10 13:42:37,494:INFO:Importing untrained model
2023-09-10 13:42:37,498:INFO:Logistic Regression Imported successfully
2023-09-10 13:42:37,505:INFO:Starting cross validation
2023-09-10 13:42:37,507:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 13:42:39,321:INFO:Calculating mean and std
2023-09-10 13:42:39,322:INFO:Creating metrics dataframe
2023-09-10 13:42:39,350:INFO:Uploading results into container
2023-09-10 13:42:39,350:INFO:Uploading model into container now
2023-09-10 13:42:39,351:INFO:_master_model_container: 4
2023-09-10 13:42:39,351:INFO:_display_container: 5
2023-09-10 13:42:39,351:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:42:39,352:INFO:create_model() successfully completed......................................
2023-09-10 13:42:39,435:INFO:SubProcess create_model() end ==================================
2023-09-10 13:42:39,435:INFO:Creating metrics dataframe
2023-09-10 13:42:39,462:INFO:Initializing create_model()
2023-09-10 13:42:39,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:42:39,463:INFO:Checking exceptions
2023-09-10 13:42:39,467:INFO:Importing libraries
2023-09-10 13:42:39,467:INFO:Copying training dataset
2023-09-10 13:42:39,491:INFO:Defining folds
2023-09-10 13:42:39,491:INFO:Declaring metric variables
2023-09-10 13:42:39,491:INFO:Importing untrained model
2023-09-10 13:42:39,491:INFO:Declaring custom model
2023-09-10 13:42:39,492:INFO:Logistic Regression Imported successfully
2023-09-10 13:42:39,496:INFO:Cross validation set to False
2023-09-10 13:42:39,496:INFO:Fitting Model
2023-09-10 13:42:39,951:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:42:39,951:INFO:create_model() successfully completed......................................
2023-09-10 13:42:40,070:INFO:_master_model_container: 4
2023-09-10 13:42:40,070:INFO:_display_container: 5
2023-09-10 13:42:40,072:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:42:40,072:INFO:compare_models() successfully completed......................................
2023-09-10 13:46:10,740:INFO:Initializing compare_models()
2023-09-10 13:46:10,741:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, include=['knn', 'lr'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, 'include': ['knn', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-10 13:46:10,742:INFO:Checking exceptions
2023-09-10 13:46:10,767:INFO:Preparing display monitor
2023-09-10 13:46:10,847:INFO:Initializing K Neighbors Classifier
2023-09-10 13:46:10,848:INFO:Total runtime is 1.1698404947916667e-05 minutes
2023-09-10 13:46:10,858:INFO:SubProcess create_model() called ==================================
2023-09-10 13:46:10,858:INFO:Initializing create_model()
2023-09-10 13:46:10,858:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4058dfbd30>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:46:10,859:INFO:Checking exceptions
2023-09-10 13:46:10,859:INFO:Importing libraries
2023-09-10 13:46:10,859:INFO:Copying training dataset
2023-09-10 13:46:10,890:INFO:Defining folds
2023-09-10 13:46:10,890:INFO:Declaring metric variables
2023-09-10 13:46:10,904:INFO:Importing untrained model
2023-09-10 13:46:10,913:INFO:K Neighbors Classifier Imported successfully
2023-09-10 13:46:10,938:INFO:Starting cross validation
2023-09-10 13:46:10,943:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 13:46:20,473:INFO:Calculating mean and std
2023-09-10 13:46:20,476:INFO:Creating metrics dataframe
2023-09-10 13:46:20,508:INFO:Uploading results into container
2023-09-10 13:46:20,509:INFO:Uploading model into container now
2023-09-10 13:46:20,509:INFO:_master_model_container: 5
2023-09-10 13:46:20,509:INFO:_display_container: 6
2023-09-10 13:46:20,510:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-10 13:46:20,510:INFO:create_model() successfully completed......................................
2023-09-10 13:46:20,659:INFO:SubProcess create_model() end ==================================
2023-09-10 13:46:20,659:INFO:Creating metrics dataframe
2023-09-10 13:46:20,677:INFO:Initializing Logistic Regression
2023-09-10 13:46:20,677:INFO:Total runtime is 0.1638288378715515 minutes
2023-09-10 13:46:20,682:INFO:SubProcess create_model() called ==================================
2023-09-10 13:46:20,683:INFO:Initializing create_model()
2023-09-10 13:46:20,683:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4058dfbd30>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:46:20,683:INFO:Checking exceptions
2023-09-10 13:46:20,683:INFO:Importing libraries
2023-09-10 13:46:20,684:INFO:Copying training dataset
2023-09-10 13:46:20,700:INFO:Defining folds
2023-09-10 13:46:20,701:INFO:Declaring metric variables
2023-09-10 13:46:20,705:INFO:Importing untrained model
2023-09-10 13:46:20,711:INFO:Logistic Regression Imported successfully
2023-09-10 13:46:20,725:INFO:Starting cross validation
2023-09-10 13:46:20,727:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 13:46:22,731:INFO:Calculating mean and std
2023-09-10 13:46:22,732:INFO:Creating metrics dataframe
2023-09-10 13:46:22,762:INFO:Uploading results into container
2023-09-10 13:46:22,762:INFO:Uploading model into container now
2023-09-10 13:46:22,763:INFO:_master_model_container: 6
2023-09-10 13:46:22,763:INFO:_display_container: 6
2023-09-10 13:46:22,763:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:46:22,763:INFO:create_model() successfully completed......................................
2023-09-10 13:46:22,847:INFO:SubProcess create_model() end ==================================
2023-09-10 13:46:22,847:INFO:Creating metrics dataframe
2023-09-10 13:46:22,880:INFO:Initializing create_model()
2023-09-10 13:46:22,880:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:46:22,880:INFO:Checking exceptions
2023-09-10 13:46:22,882:INFO:Importing libraries
2023-09-10 13:46:22,883:INFO:Copying training dataset
2023-09-10 13:46:22,902:INFO:Defining folds
2023-09-10 13:46:22,903:INFO:Declaring metric variables
2023-09-10 13:46:22,903:INFO:Importing untrained model
2023-09-10 13:46:22,903:INFO:Declaring custom model
2023-09-10 13:46:22,904:INFO:Logistic Regression Imported successfully
2023-09-10 13:46:22,906:INFO:Cross validation set to False
2023-09-10 13:46:22,906:INFO:Fitting Model
2023-09-10 13:46:23,378:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:46:23,378:INFO:create_model() successfully completed......................................
2023-09-10 13:46:23,509:INFO:_master_model_container: 6
2023-09-10 13:46:23,510:INFO:_display_container: 6
2023-09-10 13:46:23,510:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:46:23,511:INFO:compare_models() successfully completed......................................
2023-09-10 13:47:52,198:INFO:Initializing compare_models()
2023-09-10 13:47:52,198:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, include=['knn', 'lr'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, 'include': ['knn', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-10 13:47:52,200:INFO:Checking exceptions
2023-09-10 13:47:52,216:INFO:Preparing display monitor
2023-09-10 13:47:52,283:INFO:Initializing K Neighbors Classifier
2023-09-10 13:47:52,284:INFO:Total runtime is 1.333157221476237e-05 minutes
2023-09-10 13:47:52,290:INFO:SubProcess create_model() called ==================================
2023-09-10 13:47:52,290:INFO:Initializing create_model()
2023-09-10 13:47:52,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4058dfb970>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:47:52,291:INFO:Checking exceptions
2023-09-10 13:47:52,291:INFO:Importing libraries
2023-09-10 13:47:52,291:INFO:Copying training dataset
2023-09-10 13:47:52,318:INFO:Defining folds
2023-09-10 13:47:52,319:INFO:Declaring metric variables
2023-09-10 13:47:52,326:INFO:Importing untrained model
2023-09-10 13:47:52,334:INFO:K Neighbors Classifier Imported successfully
2023-09-10 13:47:52,350:INFO:Starting cross validation
2023-09-10 13:47:52,353:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 13:48:03,262:INFO:Calculating mean and std
2023-09-10 13:48:03,266:INFO:Creating metrics dataframe
2023-09-10 13:48:03,315:INFO:Uploading results into container
2023-09-10 13:48:03,316:INFO:Uploading model into container now
2023-09-10 13:48:03,317:INFO:_master_model_container: 7
2023-09-10 13:48:03,317:INFO:_display_container: 7
2023-09-10 13:48:03,318:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-10 13:48:03,318:INFO:create_model() successfully completed......................................
2023-09-10 13:48:03,431:INFO:SubProcess create_model() end ==================================
2023-09-10 13:48:03,431:INFO:Creating metrics dataframe
2023-09-10 13:48:03,449:INFO:Initializing Logistic Regression
2023-09-10 13:48:03,450:INFO:Total runtime is 0.18611512184143064 minutes
2023-09-10 13:48:03,454:INFO:SubProcess create_model() called ==================================
2023-09-10 13:48:03,455:INFO:Initializing create_model()
2023-09-10 13:48:03,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f4058dfb970>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:48:03,455:INFO:Checking exceptions
2023-09-10 13:48:03,455:INFO:Importing libraries
2023-09-10 13:48:03,455:INFO:Copying training dataset
2023-09-10 13:48:03,478:INFO:Defining folds
2023-09-10 13:48:03,479:INFO:Declaring metric variables
2023-09-10 13:48:03,486:INFO:Importing untrained model
2023-09-10 13:48:03,492:INFO:Logistic Regression Imported successfully
2023-09-10 13:48:03,504:INFO:Starting cross validation
2023-09-10 13:48:03,508:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 13:48:05,752:INFO:Calculating mean and std
2023-09-10 13:48:05,756:INFO:Creating metrics dataframe
2023-09-10 13:48:05,790:INFO:Uploading results into container
2023-09-10 13:48:05,791:INFO:Uploading model into container now
2023-09-10 13:48:05,792:INFO:_master_model_container: 8
2023-09-10 13:48:05,792:INFO:_display_container: 7
2023-09-10 13:48:05,792:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:48:05,792:INFO:create_model() successfully completed......................................
2023-09-10 13:48:05,921:INFO:SubProcess create_model() end ==================================
2023-09-10 13:48:05,922:INFO:Creating metrics dataframe
2023-09-10 13:48:05,971:INFO:Initializing create_model()
2023-09-10 13:48:05,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4058df9210>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:48:05,971:INFO:Checking exceptions
2023-09-10 13:48:05,979:INFO:Importing libraries
2023-09-10 13:48:05,979:INFO:Copying training dataset
2023-09-10 13:48:06,003:INFO:Defining folds
2023-09-10 13:48:06,003:INFO:Declaring metric variables
2023-09-10 13:48:06,004:INFO:Importing untrained model
2023-09-10 13:48:06,004:INFO:Declaring custom model
2023-09-10 13:48:06,004:INFO:Logistic Regression Imported successfully
2023-09-10 13:48:06,007:INFO:Cross validation set to False
2023-09-10 13:48:06,008:INFO:Fitting Model
2023-09-10 13:48:07,010:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:48:07,010:INFO:create_model() successfully completed......................................
2023-09-10 13:48:07,233:INFO:_master_model_container: 8
2023-09-10 13:48:07,233:INFO:_display_container: 7
2023-09-10 13:48:07,235:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:48:07,235:INFO:compare_models() successfully completed......................................
2023-09-10 13:50:52,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 13:50:52,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 13:50:52,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 13:50:52,938:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 13:50:57,500:INFO:PyCaret ClassificationExperiment
2023-09-10 13:50:57,500:INFO:Logging name: clf-default-name
2023-09-10 13:50:57,500:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-09-10 13:50:57,500:INFO:version 3.0.4
2023-09-10 13:50:57,500:INFO:Initializing setup()
2023-09-10 13:50:57,500:INFO:self.USI: cd2b
2023-09-10 13:50:57,500:INFO:self._variable_keys: {'USI', 'log_plots_param', 'X_test', 'pipeline', 'logging_param', 'X', 'html_param', 'exp_name_log', 'fix_imbalance', '_ml_usecase', 'seed', 'y_test', '_available_plots', 'n_jobs_param', 'X_train', 'is_multiclass', 'fold_generator', 'idx', 'y', 'gpu_n_jobs_param', 'fold_shuffle_param', 'data', 'y_train', 'exp_id', 'fold_groups_param', 'gpu_param', 'memory', 'target_param'}
2023-09-10 13:50:57,500:INFO:Checking environment
2023-09-10 13:50:57,500:INFO:python_version: 3.10.12
2023-09-10 13:50:57,500:INFO:python_build: ('main', 'Jun 11 2023 05:26:28')
2023-09-10 13:50:57,501:INFO:machine: x86_64
2023-09-10 13:50:57,501:INFO:platform: Linux-6.2.0-32-generic-x86_64-with-glibc2.35
2023-09-10 13:50:57,501:INFO:Memory: svmem(total=8140140544, available=2056695808, percent=74.7, used=5163315200, free=630706176, active=2562547712, inactive=4109901824, buffers=78872576, cached=2267246592, shared=605675520, slab=482324480)
2023-09-10 13:50:57,502:INFO:Physical Core: 4
2023-09-10 13:50:57,502:INFO:Logical Core: 8
2023-09-10 13:50:57,502:INFO:Checking libraries
2023-09-10 13:50:57,502:INFO:System:
2023-09-10 13:50:57,502:INFO:    python: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]
2023-09-10 13:50:57,502:INFO:executable: /bin/python
2023-09-10 13:50:57,503:INFO:   machine: Linux-6.2.0-32-generic-x86_64-with-glibc2.35
2023-09-10 13:50:57,503:INFO:PyCaret required dependencies:
2023-09-10 13:50:57,540:INFO:                 pip: 22.0.2
2023-09-10 13:50:57,540:INFO:          setuptools: 59.6.0
2023-09-10 13:50:57,540:INFO:             pycaret: 3.0.4
2023-09-10 13:50:57,540:INFO:             IPython: 7.31.1
2023-09-10 13:50:57,540:INFO:          ipywidgets: 6.0.0
2023-09-10 13:50:57,540:INFO:                tqdm: 4.65.0
2023-09-10 13:50:57,540:INFO:               numpy: 1.21.5
2023-09-10 13:50:57,540:INFO:              pandas: 1.5.2
2023-09-10 13:50:57,540:INFO:              jinja2: 3.0.3
2023-09-10 13:50:57,541:INFO:               scipy: 1.8.0
2023-09-10 13:50:57,541:INFO:              joblib: 1.2.0
2023-09-10 13:50:57,541:INFO:             sklearn: 1.2.0
2023-09-10 13:50:57,541:INFO:                pyod: 1.1.0
2023-09-10 13:50:57,541:INFO:            imblearn: 0.11.0
2023-09-10 13:50:57,541:INFO:   category_encoders: 2.6.2
2023-09-10 13:50:57,541:INFO:            lightgbm: 4.0.0
2023-09-10 13:50:57,541:INFO:               numba: 0.57.1
2023-09-10 13:50:57,541:INFO:            requests: 2.25.1
2023-09-10 13:50:57,541:INFO:          matplotlib: 3.5.1
2023-09-10 13:50:57,541:INFO:          scikitplot: 0.3.7
2023-09-10 13:50:57,541:INFO:         yellowbrick: 1.5
2023-09-10 13:50:57,541:INFO:              plotly: 5.16.1
2023-09-10 13:50:57,541:INFO:    plotly-resampler: Not installed
2023-09-10 13:50:57,541:INFO:             kaleido: 0.2.1
2023-09-10 13:50:57,541:INFO:           schemdraw: 0.15
2023-09-10 13:50:57,541:INFO:         statsmodels: 0.14.0
2023-09-10 13:50:57,541:INFO:              sktime: 0.22.0
2023-09-10 13:50:57,541:INFO:               tbats: 1.1.3
2023-09-10 13:50:57,541:INFO:            pmdarima: 2.0.3
2023-09-10 13:50:57,541:INFO:              psutil: 5.9.0
2023-09-10 13:50:57,541:INFO:          markupsafe: 2.0.1
2023-09-10 13:50:57,541:INFO:             pickle5: Not installed
2023-09-10 13:50:57,542:INFO:         cloudpickle: 2.2.1
2023-09-10 13:50:57,542:INFO:         deprecation: 2.1.0
2023-09-10 13:50:57,542:INFO:              xxhash: 3.3.0
2023-09-10 13:50:57,542:INFO:           wurlitzer: 3.0.3
2023-09-10 13:50:57,542:INFO:PyCaret optional dependencies:
2023-09-10 13:50:57,560:INFO:                shap: Not installed
2023-09-10 13:50:57,561:INFO:           interpret: Not installed
2023-09-10 13:50:57,561:INFO:                umap: Not installed
2023-09-10 13:50:57,561:INFO:    pandas_profiling: Not installed
2023-09-10 13:50:57,561:INFO:  explainerdashboard: Not installed
2023-09-10 13:50:57,561:INFO:             autoviz: Not installed
2023-09-10 13:50:57,561:INFO:           fairlearn: Not installed
2023-09-10 13:50:57,561:INFO:          deepchecks: Not installed
2023-09-10 13:50:57,561:INFO:             xgboost: Not installed
2023-09-10 13:50:57,561:INFO:            catboost: Not installed
2023-09-10 13:50:57,561:INFO:              kmodes: Not installed
2023-09-10 13:50:57,561:INFO:             mlxtend: Not installed
2023-09-10 13:50:57,561:INFO:       statsforecast: Not installed
2023-09-10 13:50:57,561:INFO:        tune_sklearn: Not installed
2023-09-10 13:50:57,561:INFO:                 ray: Not installed
2023-09-10 13:50:57,561:INFO:            hyperopt: Not installed
2023-09-10 13:50:57,561:INFO:              optuna: Not installed
2023-09-10 13:50:57,561:INFO:               skopt: Not installed
2023-09-10 13:50:57,561:INFO:              mlflow: Not installed
2023-09-10 13:50:57,561:INFO:              gradio: Not installed
2023-09-10 13:50:57,561:INFO:             fastapi: Not installed
2023-09-10 13:50:57,562:INFO:             uvicorn: Not installed
2023-09-10 13:50:57,562:INFO:              m2cgen: Not installed
2023-09-10 13:50:57,562:INFO:           evidently: Not installed
2023-09-10 13:50:57,562:INFO:               fugue: Not installed
2023-09-10 13:50:57,562:INFO:           streamlit: Not installed
2023-09-10 13:50:57,562:INFO:             prophet: Not installed
2023-09-10 13:50:57,562:INFO:None
2023-09-10 13:50:57,562:INFO:Set up data.
2023-09-10 13:50:57,612:INFO:Set up train/test split.
2023-09-10 13:50:57,657:INFO:Set up index.
2023-09-10 13:50:57,659:INFO:Set up folding strategy.
2023-09-10 13:50:57,659:INFO:Assigning column types.
2023-09-10 13:50:57,667:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-10 13:50:57,705:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-10 13:50:57,708:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 13:50:57,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:57,741:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:57,780:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-10 13:50:57,780:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 13:50:57,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:57,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:57,806:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-10 13:50:57,843:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 13:50:57,866:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:57,867:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:57,904:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 13:50:57,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:57,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:57,929:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-09-10 13:50:57,996:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:57,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:58,065:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:58,065:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:58,067:INFO:Preparing preprocessing pipeline...
2023-09-10 13:50:58,071:INFO:Set up label encoding.
2023-09-10 13:50:58,071:INFO:Set up simple imputation.
2023-09-10 13:50:58,082:INFO:Set up encoding of ordinal features.
2023-09-10 13:50:58,086:INFO:Set up encoding of categorical features.
2023-09-10 13:50:58,088:INFO:Set up column name cleaning.
2023-09-10 13:50:58,770:INFO:Finished creating preprocessing pipeline.
2023-09-10 13:50:58,806:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-09-10 13:50:58,806:INFO:Creating final display dataframe.
2023-09-10 13:50:59,559:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (48842, 15)
5        Transformed data shape        (48842, 67)
6   Transformed train set shape        (34189, 67)
7    Transformed test set shape        (14653, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Fold Generator    StratifiedKFold
18                  Fold Number                 10
19                     CPU Jobs                 -1
20                      Use GPU              False
21               Log Experiment              False
22              Experiment Name   clf-default-name
23                          USI               cd2b
2023-09-10 13:50:59,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:59,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:59,720:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:59,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 13:50:59,721:INFO:setup() successfully completed in 2.26s...............
2023-09-10 13:51:03,156:INFO:Initializing compare_models()
2023-09-10 13:51:03,156:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fad252634c0>, include=['knn', 'lr'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7fad252634c0>, 'include': ['knn', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-10 13:51:03,156:INFO:Checking exceptions
2023-09-10 13:51:03,175:INFO:Preparing display monitor
2023-09-10 13:51:03,238:INFO:Initializing K Neighbors Classifier
2023-09-10 13:51:03,240:INFO:Total runtime is 1.930395762125651e-05 minutes
2023-09-10 13:51:03,246:INFO:SubProcess create_model() called ==================================
2023-09-10 13:51:03,246:INFO:Initializing create_model()
2023-09-10 13:51:03,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fad252634c0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7facc63e6f50>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:51:03,247:INFO:Checking exceptions
2023-09-10 13:51:03,247:INFO:Importing libraries
2023-09-10 13:51:03,247:INFO:Copying training dataset
2023-09-10 13:51:03,272:INFO:Defining folds
2023-09-10 13:51:03,272:INFO:Declaring metric variables
2023-09-10 13:51:03,278:INFO:Importing untrained model
2023-09-10 13:51:03,288:INFO:K Neighbors Classifier Imported successfully
2023-09-10 13:51:03,300:INFO:Starting cross validation
2023-09-10 13:51:03,304:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 13:51:15,713:INFO:Calculating mean and std
2023-09-10 13:51:15,715:INFO:Creating metrics dataframe
2023-09-10 13:51:15,744:INFO:Uploading results into container
2023-09-10 13:51:15,745:INFO:Uploading model into container now
2023-09-10 13:51:15,745:INFO:_master_model_container: 1
2023-09-10 13:51:15,745:INFO:_display_container: 2
2023-09-10 13:51:15,745:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-10 13:51:15,745:INFO:create_model() successfully completed......................................
2023-09-10 13:51:15,827:INFO:SubProcess create_model() end ==================================
2023-09-10 13:51:15,827:INFO:Creating metrics dataframe
2023-09-10 13:51:15,842:INFO:Initializing Logistic Regression
2023-09-10 13:51:15,844:INFO:Total runtime is 0.2100951552391052 minutes
2023-09-10 13:51:15,851:INFO:SubProcess create_model() called ==================================
2023-09-10 13:51:15,851:INFO:Initializing create_model()
2023-09-10 13:51:15,851:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fad252634c0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7facc63e6f50>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:51:15,852:INFO:Checking exceptions
2023-09-10 13:51:15,852:INFO:Importing libraries
2023-09-10 13:51:15,852:INFO:Copying training dataset
2023-09-10 13:51:15,864:INFO:Defining folds
2023-09-10 13:51:15,864:INFO:Declaring metric variables
2023-09-10 13:51:15,868:INFO:Importing untrained model
2023-09-10 13:51:15,874:INFO:Logistic Regression Imported successfully
2023-09-10 13:51:15,882:INFO:Starting cross validation
2023-09-10 13:51:15,885:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 13:51:17,386:INFO:Calculating mean and std
2023-09-10 13:51:17,388:INFO:Creating metrics dataframe
2023-09-10 13:51:17,416:INFO:Uploading results into container
2023-09-10 13:51:17,417:INFO:Uploading model into container now
2023-09-10 13:51:17,417:INFO:_master_model_container: 2
2023-09-10 13:51:17,417:INFO:_display_container: 2
2023-09-10 13:51:17,418:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:51:17,418:INFO:create_model() successfully completed......................................
2023-09-10 13:51:17,489:INFO:SubProcess create_model() end ==================================
2023-09-10 13:51:17,489:INFO:Creating metrics dataframe
2023-09-10 13:51:17,518:INFO:Initializing create_model()
2023-09-10 13:51:17,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fad252634c0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-10 13:51:17,518:INFO:Checking exceptions
2023-09-10 13:51:17,520:INFO:Importing libraries
2023-09-10 13:51:17,520:INFO:Copying training dataset
2023-09-10 13:51:17,531:INFO:Defining folds
2023-09-10 13:51:17,531:INFO:Declaring metric variables
2023-09-10 13:51:17,531:INFO:Importing untrained model
2023-09-10 13:51:17,532:INFO:Declaring custom model
2023-09-10 13:51:17,532:INFO:Logistic Regression Imported successfully
2023-09-10 13:51:17,534:INFO:Cross validation set to False
2023-09-10 13:51:17,534:INFO:Fitting Model
2023-09-10 13:51:17,884:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:51:17,885:INFO:create_model() successfully completed......................................
2023-09-10 13:51:17,986:INFO:_master_model_container: 2
2023-09-10 13:51:17,986:INFO:_display_container: 2
2023-09-10 13:51:17,986:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 13:51:17,987:INFO:compare_models() successfully completed......................................
2023-09-10 19:25:28,782:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:25:28,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:25:28,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:25:28,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:27:48,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:27:48,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:27:48,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:27:48,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:28:23,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:28:23,865:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:28:23,865:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:28:23,865:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:30:00,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:30:00,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:30:00,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:30:00,787:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:30:39,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:30:39,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:30:39,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:30:39,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:30:43,309:INFO:PyCaret ClassificationExperiment
2023-09-10 19:30:43,309:INFO:Logging name: clf-default-name
2023-09-10 19:30:43,309:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-09-10 19:30:43,309:INFO:version 3.0.4
2023-09-10 19:30:43,309:INFO:Initializing setup()
2023-09-10 19:30:43,309:INFO:self.USI: 5585
2023-09-10 19:30:43,309:INFO:self._variable_keys: {'gpu_param', '_ml_usecase', 'fold_groups_param', 'fold_generator', 'n_jobs_param', 'fix_imbalance', 'is_multiclass', 'logging_param', 'y_test', 'X_test', 'pipeline', '_available_plots', 'log_plots_param', 'target_param', 'y_train', 'idx', 'seed', 'html_param', 'fold_shuffle_param', 'y', 'X', 'X_train', 'exp_name_log', 'data', 'USI', 'exp_id', 'gpu_n_jobs_param', 'memory'}
2023-09-10 19:30:43,309:INFO:Checking environment
2023-09-10 19:30:43,309:INFO:python_version: 3.10.12
2023-09-10 19:30:43,309:INFO:python_build: ('main', 'Jun 11 2023 05:26:28')
2023-09-10 19:30:43,309:INFO:machine: x86_64
2023-09-10 19:30:43,316:INFO:platform: Linux-6.2.0-32-generic-x86_64-with-glibc2.35
2023-09-10 19:30:43,316:INFO:Memory: svmem(total=8140140544, available=1562624000, percent=80.8, used=5301329920, free=837627904, active=2797285376, inactive=3675480064, buffers=37122048, cached=1964060672, shared=929173504, slab=499793920)
2023-09-10 19:30:43,317:INFO:Physical Core: 4
2023-09-10 19:30:43,317:INFO:Logical Core: 8
2023-09-10 19:30:43,317:INFO:Checking libraries
2023-09-10 19:30:43,317:INFO:System:
2023-09-10 19:30:43,317:INFO:    python: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]
2023-09-10 19:30:43,317:INFO:executable: /bin/python3
2023-09-10 19:30:43,317:INFO:   machine: Linux-6.2.0-32-generic-x86_64-with-glibc2.35
2023-09-10 19:30:43,317:INFO:PyCaret required dependencies:
2023-09-10 19:30:43,452:INFO:                 pip: 22.0.2
2023-09-10 19:30:43,452:INFO:          setuptools: 59.6.0
2023-09-10 19:30:43,452:INFO:             pycaret: 3.0.4
2023-09-10 19:30:43,452:INFO:             IPython: 7.31.1
2023-09-10 19:30:43,452:INFO:          ipywidgets: 6.0.0
2023-09-10 19:30:43,452:INFO:                tqdm: 4.65.0
2023-09-10 19:30:43,452:INFO:               numpy: 1.21.5
2023-09-10 19:30:43,452:INFO:              pandas: 1.5.2
2023-09-10 19:30:43,453:INFO:              jinja2: 3.0.3
2023-09-10 19:30:43,453:INFO:               scipy: 1.8.0
2023-09-10 19:30:43,453:INFO:              joblib: 1.2.0
2023-09-10 19:30:43,453:INFO:             sklearn: 1.2.0
2023-09-10 19:30:43,453:INFO:                pyod: 1.1.0
2023-09-10 19:30:43,453:INFO:            imblearn: 0.11.0
2023-09-10 19:30:43,453:INFO:   category_encoders: 2.6.2
2023-09-10 19:30:43,453:INFO:            lightgbm: 4.0.0
2023-09-10 19:30:43,453:INFO:               numba: 0.57.1
2023-09-10 19:30:43,453:INFO:            requests: 2.25.1
2023-09-10 19:30:43,453:INFO:          matplotlib: 3.5.1
2023-09-10 19:30:43,453:INFO:          scikitplot: 0.3.7
2023-09-10 19:30:43,453:INFO:         yellowbrick: 1.5
2023-09-10 19:30:43,453:INFO:              plotly: 5.16.1
2023-09-10 19:30:43,454:INFO:    plotly-resampler: Not installed
2023-09-10 19:30:43,454:INFO:             kaleido: 0.2.1
2023-09-10 19:30:43,454:INFO:           schemdraw: 0.15
2023-09-10 19:30:43,454:INFO:         statsmodels: 0.14.0
2023-09-10 19:30:43,454:INFO:              sktime: 0.22.0
2023-09-10 19:30:43,454:INFO:               tbats: 1.1.3
2023-09-10 19:30:43,454:INFO:            pmdarima: 2.0.3
2023-09-10 19:30:43,454:INFO:              psutil: 5.9.0
2023-09-10 19:30:43,454:INFO:          markupsafe: 2.0.1
2023-09-10 19:30:43,454:INFO:             pickle5: Not installed
2023-09-10 19:30:43,454:INFO:         cloudpickle: 2.2.1
2023-09-10 19:30:43,454:INFO:         deprecation: 2.1.0
2023-09-10 19:30:43,454:INFO:              xxhash: 3.3.0
2023-09-10 19:30:43,455:INFO:           wurlitzer: 3.0.3
2023-09-10 19:30:43,455:INFO:PyCaret optional dependencies:
2023-09-10 19:30:43,480:INFO:                shap: Not installed
2023-09-10 19:30:43,480:INFO:           interpret: Not installed
2023-09-10 19:30:43,480:INFO:                umap: Not installed
2023-09-10 19:30:43,480:INFO:    pandas_profiling: Not installed
2023-09-10 19:30:43,480:INFO:  explainerdashboard: Not installed
2023-09-10 19:30:43,480:INFO:             autoviz: Not installed
2023-09-10 19:30:43,480:INFO:           fairlearn: Not installed
2023-09-10 19:30:43,480:INFO:          deepchecks: Not installed
2023-09-10 19:30:43,480:INFO:             xgboost: Not installed
2023-09-10 19:30:43,480:INFO:            catboost: Not installed
2023-09-10 19:30:43,480:INFO:              kmodes: Not installed
2023-09-10 19:30:43,480:INFO:             mlxtend: Not installed
2023-09-10 19:30:43,480:INFO:       statsforecast: Not installed
2023-09-10 19:30:43,480:INFO:        tune_sklearn: Not installed
2023-09-10 19:30:43,480:INFO:                 ray: Not installed
2023-09-10 19:30:43,480:INFO:            hyperopt: Not installed
2023-09-10 19:30:43,480:INFO:              optuna: Not installed
2023-09-10 19:30:43,480:INFO:               skopt: Not installed
2023-09-10 19:30:43,480:INFO:              mlflow: Not installed
2023-09-10 19:30:43,480:INFO:              gradio: Not installed
2023-09-10 19:30:43,480:INFO:             fastapi: Not installed
2023-09-10 19:30:43,480:INFO:             uvicorn: Not installed
2023-09-10 19:30:43,481:INFO:              m2cgen: Not installed
2023-09-10 19:30:43,481:INFO:           evidently: Not installed
2023-09-10 19:30:43,481:INFO:               fugue: Not installed
2023-09-10 19:30:43,481:INFO:           streamlit: Not installed
2023-09-10 19:30:43,481:INFO:             prophet: Not installed
2023-09-10 19:30:43,481:INFO:None
2023-09-10 19:30:43,481:INFO:Set up data.
2023-09-10 19:30:43,538:INFO:Set up train/test split.
2023-09-10 19:30:43,590:INFO:Set up index.
2023-09-10 19:30:43,591:INFO:Set up folding strategy.
2023-09-10 19:30:43,591:INFO:Assigning column types.
2023-09-10 19:30:43,597:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-10 19:30:43,638:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-10 19:30:43,641:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 19:30:43,673:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:43,673:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:43,716:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-10 19:30:43,717:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 19:30:43,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:43,746:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:43,746:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-10 19:30:43,788:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 19:30:43,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:43,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:43,861:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 19:30:43,891:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:43,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:43,892:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-09-10 19:30:43,967:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:43,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:44,036:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:44,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:44,040:INFO:Preparing preprocessing pipeline...
2023-09-10 19:30:44,042:INFO:Set up label encoding.
2023-09-10 19:30:44,042:INFO:Set up simple imputation.
2023-09-10 19:30:44,050:INFO:Set up encoding of ordinal features.
2023-09-10 19:30:44,052:INFO:Set up encoding of categorical features.
2023-09-10 19:30:44,053:INFO:Set up column name cleaning.
2023-09-10 19:30:44,561:INFO:Finished creating preprocessing pipeline.
2023-09-10 19:30:44,595:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-09-10 19:30:44,595:INFO:Creating final display dataframe.
2023-09-10 19:30:45,401:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (48790, 15)
5        Transformed data shape        (48790, 67)
6   Transformed train set shape        (34153, 67)
7    Transformed test set shape        (14637, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Fold Generator    StratifiedKFold
18                  Fold Number                 10
19                     CPU Jobs                 -1
20                      Use GPU              False
21               Log Experiment              False
22              Experiment Name   clf-default-name
23                          USI               5585
2023-09-10 19:30:45,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:45,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:45,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:45,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:30:45,540:INFO:setup() successfully completed in 2.35s...............
2023-09-10 19:30:45,540:INFO:Initializing compare_models()
2023-09-10 19:30:45,540:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f29e448bfd0>, include=['lr', 'dt', 'rf', 'ada', 'nb', 'knn', 'svm'], fold=None, round=4, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f29e448bfd0>, 'include': ['lr', 'dt', 'rf', 'ada', 'nb', 'knn', 'svm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-10 19:30:45,540:INFO:Checking exceptions
2023-09-10 19:30:45,546:INFO:Preparing display monitor
2023-09-10 19:30:45,550:INFO:Initializing Logistic Regression
2023-09-10 19:30:45,550:INFO:Total runtime is 1.554091771443685e-05 minutes
2023-09-10 19:30:45,551:INFO:SubProcess create_model() called ==================================
2023-09-10 19:30:45,551:INFO:Initializing create_model()
2023-09-10 19:30:45,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f29e448bfd0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f29866e4b80>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:30:45,551:INFO:Checking exceptions
2023-09-10 19:30:45,551:INFO:Importing libraries
2023-09-10 19:30:45,551:INFO:Copying training dataset
2023-09-10 19:30:45,563:INFO:Defining folds
2023-09-10 19:30:45,563:INFO:Declaring metric variables
2023-09-10 19:30:45,563:INFO:Importing untrained model
2023-09-10 19:30:45,564:INFO:Logistic Regression Imported successfully
2023-09-10 19:30:45,564:INFO:Starting cross validation
2023-09-10 19:30:45,566:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 19:30:54,655:INFO:Calculating mean and std
2023-09-10 19:30:54,657:INFO:Creating metrics dataframe
2023-09-10 19:30:54,714:INFO:Uploading results into container
2023-09-10 19:30:54,714:INFO:Uploading model into container now
2023-09-10 19:30:54,715:INFO:_master_model_container: 1
2023-09-10 19:30:54,715:INFO:_display_container: 2
2023-09-10 19:30:54,715:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 19:30:54,715:INFO:create_model() successfully completed......................................
2023-09-10 19:30:54,800:INFO:SubProcess create_model() end ==================================
2023-09-10 19:30:54,801:INFO:Creating metrics dataframe
2023-09-10 19:30:54,812:INFO:Initializing Decision Tree Classifier
2023-09-10 19:30:54,813:INFO:Total runtime is 0.1543857455253601 minutes
2023-09-10 19:30:54,813:INFO:SubProcess create_model() called ==================================
2023-09-10 19:30:54,814:INFO:Initializing create_model()
2023-09-10 19:30:54,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f29e448bfd0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f29866e4b80>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:30:54,814:INFO:Checking exceptions
2023-09-10 19:30:54,814:INFO:Importing libraries
2023-09-10 19:30:54,814:INFO:Copying training dataset
2023-09-10 19:30:54,840:INFO:Defining folds
2023-09-10 19:30:54,840:INFO:Declaring metric variables
2023-09-10 19:30:54,840:INFO:Importing untrained model
2023-09-10 19:30:54,841:INFO:Decision Tree Classifier Imported successfully
2023-09-10 19:30:54,842:INFO:Starting cross validation
2023-09-10 19:30:54,845:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 19:30:58,894:INFO:Calculating mean and std
2023-09-10 19:30:58,894:INFO:Creating metrics dataframe
2023-09-10 19:30:58,954:INFO:Uploading results into container
2023-09-10 19:30:58,955:INFO:Uploading model into container now
2023-09-10 19:30:58,955:INFO:_master_model_container: 2
2023-09-10 19:30:58,955:INFO:_display_container: 2
2023-09-10 19:30:58,956:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-09-10 19:30:58,956:INFO:create_model() successfully completed......................................
2023-09-10 19:30:59,033:INFO:SubProcess create_model() end ==================================
2023-09-10 19:30:59,034:INFO:Creating metrics dataframe
2023-09-10 19:30:59,042:INFO:Initializing Random Forest Classifier
2023-09-10 19:30:59,043:INFO:Total runtime is 0.22488699356714886 minutes
2023-09-10 19:30:59,043:INFO:SubProcess create_model() called ==================================
2023-09-10 19:30:59,043:INFO:Initializing create_model()
2023-09-10 19:30:59,043:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f29e448bfd0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f29866e4b80>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:30:59,044:INFO:Checking exceptions
2023-09-10 19:30:59,044:INFO:Importing libraries
2023-09-10 19:30:59,044:INFO:Copying training dataset
2023-09-10 19:30:59,061:INFO:Defining folds
2023-09-10 19:30:59,061:INFO:Declaring metric variables
2023-09-10 19:30:59,061:INFO:Importing untrained model
2023-09-10 19:30:59,062:INFO:Random Forest Classifier Imported successfully
2023-09-10 19:30:59,062:INFO:Starting cross validation
2023-09-10 19:30:59,064:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 19:31:05,934:INFO:Calculating mean and std
2023-09-10 19:31:05,935:INFO:Creating metrics dataframe
2023-09-10 19:31:05,991:INFO:Uploading results into container
2023-09-10 19:31:05,992:INFO:Uploading model into container now
2023-09-10 19:31:05,992:INFO:_master_model_container: 3
2023-09-10 19:31:05,992:INFO:_display_container: 2
2023-09-10 19:31:05,992:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-09-10 19:31:05,993:INFO:create_model() successfully completed......................................
2023-09-10 19:31:06,074:INFO:SubProcess create_model() end ==================================
2023-09-10 19:31:06,074:INFO:Creating metrics dataframe
2023-09-10 19:31:06,082:INFO:Initializing Ada Boost Classifier
2023-09-10 19:31:06,083:INFO:Total runtime is 0.3422247886657715 minutes
2023-09-10 19:31:06,084:INFO:SubProcess create_model() called ==================================
2023-09-10 19:31:06,084:INFO:Initializing create_model()
2023-09-10 19:31:06,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f29e448bfd0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f29866e4b80>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:31:06,084:INFO:Checking exceptions
2023-09-10 19:31:06,084:INFO:Importing libraries
2023-09-10 19:31:06,084:INFO:Copying training dataset
2023-09-10 19:31:06,102:INFO:Defining folds
2023-09-10 19:31:06,102:INFO:Declaring metric variables
2023-09-10 19:31:06,102:INFO:Importing untrained model
2023-09-10 19:31:06,102:INFO:Ada Boost Classifier Imported successfully
2023-09-10 19:31:06,103:INFO:Starting cross validation
2023-09-10 19:31:06,106:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 19:31:09,146:INFO:Calculating mean and std
2023-09-10 19:31:09,147:INFO:Creating metrics dataframe
2023-09-10 19:31:09,204:INFO:Uploading results into container
2023-09-10 19:31:09,205:INFO:Uploading model into container now
2023-09-10 19:31:09,206:INFO:_master_model_container: 4
2023-09-10 19:31:09,206:INFO:_display_container: 2
2023-09-10 19:31:09,206:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-09-10 19:31:09,206:INFO:create_model() successfully completed......................................
2023-09-10 19:31:09,284:INFO:SubProcess create_model() end ==================================
2023-09-10 19:31:09,284:INFO:Creating metrics dataframe
2023-09-10 19:31:09,293:INFO:Initializing Naive Bayes
2023-09-10 19:31:09,294:INFO:Total runtime is 0.39573764006296797 minutes
2023-09-10 19:31:09,294:INFO:SubProcess create_model() called ==================================
2023-09-10 19:31:09,294:INFO:Initializing create_model()
2023-09-10 19:31:09,294:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f29e448bfd0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f29866e4b80>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:31:09,295:INFO:Checking exceptions
2023-09-10 19:31:09,295:INFO:Importing libraries
2023-09-10 19:31:09,295:INFO:Copying training dataset
2023-09-10 19:31:09,309:INFO:Defining folds
2023-09-10 19:31:09,310:INFO:Declaring metric variables
2023-09-10 19:31:09,310:INFO:Importing untrained model
2023-09-10 19:31:09,310:INFO:Naive Bayes Imported successfully
2023-09-10 19:31:09,310:INFO:Starting cross validation
2023-09-10 19:31:09,313:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 19:31:11,494:INFO:Calculating mean and std
2023-09-10 19:31:11,494:INFO:Creating metrics dataframe
2023-09-10 19:31:11,555:INFO:Uploading results into container
2023-09-10 19:31:11,556:INFO:Uploading model into container now
2023-09-10 19:31:11,557:INFO:_master_model_container: 5
2023-09-10 19:31:11,557:INFO:_display_container: 2
2023-09-10 19:31:11,557:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-09-10 19:31:11,557:INFO:create_model() successfully completed......................................
2023-09-10 19:31:11,634:INFO:SubProcess create_model() end ==================================
2023-09-10 19:31:11,634:INFO:Creating metrics dataframe
2023-09-10 19:31:11,646:INFO:Initializing K Neighbors Classifier
2023-09-10 19:31:11,646:INFO:Total runtime is 0.43494627873102826 minutes
2023-09-10 19:31:11,647:INFO:SubProcess create_model() called ==================================
2023-09-10 19:31:11,647:INFO:Initializing create_model()
2023-09-10 19:31:11,647:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f29e448bfd0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f29866e4b80>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:31:11,647:INFO:Checking exceptions
2023-09-10 19:31:11,647:INFO:Importing libraries
2023-09-10 19:31:11,647:INFO:Copying training dataset
2023-09-10 19:31:11,662:INFO:Defining folds
2023-09-10 19:31:11,662:INFO:Declaring metric variables
2023-09-10 19:31:11,662:INFO:Importing untrained model
2023-09-10 19:31:11,663:INFO:K Neighbors Classifier Imported successfully
2023-09-10 19:31:11,663:INFO:Starting cross validation
2023-09-10 19:31:11,665:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 19:31:19,997:INFO:Calculating mean and std
2023-09-10 19:31:19,998:INFO:Creating metrics dataframe
2023-09-10 19:31:20,059:INFO:Uploading results into container
2023-09-10 19:31:20,060:INFO:Uploading model into container now
2023-09-10 19:31:20,060:INFO:_master_model_container: 6
2023-09-10 19:31:20,060:INFO:_display_container: 2
2023-09-10 19:31:20,061:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-10 19:31:20,061:INFO:create_model() successfully completed......................................
2023-09-10 19:31:20,136:INFO:SubProcess create_model() end ==================================
2023-09-10 19:31:20,136:INFO:Creating metrics dataframe
2023-09-10 19:31:20,145:INFO:Initializing SVM - Linear Kernel
2023-09-10 19:31:20,146:INFO:Total runtime is 0.5766001542409261 minutes
2023-09-10 19:31:20,146:INFO:SubProcess create_model() called ==================================
2023-09-10 19:31:20,146:INFO:Initializing create_model()
2023-09-10 19:31:20,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f29e448bfd0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f29866e4b80>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:31:20,146:INFO:Checking exceptions
2023-09-10 19:31:20,147:INFO:Importing libraries
2023-09-10 19:31:20,147:INFO:Copying training dataset
2023-09-10 19:31:20,162:INFO:Defining folds
2023-09-10 19:31:20,162:INFO:Declaring metric variables
2023-09-10 19:31:20,162:INFO:Importing untrained model
2023-09-10 19:31:20,163:INFO:SVM - Linear Kernel Imported successfully
2023-09-10 19:31:20,163:INFO:Starting cross validation
2023-09-10 19:31:20,165:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 19:31:21,091:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:31:21,096:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:31:21,096:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:31:21,163:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:31:21,190:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:31:21,191:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:31:21,329:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:31:21,448:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:31:21,764:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:31:21,875:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:31:21,955:INFO:Calculating mean and std
2023-09-10 19:31:21,956:INFO:Creating metrics dataframe
2023-09-10 19:31:22,022:INFO:Uploading results into container
2023-09-10 19:31:22,023:INFO:Uploading model into container now
2023-09-10 19:31:22,023:INFO:_master_model_container: 7
2023-09-10 19:31:22,023:INFO:_display_container: 2
2023-09-10 19:31:22,024:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-09-10 19:31:22,024:INFO:create_model() successfully completed......................................
2023-09-10 19:31:22,099:INFO:SubProcess create_model() end ==================================
2023-09-10 19:31:22,100:INFO:Creating metrics dataframe
2023-09-10 19:31:22,112:INFO:Initializing create_model()
2023-09-10 19:31:22,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f29e448bfd0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:31:22,112:INFO:Checking exceptions
2023-09-10 19:31:22,113:INFO:Importing libraries
2023-09-10 19:31:22,113:INFO:Copying training dataset
2023-09-10 19:31:22,127:INFO:Defining folds
2023-09-10 19:31:22,127:INFO:Declaring metric variables
2023-09-10 19:31:22,127:INFO:Importing untrained model
2023-09-10 19:31:22,127:INFO:Declaring custom model
2023-09-10 19:31:22,128:INFO:Ada Boost Classifier Imported successfully
2023-09-10 19:31:22,130:INFO:Cross validation set to False
2023-09-10 19:31:22,130:INFO:Fitting Model
2023-09-10 19:31:22,561:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-09-10 19:31:22,561:INFO:create_model() successfully completed......................................
2023-09-10 19:31:22,653:INFO:_master_model_container: 7
2023-09-10 19:31:22,653:INFO:_display_container: 2
2023-09-10 19:31:22,653:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-09-10 19:31:22,653:INFO:compare_models() successfully completed......................................
2023-09-10 19:31:40,761:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:31:40,761:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:31:40,761:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:31:40,761:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-10 19:31:45,052:INFO:PyCaret ClassificationExperiment
2023-09-10 19:31:45,052:INFO:Logging name: clf-default-name
2023-09-10 19:31:45,052:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-09-10 19:31:45,052:INFO:version 3.0.4
2023-09-10 19:31:45,052:INFO:Initializing setup()
2023-09-10 19:31:45,052:INFO:self.USI: 78c3
2023-09-10 19:31:45,052:INFO:self._variable_keys: {'exp_id', 'y_test', 'data', 'memory', 'USI', 'html_param', 'X_train', 'seed', 'n_jobs_param', 'pipeline', 'fold_groups_param', '_ml_usecase', 'fold_shuffle_param', 'y_train', 'target_param', 'X_test', 'gpu_n_jobs_param', 'gpu_param', 'exp_name_log', 'fix_imbalance', '_available_plots', 'log_plots_param', 'logging_param', 'is_multiclass', 'idx', 'fold_generator', 'y', 'X'}
2023-09-10 19:31:45,052:INFO:Checking environment
2023-09-10 19:31:45,052:INFO:python_version: 3.10.12
2023-09-10 19:31:45,052:INFO:python_build: ('main', 'Jun 11 2023 05:26:28')
2023-09-10 19:31:45,052:INFO:machine: x86_64
2023-09-10 19:31:45,059:INFO:platform: Linux-6.2.0-32-generic-x86_64-with-glibc2.35
2023-09-10 19:31:45,060:INFO:Memory: svmem(total=8140140544, available=2776502272, percent=65.9, used=4288401408, free=1126957056, active=3196358656, inactive=3014758400, buffers=26996736, cached=2697785344, shared=763113472, slab=498667520)
2023-09-10 19:31:45,060:INFO:Physical Core: 4
2023-09-10 19:31:45,061:INFO:Logical Core: 8
2023-09-10 19:31:45,061:INFO:Checking libraries
2023-09-10 19:31:45,061:INFO:System:
2023-09-10 19:31:45,061:INFO:    python: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]
2023-09-10 19:31:45,061:INFO:executable: /bin/python3
2023-09-10 19:31:45,061:INFO:   machine: Linux-6.2.0-32-generic-x86_64-with-glibc2.35
2023-09-10 19:31:45,061:INFO:PyCaret required dependencies:
2023-09-10 19:31:45,170:INFO:                 pip: 22.0.2
2023-09-10 19:31:45,171:INFO:          setuptools: 59.6.0
2023-09-10 19:31:45,171:INFO:             pycaret: 3.0.4
2023-09-10 19:31:45,171:INFO:             IPython: 7.31.1
2023-09-10 19:31:45,171:INFO:          ipywidgets: 6.0.0
2023-09-10 19:31:45,171:INFO:                tqdm: 4.65.0
2023-09-10 19:31:45,171:INFO:               numpy: 1.21.5
2023-09-10 19:31:45,171:INFO:              pandas: 1.5.2
2023-09-10 19:31:45,171:INFO:              jinja2: 3.0.3
2023-09-10 19:31:45,171:INFO:               scipy: 1.8.0
2023-09-10 19:31:45,171:INFO:              joblib: 1.2.0
2023-09-10 19:31:45,171:INFO:             sklearn: 1.2.0
2023-09-10 19:31:45,171:INFO:                pyod: 1.1.0
2023-09-10 19:31:45,171:INFO:            imblearn: 0.11.0
2023-09-10 19:31:45,171:INFO:   category_encoders: 2.6.2
2023-09-10 19:31:45,171:INFO:            lightgbm: 4.0.0
2023-09-10 19:31:45,172:INFO:               numba: 0.57.1
2023-09-10 19:31:45,172:INFO:            requests: 2.25.1
2023-09-10 19:31:45,172:INFO:          matplotlib: 3.5.1
2023-09-10 19:31:45,172:INFO:          scikitplot: 0.3.7
2023-09-10 19:31:45,172:INFO:         yellowbrick: 1.5
2023-09-10 19:31:45,172:INFO:              plotly: 5.16.1
2023-09-10 19:31:45,172:INFO:    plotly-resampler: Not installed
2023-09-10 19:31:45,172:INFO:             kaleido: 0.2.1
2023-09-10 19:31:45,172:INFO:           schemdraw: 0.15
2023-09-10 19:31:45,172:INFO:         statsmodels: 0.14.0
2023-09-10 19:31:45,172:INFO:              sktime: 0.22.0
2023-09-10 19:31:45,173:INFO:               tbats: 1.1.3
2023-09-10 19:31:45,173:INFO:            pmdarima: 2.0.3
2023-09-10 19:31:45,173:INFO:              psutil: 5.9.0
2023-09-10 19:31:45,173:INFO:          markupsafe: 2.0.1
2023-09-10 19:31:45,173:INFO:             pickle5: Not installed
2023-09-10 19:31:45,173:INFO:         cloudpickle: 2.2.1
2023-09-10 19:31:45,173:INFO:         deprecation: 2.1.0
2023-09-10 19:31:45,173:INFO:              xxhash: 3.3.0
2023-09-10 19:31:45,173:INFO:           wurlitzer: 3.0.3
2023-09-10 19:31:45,174:INFO:PyCaret optional dependencies:
2023-09-10 19:31:45,200:INFO:                shap: Not installed
2023-09-10 19:31:45,200:INFO:           interpret: Not installed
2023-09-10 19:31:45,200:INFO:                umap: Not installed
2023-09-10 19:31:45,200:INFO:    pandas_profiling: Not installed
2023-09-10 19:31:45,200:INFO:  explainerdashboard: Not installed
2023-09-10 19:31:45,200:INFO:             autoviz: Not installed
2023-09-10 19:31:45,200:INFO:           fairlearn: Not installed
2023-09-10 19:31:45,201:INFO:          deepchecks: Not installed
2023-09-10 19:31:45,201:INFO:             xgboost: Not installed
2023-09-10 19:31:45,201:INFO:            catboost: Not installed
2023-09-10 19:31:45,201:INFO:              kmodes: Not installed
2023-09-10 19:31:45,201:INFO:             mlxtend: Not installed
2023-09-10 19:31:45,201:INFO:       statsforecast: Not installed
2023-09-10 19:31:45,201:INFO:        tune_sklearn: Not installed
2023-09-10 19:31:45,201:INFO:                 ray: Not installed
2023-09-10 19:31:45,201:INFO:            hyperopt: Not installed
2023-09-10 19:31:45,201:INFO:              optuna: Not installed
2023-09-10 19:31:45,201:INFO:               skopt: Not installed
2023-09-10 19:31:45,201:INFO:              mlflow: Not installed
2023-09-10 19:31:45,201:INFO:              gradio: Not installed
2023-09-10 19:31:45,201:INFO:             fastapi: Not installed
2023-09-10 19:31:45,201:INFO:             uvicorn: Not installed
2023-09-10 19:31:45,201:INFO:              m2cgen: Not installed
2023-09-10 19:31:45,201:INFO:           evidently: Not installed
2023-09-10 19:31:45,201:INFO:               fugue: Not installed
2023-09-10 19:31:45,201:INFO:           streamlit: Not installed
2023-09-10 19:31:45,201:INFO:             prophet: Not installed
2023-09-10 19:31:45,201:INFO:None
2023-09-10 19:31:45,201:INFO:Set up data.
2023-09-10 19:31:45,273:INFO:Set up train/test split.
2023-09-10 19:31:45,317:INFO:Set up index.
2023-09-10 19:31:45,318:INFO:Set up folding strategy.
2023-09-10 19:31:45,318:INFO:Assigning column types.
2023-09-10 19:31:45,325:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-10 19:31:45,364:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-10 19:31:45,366:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 19:31:45,397:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:45,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:45,441:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-10 19:31:45,442:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 19:31:45,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:45,468:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:45,469:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-10 19:31:45,510:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 19:31:45,535:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:45,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:45,576:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-10 19:31:45,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:45,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:45,600:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-09-10 19:31:45,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:45,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:45,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:45,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:45,729:INFO:Preparing preprocessing pipeline...
2023-09-10 19:31:45,732:INFO:Set up label encoding.
2023-09-10 19:31:45,732:INFO:Set up simple imputation.
2023-09-10 19:31:45,740:INFO:Set up encoding of ordinal features.
2023-09-10 19:31:45,742:INFO:Set up encoding of categorical features.
2023-09-10 19:31:45,743:INFO:Set up column name cleaning.
2023-09-10 19:31:46,120:INFO:Finished creating preprocessing pipeline.
2023-09-10 19:31:46,149:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-09-10 19:31:46,149:INFO:Creating final display dataframe.
2023-09-10 19:31:46,374:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (48790, 15)
5        Transformed data shape        (48790, 67)
6   Transformed train set shape        (34153, 67)
7    Transformed test set shape        (14637, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Fold Generator    StratifiedKFold
18                  Fold Number                 10
19                     CPU Jobs                 -1
20                      Use GPU              False
21               Log Experiment              False
22              Experiment Name   clf-default-name
23                          USI               78c3
2023-09-10 19:31:46,449:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:46,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:46,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:46,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-10 19:31:46,520:INFO:setup() successfully completed in 1.49s...............
2023-09-10 19:31:46,520:INFO:Initializing compare_models()
2023-09-10 19:31:46,520:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff74281ffd0>, include=['lr', 'dt', 'rf', 'ada', 'nb', 'knn', 'svm'], fold=None, round=4, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7ff74281ffd0>, 'include': ['lr', 'dt', 'rf', 'ada', 'nb', 'knn', 'svm'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-09-10 19:31:46,520:INFO:Checking exceptions
2023-09-10 19:31:46,527:INFO:Preparing display monitor
2023-09-10 19:31:46,530:INFO:Initializing Logistic Regression
2023-09-10 19:31:46,530:INFO:Total runtime is 4.351139068603516e-06 minutes
2023-09-10 19:31:46,530:INFO:SubProcess create_model() called ==================================
2023-09-10 19:31:46,530:INFO:Initializing create_model()
2023-09-10 19:31:46,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff74281ffd0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff700220970>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:31:46,530:INFO:Checking exceptions
2023-09-10 19:31:46,530:INFO:Importing libraries
2023-09-10 19:31:46,531:INFO:Copying training dataset
2023-09-10 19:31:46,542:INFO:Defining folds
2023-09-10 19:31:46,542:INFO:Declaring metric variables
2023-09-10 19:31:46,542:INFO:Importing untrained model
2023-09-10 19:31:46,542:INFO:Logistic Regression Imported successfully
2023-09-10 19:31:46,543:INFO:Starting cross validation
2023-09-10 19:31:46,544:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 19:31:52,650:INFO:Calculating mean and std
2023-09-10 19:31:52,651:INFO:Creating metrics dataframe
2023-09-10 19:31:52,731:INFO:Uploading results into container
2023-09-10 19:31:52,732:INFO:Uploading model into container now
2023-09-10 19:31:52,733:INFO:_master_model_container: 1
2023-09-10 19:31:52,733:INFO:_display_container: 2
2023-09-10 19:31:52,733:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-10 19:31:52,733:INFO:create_model() successfully completed......................................
2023-09-10 19:31:52,869:INFO:SubProcess create_model() end ==================================
2023-09-10 19:31:52,869:INFO:Creating metrics dataframe
2023-09-10 19:31:52,881:INFO:Initializing Decision Tree Classifier
2023-09-10 19:31:52,881:INFO:Total runtime is 0.10586059093475342 minutes
2023-09-10 19:31:52,882:INFO:SubProcess create_model() called ==================================
2023-09-10 19:31:52,882:INFO:Initializing create_model()
2023-09-10 19:31:52,882:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff74281ffd0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff700220970>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:31:52,882:INFO:Checking exceptions
2023-09-10 19:31:52,882:INFO:Importing libraries
2023-09-10 19:31:52,882:INFO:Copying training dataset
2023-09-10 19:31:52,899:INFO:Defining folds
2023-09-10 19:31:52,899:INFO:Declaring metric variables
2023-09-10 19:31:52,899:INFO:Importing untrained model
2023-09-10 19:31:52,900:INFO:Decision Tree Classifier Imported successfully
2023-09-10 19:31:52,900:INFO:Starting cross validation
2023-09-10 19:31:52,904:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 19:31:54,967:INFO:Calculating mean and std
2023-09-10 19:31:54,968:INFO:Creating metrics dataframe
2023-09-10 19:31:55,044:INFO:Uploading results into container
2023-09-10 19:31:55,045:INFO:Uploading model into container now
2023-09-10 19:31:55,046:INFO:_master_model_container: 2
2023-09-10 19:31:55,046:INFO:_display_container: 2
2023-09-10 19:31:55,046:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-09-10 19:31:55,046:INFO:create_model() successfully completed......................................
2023-09-10 19:31:55,121:INFO:SubProcess create_model() end ==================================
2023-09-10 19:31:55,122:INFO:Creating metrics dataframe
2023-09-10 19:31:55,131:INFO:Initializing Random Forest Classifier
2023-09-10 19:31:55,131:INFO:Total runtime is 0.1433553417523702 minutes
2023-09-10 19:31:55,131:INFO:SubProcess create_model() called ==================================
2023-09-10 19:31:55,132:INFO:Initializing create_model()
2023-09-10 19:31:55,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff74281ffd0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff700220970>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:31:55,132:INFO:Checking exceptions
2023-09-10 19:31:55,132:INFO:Importing libraries
2023-09-10 19:31:55,132:INFO:Copying training dataset
2023-09-10 19:31:55,154:INFO:Defining folds
2023-09-10 19:31:55,154:INFO:Declaring metric variables
2023-09-10 19:31:55,155:INFO:Importing untrained model
2023-09-10 19:31:55,156:INFO:Random Forest Classifier Imported successfully
2023-09-10 19:31:55,156:INFO:Starting cross validation
2023-09-10 19:31:55,159:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 19:32:01,582:INFO:Calculating mean and std
2023-09-10 19:32:01,584:INFO:Creating metrics dataframe
2023-09-10 19:32:01,665:INFO:Uploading results into container
2023-09-10 19:32:01,666:INFO:Uploading model into container now
2023-09-10 19:32:01,667:INFO:_master_model_container: 3
2023-09-10 19:32:01,667:INFO:_display_container: 2
2023-09-10 19:32:01,667:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-09-10 19:32:01,667:INFO:create_model() successfully completed......................................
2023-09-10 19:32:01,805:INFO:SubProcess create_model() end ==================================
2023-09-10 19:32:01,805:INFO:Creating metrics dataframe
2023-09-10 19:32:01,819:INFO:Initializing Ada Boost Classifier
2023-09-10 19:32:01,819:INFO:Total runtime is 0.2548247178395589 minutes
2023-09-10 19:32:01,820:INFO:SubProcess create_model() called ==================================
2023-09-10 19:32:01,821:INFO:Initializing create_model()
2023-09-10 19:32:01,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff74281ffd0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff700220970>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:32:01,821:INFO:Checking exceptions
2023-09-10 19:32:01,821:INFO:Importing libraries
2023-09-10 19:32:01,821:INFO:Copying training dataset
2023-09-10 19:32:01,853:INFO:Defining folds
2023-09-10 19:32:01,853:INFO:Declaring metric variables
2023-09-10 19:32:01,854:INFO:Importing untrained model
2023-09-10 19:32:01,855:INFO:Ada Boost Classifier Imported successfully
2023-09-10 19:32:01,855:INFO:Starting cross validation
2023-09-10 19:32:01,860:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 19:32:04,956:INFO:Calculating mean and std
2023-09-10 19:32:04,957:INFO:Creating metrics dataframe
2023-09-10 19:32:05,030:INFO:Uploading results into container
2023-09-10 19:32:05,031:INFO:Uploading model into container now
2023-09-10 19:32:05,031:INFO:_master_model_container: 4
2023-09-10 19:32:05,031:INFO:_display_container: 2
2023-09-10 19:32:05,031:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-09-10 19:32:05,032:INFO:create_model() successfully completed......................................
2023-09-10 19:32:05,113:INFO:SubProcess create_model() end ==================================
2023-09-10 19:32:05,113:INFO:Creating metrics dataframe
2023-09-10 19:32:05,123:INFO:Initializing Naive Bayes
2023-09-10 19:32:05,124:INFO:Total runtime is 0.3099003593126933 minutes
2023-09-10 19:32:05,124:INFO:SubProcess create_model() called ==================================
2023-09-10 19:32:05,125:INFO:Initializing create_model()
2023-09-10 19:32:05,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff74281ffd0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff700220970>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:32:05,125:INFO:Checking exceptions
2023-09-10 19:32:05,125:INFO:Importing libraries
2023-09-10 19:32:05,125:INFO:Copying training dataset
2023-09-10 19:32:05,144:INFO:Defining folds
2023-09-10 19:32:05,144:INFO:Declaring metric variables
2023-09-10 19:32:05,144:INFO:Importing untrained model
2023-09-10 19:32:05,145:INFO:Naive Bayes Imported successfully
2023-09-10 19:32:05,145:INFO:Starting cross validation
2023-09-10 19:32:05,148:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 19:32:07,358:INFO:Calculating mean and std
2023-09-10 19:32:07,359:INFO:Creating metrics dataframe
2023-09-10 19:32:07,425:INFO:Uploading results into container
2023-09-10 19:32:07,425:INFO:Uploading model into container now
2023-09-10 19:32:07,426:INFO:_master_model_container: 5
2023-09-10 19:32:07,426:INFO:_display_container: 2
2023-09-10 19:32:07,426:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-09-10 19:32:07,426:INFO:create_model() successfully completed......................................
2023-09-10 19:32:07,498:INFO:SubProcess create_model() end ==================================
2023-09-10 19:32:07,498:INFO:Creating metrics dataframe
2023-09-10 19:32:07,507:INFO:Initializing K Neighbors Classifier
2023-09-10 19:32:07,507:INFO:Total runtime is 0.3496199210484823 minutes
2023-09-10 19:32:07,507:INFO:SubProcess create_model() called ==================================
2023-09-10 19:32:07,508:INFO:Initializing create_model()
2023-09-10 19:32:07,508:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff74281ffd0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff700220970>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:32:07,508:INFO:Checking exceptions
2023-09-10 19:32:07,508:INFO:Importing libraries
2023-09-10 19:32:07,508:INFO:Copying training dataset
2023-09-10 19:32:07,522:INFO:Defining folds
2023-09-10 19:32:07,522:INFO:Declaring metric variables
2023-09-10 19:32:07,523:INFO:Importing untrained model
2023-09-10 19:32:07,523:INFO:K Neighbors Classifier Imported successfully
2023-09-10 19:32:07,523:INFO:Starting cross validation
2023-09-10 19:32:07,526:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 19:32:14,087:INFO:Calculating mean and std
2023-09-10 19:32:14,088:INFO:Creating metrics dataframe
2023-09-10 19:32:14,165:INFO:Uploading results into container
2023-09-10 19:32:14,167:INFO:Uploading model into container now
2023-09-10 19:32:14,168:INFO:_master_model_container: 6
2023-09-10 19:32:14,168:INFO:_display_container: 2
2023-09-10 19:32:14,168:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-09-10 19:32:14,168:INFO:create_model() successfully completed......................................
2023-09-10 19:32:14,319:INFO:SubProcess create_model() end ==================================
2023-09-10 19:32:14,319:INFO:Creating metrics dataframe
2023-09-10 19:32:14,337:INFO:Initializing SVM - Linear Kernel
2023-09-10 19:32:14,337:INFO:Total runtime is 0.4634580135345459 minutes
2023-09-10 19:32:14,338:INFO:SubProcess create_model() called ==================================
2023-09-10 19:32:14,339:INFO:Initializing create_model()
2023-09-10 19:32:14,339:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff74281ffd0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff700220970>, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:32:14,339:INFO:Checking exceptions
2023-09-10 19:32:14,339:INFO:Importing libraries
2023-09-10 19:32:14,339:INFO:Copying training dataset
2023-09-10 19:32:14,379:INFO:Defining folds
2023-09-10 19:32:14,380:INFO:Declaring metric variables
2023-09-10 19:32:14,381:INFO:Importing untrained model
2023-09-10 19:32:14,382:INFO:SVM - Linear Kernel Imported successfully
2023-09-10 19:32:14,383:INFO:Starting cross validation
2023-09-10 19:32:14,388:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-10 19:32:15,501:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:32:15,516:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:32:15,544:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:32:15,559:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:32:15,576:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:32:15,577:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:32:15,630:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:32:15,794:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:32:16,185:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:32:16,375:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/metrics.py", line 130, in _score
    return super()._score(
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/metrics/_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/utils/_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "/home/ayush/.local/lib/python3.10/site-packages/sklearn/linear_model/_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-09-10 19:32:16,456:INFO:Calculating mean and std
2023-09-10 19:32:16,457:INFO:Creating metrics dataframe
2023-09-10 19:32:16,533:INFO:Uploading results into container
2023-09-10 19:32:16,535:INFO:Uploading model into container now
2023-09-10 19:32:16,535:INFO:_master_model_container: 7
2023-09-10 19:32:16,535:INFO:_display_container: 2
2023-09-10 19:32:16,536:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-09-10 19:32:16,536:INFO:create_model() successfully completed......................................
2023-09-10 19:32:16,631:INFO:SubProcess create_model() end ==================================
2023-09-10 19:32:16,631:INFO:Creating metrics dataframe
2023-09-10 19:32:16,646:INFO:Initializing create_model()
2023-09-10 19:32:16,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff74281ffd0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-10 19:32:16,646:INFO:Checking exceptions
2023-09-10 19:32:16,648:INFO:Importing libraries
2023-09-10 19:32:16,648:INFO:Copying training dataset
2023-09-10 19:32:16,664:INFO:Defining folds
2023-09-10 19:32:16,664:INFO:Declaring metric variables
2023-09-10 19:32:16,665:INFO:Importing untrained model
2023-09-10 19:32:16,665:INFO:Declaring custom model
2023-09-10 19:32:16,665:INFO:Ada Boost Classifier Imported successfully
2023-09-10 19:32:16,668:INFO:Cross validation set to False
2023-09-10 19:32:16,668:INFO:Fitting Model
2023-09-10 19:32:17,146:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-09-10 19:32:17,146:INFO:create_model() successfully completed......................................
2023-09-10 19:32:17,267:INFO:_master_model_container: 7
2023-09-10 19:32:17,267:INFO:_display_container: 2
2023-09-10 19:32:17,267:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-09-10 19:32:17,267:INFO:compare_models() successfully completed......................................
2023-09-13 12:00:35,186:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-13 12:00:35,188:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-13 12:00:35,188:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-13 12:00:35,188:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-13 12:00:38,769:INFO:PyCaret ClassificationExperiment
2023-09-13 12:00:38,770:INFO:Logging name: clf-default-name
2023-09-13 12:00:38,770:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-09-13 12:00:38,770:INFO:version 3.0.4
2023-09-13 12:00:38,770:INFO:Initializing setup()
2023-09-13 12:00:38,771:INFO:self.USI: 624f
2023-09-13 12:00:38,771:INFO:self._variable_keys: {'log_plots_param', 'idx', '_ml_usecase', 'fold_generator', 'data', '_available_plots', 'fold_groups_param', 'pipeline', 'memory', 'fold_shuffle_param', 'exp_id', 'X_test', 'exp_name_log', 'target_param', 'seed', 'html_param', 'y', 'n_jobs_param', 'X_train', 'logging_param', 'y_train', 'gpu_n_jobs_param', 'USI', 'X', 'fix_imbalance', 'gpu_param', 'y_test', 'is_multiclass'}
2023-09-13 12:00:38,771:INFO:Checking environment
2023-09-13 12:00:38,771:INFO:python_version: 3.10.12
2023-09-13 12:00:38,771:INFO:python_build: ('main', 'Jun 11 2023 05:26:28')
2023-09-13 12:00:38,771:INFO:machine: x86_64
2023-09-13 12:00:38,771:INFO:platform: Linux-6.2.0-32-generic-x86_64-with-glibc2.35
2023-09-13 12:00:38,771:INFO:Memory: svmem(total=8140140544, available=3327975424, percent=59.1, used=3924799488, free=639844352, active=3714777088, inactive=2851344384, buffers=104787968, cached=3470708736, shared=566272000, slab=529100800)
2023-09-13 12:00:38,773:INFO:Physical Core: 4
2023-09-13 12:00:38,773:INFO:Logical Core: 8
2023-09-13 12:00:38,774:INFO:Checking libraries
2023-09-13 12:00:38,774:INFO:System:
2023-09-13 12:00:38,774:INFO:    python: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]
2023-09-13 12:00:38,774:INFO:executable: /bin/python
2023-09-13 12:00:38,774:INFO:   machine: Linux-6.2.0-32-generic-x86_64-with-glibc2.35
2023-09-13 12:00:38,774:INFO:PyCaret required dependencies:
2023-09-13 12:00:38,811:INFO:                 pip: 22.0.2
2023-09-13 12:00:38,811:INFO:          setuptools: 59.6.0
2023-09-13 12:00:38,811:INFO:             pycaret: 3.0.4
2023-09-13 12:00:38,812:INFO:             IPython: 7.31.1
2023-09-13 12:00:38,812:INFO:          ipywidgets: 6.0.0
2023-09-13 12:00:38,812:INFO:                tqdm: 4.65.0
2023-09-13 12:00:38,812:INFO:               numpy: 1.21.5
2023-09-13 12:00:38,812:INFO:              pandas: 1.5.2
2023-09-13 12:00:38,812:INFO:              jinja2: 3.0.3
2023-09-13 12:00:38,812:INFO:               scipy: 1.8.0
2023-09-13 12:00:38,812:INFO:              joblib: 1.2.0
2023-09-13 12:00:38,812:INFO:             sklearn: 1.2.0
2023-09-13 12:00:38,812:INFO:                pyod: 1.1.0
2023-09-13 12:00:38,812:INFO:            imblearn: 0.11.0
2023-09-13 12:00:38,812:INFO:   category_encoders: 2.6.2
2023-09-13 12:00:38,812:INFO:            lightgbm: 4.0.0
2023-09-13 12:00:38,812:INFO:               numba: 0.57.1
2023-09-13 12:00:38,812:INFO:            requests: 2.25.1
2023-09-13 12:00:38,812:INFO:          matplotlib: 3.5.1
2023-09-13 12:00:38,812:INFO:          scikitplot: 0.3.7
2023-09-13 12:00:38,813:INFO:         yellowbrick: 1.5
2023-09-13 12:00:38,813:INFO:              plotly: 5.16.1
2023-09-13 12:00:38,813:INFO:    plotly-resampler: Not installed
2023-09-13 12:00:38,813:INFO:             kaleido: 0.2.1
2023-09-13 12:00:38,813:INFO:           schemdraw: 0.15
2023-09-13 12:00:38,813:INFO:         statsmodels: 0.14.0
2023-09-13 12:00:38,813:INFO:              sktime: 0.22.0
2023-09-13 12:00:38,813:INFO:               tbats: 1.1.3
2023-09-13 12:00:38,813:INFO:            pmdarima: 2.0.3
2023-09-13 12:00:38,813:INFO:              psutil: 5.9.0
2023-09-13 12:00:38,813:INFO:          markupsafe: 2.0.1
2023-09-13 12:00:38,813:INFO:             pickle5: Not installed
2023-09-13 12:00:38,813:INFO:         cloudpickle: 2.2.1
2023-09-13 12:00:38,813:INFO:         deprecation: 2.1.0
2023-09-13 12:00:38,813:INFO:              xxhash: 3.3.0
2023-09-13 12:00:38,813:INFO:           wurlitzer: 3.0.3
2023-09-13 12:00:38,813:INFO:PyCaret optional dependencies:
2023-09-13 12:00:38,855:INFO:                shap: Not installed
2023-09-13 12:00:38,855:INFO:           interpret: Not installed
2023-09-13 12:00:38,855:INFO:                umap: Not installed
2023-09-13 12:00:38,855:INFO:    pandas_profiling: Not installed
2023-09-13 12:00:38,856:INFO:  explainerdashboard: Not installed
2023-09-13 12:00:38,856:INFO:             autoviz: Not installed
2023-09-13 12:00:38,856:INFO:           fairlearn: Not installed
2023-09-13 12:00:38,856:INFO:          deepchecks: Not installed
2023-09-13 12:00:38,856:INFO:             xgboost: Not installed
2023-09-13 12:00:38,856:INFO:            catboost: Not installed
2023-09-13 12:00:38,856:INFO:              kmodes: Not installed
2023-09-13 12:00:38,856:INFO:             mlxtend: Not installed
2023-09-13 12:00:38,856:INFO:       statsforecast: Not installed
2023-09-13 12:00:38,856:INFO:        tune_sklearn: Not installed
2023-09-13 12:00:38,856:INFO:                 ray: Not installed
2023-09-13 12:00:38,856:INFO:            hyperopt: Not installed
2023-09-13 12:00:38,856:INFO:              optuna: Not installed
2023-09-13 12:00:38,856:INFO:               skopt: Not installed
2023-09-13 12:00:38,856:INFO:              mlflow: Not installed
2023-09-13 12:00:38,856:INFO:              gradio: Not installed
2023-09-13 12:00:38,856:INFO:             fastapi: Not installed
2023-09-13 12:00:38,856:INFO:             uvicorn: Not installed
2023-09-13 12:00:38,856:INFO:              m2cgen: Not installed
2023-09-13 12:00:38,857:INFO:           evidently: Not installed
2023-09-13 12:00:38,857:INFO:               fugue: Not installed
2023-09-13 12:00:38,857:INFO:           streamlit: Not installed
2023-09-13 12:00:38,857:INFO:             prophet: Not installed
2023-09-13 12:00:38,857:INFO:None
2023-09-13 12:00:38,857:INFO:Set up data.
2023-09-13 12:00:38,926:INFO:Set up train/test split.
2023-09-13 12:00:38,968:INFO:Set up index.
2023-09-13 12:00:38,969:INFO:Set up folding strategy.
2023-09-13 12:00:38,969:INFO:Assigning column types.
2023-09-13 12:00:38,974:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-13 12:00:39,014:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-13 12:00:39,016:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-13 12:00:39,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:39,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:39,085:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-13 12:00:39,086:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-13 12:00:39,111:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:39,111:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:39,111:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-13 12:00:39,152:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-13 12:00:39,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:39,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:39,215:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-13 12:00:39,239:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:39,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:39,239:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-09-13 12:00:39,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:39,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:39,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:39,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:39,392:INFO:Preparing preprocessing pipeline...
2023-09-13 12:00:39,393:INFO:Set up label encoding.
2023-09-13 12:00:39,394:INFO:Set up simple imputation.
2023-09-13 12:00:39,405:INFO:Set up encoding of ordinal features.
2023-09-13 12:00:39,409:INFO:Set up encoding of categorical features.
2023-09-13 12:00:39,410:INFO:Set up column name cleaning.
2023-09-13 12:00:40,644:INFO:Finished creating preprocessing pipeline.
2023-09-13 12:00:40,668:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-09-13 12:00:40,668:INFO:Creating final display dataframe.
2023-09-13 12:00:41,508:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (48842, 15)
5        Transformed data shape        (48842, 67)
6   Transformed train set shape        (34189, 67)
7    Transformed test set shape        (14653, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Fold Generator    StratifiedKFold
18                  Fold Number                 10
19                     CPU Jobs                 -1
20                      Use GPU              False
21               Log Experiment              False
22              Experiment Name   clf-default-name
23                          USI               624f
2023-09-13 12:00:41,602:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:41,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:41,680:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:41,681:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-13 12:00:41,682:INFO:setup() successfully completed in 2.95s...............
2023-09-13 12:01:06,301:INFO:Initializing create_model()
2023-09-13 12:01:06,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4e2b752fb0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-13 12:01:06,302:INFO:Checking exceptions
2023-09-13 12:01:06,364:INFO:Importing libraries
2023-09-13 12:01:06,364:INFO:Copying training dataset
2023-09-13 12:01:06,393:INFO:Defining folds
2023-09-13 12:01:06,393:INFO:Declaring metric variables
2023-09-13 12:01:06,413:INFO:Importing untrained model
2023-09-13 12:01:06,424:INFO:Logistic Regression Imported successfully
2023-09-13 12:01:06,440:INFO:Starting cross validation
2023-09-13 12:01:06,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-13 12:01:17,275:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-09-13 12:01:22,107:INFO:Calculating mean and std
2023-09-13 12:01:22,111:INFO:Creating metrics dataframe
2023-09-13 12:01:22,121:INFO:Finalizing model
2023-09-13 12:01:23,296:INFO:Uploading results into container
2023-09-13 12:01:23,297:INFO:Uploading model into container now
2023-09-13 12:01:23,321:INFO:_master_model_container: 1
2023-09-13 12:01:23,322:INFO:_display_container: 2
2023-09-13 12:01:23,322:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-13 12:01:23,322:INFO:create_model() successfully completed......................................
2023-09-14 18:41:24,072:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 18:41:24,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 18:41:24,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 18:41:24,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 18:41:50,513:INFO:PyCaret ClassificationExperiment
2023-09-14 18:41:50,513:INFO:Logging name: clf-default-name
2023-09-14 18:41:50,513:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-09-14 18:41:50,513:INFO:version 3.0.4
2023-09-14 18:41:50,513:INFO:Initializing setup()
2023-09-14 18:41:50,514:INFO:self.USI: 2b45
2023-09-14 18:41:50,514:INFO:self._variable_keys: {'html_param', 'X_test', 'idx', 'fold_generator', 'fold_shuffle_param', 'data', 'gpu_n_jobs_param', 'y', 'X', 'fold_groups_param', 'X_train', 'log_plots_param', 'pipeline', 'memory', '_available_plots', 'exp_id', 'USI', 'y_train', 'target_param', 'y_test', '_ml_usecase', 'n_jobs_param', 'is_multiclass', 'fix_imbalance', 'exp_name_log', 'seed', 'logging_param', 'gpu_param'}
2023-09-14 18:41:50,514:INFO:Checking environment
2023-09-14 18:41:50,514:INFO:python_version: 3.10.12
2023-09-14 18:41:50,514:INFO:python_build: ('main', 'Jun 11 2023 05:26:28')
2023-09-14 18:41:50,514:INFO:machine: x86_64
2023-09-14 18:41:50,514:INFO:platform: Linux-6.2.0-32-generic-x86_64-with-glibc2.35
2023-09-14 18:41:50,514:INFO:Memory: svmem(total=8140140544, available=2682257408, percent=67.0, used=4404203520, free=499511296, active=2668851200, inactive=4120342528, buffers=128966656, cached=3107459072, shared=714059776, slab=480256000)
2023-09-14 18:41:50,515:INFO:Physical Core: 4
2023-09-14 18:41:50,515:INFO:Logical Core: 8
2023-09-14 18:41:50,516:INFO:Checking libraries
2023-09-14 18:41:50,516:INFO:System:
2023-09-14 18:41:50,516:INFO:    python: 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0]
2023-09-14 18:41:50,516:INFO:executable: /bin/python
2023-09-14 18:41:50,516:INFO:   machine: Linux-6.2.0-32-generic-x86_64-with-glibc2.35
2023-09-14 18:41:50,516:INFO:PyCaret required dependencies:
2023-09-14 18:41:50,584:INFO:                 pip: 22.0.2
2023-09-14 18:41:50,584:INFO:          setuptools: 59.6.0
2023-09-14 18:41:50,584:INFO:             pycaret: 3.0.4
2023-09-14 18:41:50,585:INFO:             IPython: 7.31.1
2023-09-14 18:41:50,585:INFO:          ipywidgets: 6.0.0
2023-09-14 18:41:50,585:INFO:                tqdm: 4.65.0
2023-09-14 18:41:50,585:INFO:               numpy: 1.21.5
2023-09-14 18:41:50,585:INFO:              pandas: 1.5.2
2023-09-14 18:41:50,585:INFO:              jinja2: 3.0.3
2023-09-14 18:41:50,585:INFO:               scipy: 1.8.0
2023-09-14 18:41:50,585:INFO:              joblib: 1.2.0
2023-09-14 18:41:50,585:INFO:             sklearn: 1.2.0
2023-09-14 18:41:50,585:INFO:                pyod: 1.1.0
2023-09-14 18:41:50,585:INFO:            imblearn: 0.11.0
2023-09-14 18:41:50,585:INFO:   category_encoders: 2.6.2
2023-09-14 18:41:50,585:INFO:            lightgbm: 4.0.0
2023-09-14 18:41:50,585:INFO:               numba: 0.57.1
2023-09-14 18:41:50,585:INFO:            requests: 2.25.1
2023-09-14 18:41:50,585:INFO:          matplotlib: 3.5.1
2023-09-14 18:41:50,585:INFO:          scikitplot: 0.3.7
2023-09-14 18:41:50,585:INFO:         yellowbrick: 1.5
2023-09-14 18:41:50,585:INFO:              plotly: 5.16.1
2023-09-14 18:41:50,585:INFO:    plotly-resampler: Not installed
2023-09-14 18:41:50,585:INFO:             kaleido: 0.2.1
2023-09-14 18:41:50,585:INFO:           schemdraw: 0.15
2023-09-14 18:41:50,585:INFO:         statsmodels: 0.14.0
2023-09-14 18:41:50,585:INFO:              sktime: 0.22.0
2023-09-14 18:41:50,586:INFO:               tbats: 1.1.3
2023-09-14 18:41:50,586:INFO:            pmdarima: 2.0.3
2023-09-14 18:41:50,586:INFO:              psutil: 5.9.0
2023-09-14 18:41:50,586:INFO:          markupsafe: 2.0.1
2023-09-14 18:41:50,586:INFO:             pickle5: Not installed
2023-09-14 18:41:50,586:INFO:         cloudpickle: 2.2.1
2023-09-14 18:41:50,586:INFO:         deprecation: 2.1.0
2023-09-14 18:41:50,586:INFO:              xxhash: 3.3.0
2023-09-14 18:41:50,586:INFO:           wurlitzer: 3.0.3
2023-09-14 18:41:50,586:INFO:PyCaret optional dependencies:
2023-09-14 18:41:50,599:INFO:                shap: Not installed
2023-09-14 18:41:50,599:INFO:           interpret: Not installed
2023-09-14 18:41:50,599:INFO:                umap: Not installed
2023-09-14 18:41:50,599:INFO:    pandas_profiling: Not installed
2023-09-14 18:41:50,599:INFO:  explainerdashboard: Not installed
2023-09-14 18:41:50,599:INFO:             autoviz: Not installed
2023-09-14 18:41:50,599:INFO:           fairlearn: Not installed
2023-09-14 18:41:50,599:INFO:          deepchecks: Not installed
2023-09-14 18:41:50,599:INFO:             xgboost: Not installed
2023-09-14 18:41:50,599:INFO:            catboost: Not installed
2023-09-14 18:41:50,599:INFO:              kmodes: Not installed
2023-09-14 18:41:50,599:INFO:             mlxtend: Not installed
2023-09-14 18:41:50,599:INFO:       statsforecast: Not installed
2023-09-14 18:41:50,599:INFO:        tune_sklearn: Not installed
2023-09-14 18:41:50,599:INFO:                 ray: Not installed
2023-09-14 18:41:50,599:INFO:            hyperopt: Not installed
2023-09-14 18:41:50,599:INFO:              optuna: Not installed
2023-09-14 18:41:50,599:INFO:               skopt: Not installed
2023-09-14 18:41:50,599:INFO:              mlflow: Not installed
2023-09-14 18:41:50,599:INFO:              gradio: Not installed
2023-09-14 18:41:50,600:INFO:             fastapi: Not installed
2023-09-14 18:41:50,600:INFO:             uvicorn: Not installed
2023-09-14 18:41:50,600:INFO:              m2cgen: Not installed
2023-09-14 18:41:50,600:INFO:           evidently: Not installed
2023-09-14 18:41:50,600:INFO:               fugue: Not installed
2023-09-14 18:41:50,600:INFO:           streamlit: Not installed
2023-09-14 18:41:50,600:INFO:             prophet: Not installed
2023-09-14 18:41:50,600:INFO:None
2023-09-14 18:41:50,600:INFO:Set up data.
2023-09-14 18:41:50,648:INFO:Set up train/test split.
2023-09-14 18:41:50,691:INFO:Set up index.
2023-09-14 18:41:50,692:INFO:Set up folding strategy.
2023-09-14 18:41:50,692:INFO:Assigning column types.
2023-09-14 18:41:50,698:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-14 18:41:50,740:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-14 18:41:50,742:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-14 18:41:50,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:50,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:50,827:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-14 18:41:50,827:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-14 18:41:50,853:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:50,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:50,854:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-14 18:41:50,894:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-14 18:41:50,920:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:50,920:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:50,962:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-09-14 18:41:50,987:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:50,988:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:50,989:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-09-14 18:41:51,062:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:51,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:51,136:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:51,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:51,138:INFO:Preparing preprocessing pipeline...
2023-09-14 18:41:51,144:INFO:Set up label encoding.
2023-09-14 18:41:51,144:INFO:Set up simple imputation.
2023-09-14 18:41:51,159:INFO:Set up encoding of ordinal features.
2023-09-14 18:41:51,165:INFO:Set up encoding of categorical features.
2023-09-14 18:41:51,167:INFO:Set up column name cleaning.
2023-09-14 18:41:51,713:INFO:Finished creating preprocessing pipeline.
2023-09-14 18:41:51,743:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'fnlwgt', 'educational-num',
                                             'capital-gain', 'capital-loss',
                                             'hours-per-week'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                 TransformerWrapper(exclude=None, include=['native-country'],
                                    transformer=TargetEncoder(cols=['native-country'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-09-14 18:41:51,743:INFO:Creating final display dataframe.
2023-09-14 18:41:52,020:INFO:Setup _display_container:                     Description              Value
0                    Session id                123
1                        Target             income
2                   Target type             Binary
3                Target mapping  <=50K: 0, >50K: 1
4           Original data shape        (48842, 15)
5        Transformed data shape        (48842, 67)
6   Transformed train set shape        (34189, 67)
7    Transformed test set shape        (14653, 67)
8              Ordinal features                  1
9              Numeric features                  6
10         Categorical features                  8
11                   Preprocess               True
12              Imputation type             simple
13           Numeric imputation               mean
14       Categorical imputation               mode
15     Maximum one-hot encoding                 25
16              Encoding method               None
17               Fold Generator    StratifiedKFold
18                  Fold Number                 10
19                     CPU Jobs                 -1
20                      Use GPU              False
21               Log Experiment              False
22              Experiment Name   clf-default-name
23                          USI               2b45
2023-09-14 18:41:52,112:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:52,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:52,185:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:52,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:41:52,186:INFO:setup() successfully completed in 1.7s...............
2023-09-14 18:42:24,005:INFO:Initializing create_model()
2023-09-14 18:42:24,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fd9e4777970>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-14 18:42:24,005:INFO:Checking exceptions
2023-09-14 18:42:24,108:INFO:Importing libraries
2023-09-14 18:42:24,108:INFO:Copying training dataset
2023-09-14 18:42:24,136:INFO:Defining folds
2023-09-14 18:42:24,136:INFO:Declaring metric variables
2023-09-14 18:42:24,142:INFO:Importing untrained model
2023-09-14 18:42:24,147:INFO:Logistic Regression Imported successfully
2023-09-14 18:42:24,186:INFO:Starting cross validation
2023-09-14 18:42:24,190:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-14 18:42:31,529:INFO:Calculating mean and std
2023-09-14 18:42:31,531:INFO:Creating metrics dataframe
2023-09-14 18:42:31,540:INFO:Finalizing model
2023-09-14 18:42:32,631:INFO:Uploading results into container
2023-09-14 18:42:32,632:INFO:Uploading model into container now
2023-09-14 18:42:32,645:INFO:_master_model_container: 1
2023-09-14 18:42:32,645:INFO:_display_container: 2
2023-09-14 18:42:32,646:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-09-14 18:42:32,646:INFO:create_model() successfully completed......................................
2023-09-14 18:42:46,950:INFO:Initializing get_config()
2023-09-14 18:42:46,950:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fd9e4777970>, variable=X_train)
2023-09-14 18:42:46,950:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2023-09-14 18:42:47,028:WARNING:/home/ayush/.local/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2023-09-14 18:42:47,058:INFO:Variable:  returned as        age         workclass  fnlwgt     education  educational-num  \
6566    45           Private  264514     Bachelors               13   
37091   39           Private  139743       HS-grad                9   
18744   46           Private  174224     Assoc-voc               11   
31352   39           Private  174924       HS-grad                9   
2223    25         State-gov  222800  Some-college               10   
...    ...               ...     ...           ...              ...   
27340   72                 ?  177121     Bachelors               13   
30792   50  Self-emp-not-inc  204402       HS-grad                9   
12898   30           Private  177437     Bachelors               13   
15821   38         Local-gov  172016     Bachelors               13   
17559   47           Private  386136       HS-grad                9   

           marital-status        occupation   relationship  \
6566             Divorced      Adm-clerical  Not-in-family   
37091           Separated      Adm-clerical  Not-in-family   
18744            Divorced   Protective-serv  Not-in-family   
31352           Separated   Exec-managerial  Not-in-family   
2223   Married-civ-spouse   Protective-serv        Husband   
...                   ...               ...            ...   
27340  Married-civ-spouse                 ?        Husband   
30792  Married-civ-spouse   Farming-fishing        Husband   
12898            Divorced             Sales  Not-in-family   
15821            Divorced    Prof-specialty      Own-child   
17559  Married-civ-spouse  Transport-moving        Husband   

                     race  gender  capital-gain  capital-loss  hours-per-week  \
6566   Asian-Pac-Islander  Female             0             0              40   
37091               White  Female             0             0              20   
18744               Black    Male             0             0              40   
31352               White    Male         14344             0              40   
2223                White    Male             0             0              40   
...                   ...     ...           ...           ...             ...   
27340               White    Male             0             0               3   
30792               White    Male             0             0              84   
12898               White    Male             0             0              40   
15821               Black  Female             0             0              40   
17559               White    Male             0             0              35   

      native-country  
6566     Philippines  
37091  United-States  
18744  United-States  
31352  United-States  
2223   United-States  
...              ...  
27340  United-States  
30792  United-States  
12898  United-States  
15821  United-States  
17559  United-States  

[34189 rows x 14 columns]
2023-09-14 18:42:47,058:INFO:get_config() successfully completed......................................
2023-09-14 23:46:09,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:46:09,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:46:09,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:46:09,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:46:22,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:46:22,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:46:22,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:46:22,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:46:40,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:46:40,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:46:40,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:46:40,840:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:46:56,599:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:46:56,599:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:46:56,599:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:46:56,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:47:18,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:47:18,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:47:18,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:47:18,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:47:37,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:47:37,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:47:37,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:47:37,616:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:48:16,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:48:16,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:48:16,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:48:16,289:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:48:54,102:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:48:54,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:48:54,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:48:54,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:49:21,583:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:49:21,583:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:49:21,583:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:49:21,583:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:50:02,788:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:50:02,788:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:50:02,788:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:50:02,788:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:55:07,714:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:55:07,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:55:07,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 23:55:07,716:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
